<trace saxon-version="9.1.0.8" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
 <xsl:variable name="rewrite-document-uris" as="xs:string" select="'false'" line="122" column="74" module="uri.xsl">
 </xsl:variable>
 <xsl:variable name="document-uri-pattern-match" as="xs:string" line="143" column="61" module="uri.xsl">
 </xsl:variable>
 <xsl:variable name="f:vTypeConstructors" line="13" column="44" module="func-type.xsl">
  <LRE name="f:unsignedByte" line="14" column="42" module="func-type.xsl">
   <ATTR name="t" line="14" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:unsignedShort" line="15" column="44" module="func-type.xsl">
   <ATTR name="t" line="15" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:unsignedInt" line="16" column="40" module="func-type.xsl">
   <ATTR name="t" line="16" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:unsignedLong" line="17" column="42" module="func-type.xsl">
   <ATTR name="t" line="17" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:positiveInteger" line="18" column="48" module="func-type.xsl">
   <ATTR name="t" line="18" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:nonNegativeInteger" line="19" column="54" module="func-type.xsl">
   <ATTR name="t" line="19" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:nonPositiveInteger" line="20" column="54" module="func-type.xsl">
   <ATTR name="t" line="20" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:byte" line="21" column="26" module="func-type.xsl">
   <ATTR name="t" line="21" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:short" line="22" column="28" module="func-type.xsl">
   <ATTR name="t" line="22" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:int" line="23" column="24" module="func-type.xsl">
   <ATTR name="t" line="23" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:long" line="24" column="26" module="func-type.xsl">
   <ATTR name="t" line="24" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:integer" line="25" column="32" module="func-type.xsl">
   <ATTR name="t" line="25" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:decimal" line="26" column="32" module="func-type.xsl">
   <ATTR name="t" line="26" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:double" line="27" column="30" module="func-type.xsl">
   <ATTR name="t" line="27" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:float" line="28" column="28" module="func-type.xsl">
   <ATTR name="t" line="28" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:NMTOKEN" line="29" column="32" module="func-type.xsl">
   <ATTR name="t" line="29" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:NMTOKENS" line="30" column="34" module="func-type.xsl">
   <ATTR name="t" line="30" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:ENTITIES" line="31" column="34" module="func-type.xsl">
   <ATTR name="t" line="31" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:ENTITY" line="32" column="30" module="func-type.xsl">
   <ATTR name="t" line="32" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:IDREF" line="33" column="28" module="func-type.xsl">
   <ATTR name="t" line="33" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:IDREFS" line="34" column="30" module="func-type.xsl">
   <ATTR name="t" line="34" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:ID" line="35" column="22" module="func-type.xsl">
   <ATTR name="t" line="35" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:NCName" line="36" column="30" module="func-type.xsl">
   <ATTR name="t" line="36" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:Name" line="37" column="26" module="func-type.xsl">
   <ATTR name="t" line="37" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:language" line="38" column="34" module="func-type.xsl">
   <ATTR name="t" line="38" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:token" line="39" column="28" module="func-type.xsl">
   <ATTR name="t" line="39" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:normalizedString" line="40" column="50" module="func-type.xsl">
   <ATTR name="t" line="40" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:boolean" line="41" column="32" module="func-type.xsl">
   <ATTR name="t" line="41" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:duration" line="42" column="34" module="func-type.xsl">
   <ATTR name="t" line="42" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:dateTime" line="43" column="34" module="func-type.xsl">
   <ATTR name="t" line="43" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:time" line="44" column="26" module="func-type.xsl">
   <ATTR name="t" line="44" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:date" line="45" column="26" module="func-type.xsl">
   <ATTR name="t" line="45" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:gYearMonth" line="46" column="38" module="func-type.xsl">
   <ATTR name="t" line="46" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:gYear" line="47" column="28" module="func-type.xsl">
   <ATTR name="t" line="47" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:gMonthDay" line="48" column="36" module="func-type.xsl">
   <ATTR name="t" line="48" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:gDay" line="49" column="26" module="func-type.xsl">
   <ATTR name="t" line="49" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:gMonth" line="50" column="30" module="func-type.xsl">
   <ATTR name="t" line="50" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:base64Binary" line="51" column="42" module="func-type.xsl">
   <ATTR name="t" line="51" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:hexBinary" line="52" column="36" module="func-type.xsl">
   <ATTR name="t" line="52" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:anyURI" line="53" column="30" module="func-type.xsl">
   <ATTR name="t" line="53" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:QName" line="54" column="28" module="func-type.xsl">
   <ATTR name="t" line="54" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:NOTATION" line="55" column="34" module="func-type.xsl">
   <ATTR name="t" line="55" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:string" line="56" column="30" module="func-type.xsl">
   <ATTR name="t" line="56" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:yearMonthDuration" line="57" column="52" module="func-type.xsl">
   <ATTR name="t" line="57" module="func-type.xsl">
   </ATTR>
  </LRE>
  <LRE name="f:dayTimeDuration" line="58" column="48" module="func-type.xsl">
   <ATTR name="t" line="58" module="func-type.xsl">
   </ATTR>
  </LRE>
 </xsl:variable>
 <xsl:variable name="krextor:dummy-node" as="element(krextor:dummy-node)" line="381" column="74" module="generic.xsl">
  <LRE name="krextor:dummy-node" line="382" column="23" module="generic.xsl">
  </LRE>
 </xsl:variable>
 <xsl:variable name="resolve-relative-uris" as="xs:boolean" select="true()" line="96" column="74" module="uri.xsl">
 </xsl:variable>
 <xsl:variable name="document-uri-pattern-replace" as="xs:string" line="146" column="63" module="uri.xsl">
 </xsl:variable>
 <xsl:variable name="rewrite-document-uris-boolean" as="xs:boolean" select="$rewrite-document-uris eq 'true'" line="125" column="108" module="uri.xsl">
 </xsl:variable>
 <xsl:variable name="traverse-xincludes" as="xs:boolean" select="true()" line="58" column="71" module="generic.xsl">
 </xsl:variable>
 <xsl:variable name="merge-url-pattern-replace" as="xs:string" select="''" line="66" column="73" module="generic.xsl">
 </xsl:variable>
 <xsl:variable name="krextor:uri-properties" as="element()*" select="()" line="96" column="74" module="generic.xsl">
 </xsl:variable>
 <xsl:variable name="krextor:literal-properties" line="126" column="49" module="aml.xsl">
  <LRE name="FileName" line="127" column="69" module="aml.xsl">
   <ATTR name="property" line="127" module="aml.xsl">
   </ATTR>
   <ATTR name="krextor:attribute" line="127" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="SchemaVersion" line="128" column="79" module="aml.xsl">
   <ATTR name="property" line="128" module="aml.xsl">
   </ATTR>
   <ATTR name="krextor:attribute" line="128" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="WriterName" line="130" column="49" module="aml.xsl">
   <ATTR name="property" line="130" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="WriterID" line="131" column="69" module="aml.xsl">
   <ATTR name="property" line="131" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="131" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="WriterVendor" line="132" column="77" module="aml.xsl">
   <ATTR name="property" line="132" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="132" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="WriterVendorURL" line="133" column="83" module="aml.xsl">
   <ATTR name="property" line="133" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="133" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="WriterVersion" line="134" column="79" module="aml.xsl">
   <ATTR name="property" line="134" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="134" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="WriterRelease" line="135" column="79" module="aml.xsl">
   <ATTR name="property" line="135" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="135" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="LastWritingDateTime" line="136" column="93" module="aml.xsl">
   <ATTR name="property" line="136" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="136" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="WriterProjectTitle" line="137" column="89" module="aml.xsl">
   <ATTR name="property" line="137" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="137" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="WriterProjectID" line="138" column="83" module="aml.xsl">
   <ATTR name="property" line="138" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="138" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="Path" line="140" column="93" module="aml.xsl">
   <ATTR name="property" line="140" module="aml.xsl">
   </ATTR>
   <ATTR name="krextor:attribute" line="140" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="140" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="Alias" line="141" column="100" module="aml.xsl">
   <ATTR name="property" line="141" module="aml.xsl">
   </ATTR>
   <ATTR name="krextor:attribute" line="141" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="141" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="AttributeDataType" line="146" column="98" module="aml.xsl">
   <ATTR name="property" line="146" module="aml.xsl">
   </ATTR>
   <ATTR name="krextor:attribute" line="146" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="146" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="Description" line="147" column="95" module="aml.xsl">
   <ATTR name="property" line="147" module="aml.xsl">
   </ATTR>
   <ATTR name="krextor:attribute" line="147" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="147" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="Value" line="148" column="92" module="aml.xsl">
   <ATTR name="property" line="148" module="aml.xsl">
   </ATTR>
   <ATTR name="krextor:attribute" line="148" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="148" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="Name" line="149" column="90" module="aml.xsl">
   <ATTR name="property" line="149" module="aml.xsl">
   </ATTR>
   <ATTR name="krextor:attribute" line="149" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="149" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="ID" line="152" column="81" module="aml.xsl">
   <ATTR name="property" line="152" module="aml.xsl">
   </ATTR>
   <ATTR name="krextor:attribute" line="152" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="152" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="RefBaseSystemUnitPath" line="153" column="112" module="aml.xsl">
   <ATTR name="property" line="153" module="aml.xsl">
   </ATTR>
   <ATTR name="krextor:attribute" line="153" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="153" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="RefBaseClassPath" line="155" column="102" module="aml.xsl">
   <ATTR name="property" line="155" module="aml.xsl">
   </ATTR>
   <ATTR name="krextor:attribute" line="155" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="155" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="RefRoleClassPath" line="157" column="102" module="aml.xsl">
   <ATTR name="property" line="157" module="aml.xsl">
   </ATTR>
   <ATTR name="krextor:attribute" line="157" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="157" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="RefBaseRoleClassPath" line="159" column="110" module="aml.xsl">
   <ATTR name="property" line="159" module="aml.xsl">
   </ATTR>
   <ATTR name="krextor:attribute" line="159" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="159" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="Version" line="161" column="64" module="aml.xsl">
   <ATTR name="property" line="161" module="aml.xsl">
   </ATTR>
   <ATTR name="datatype" line="161" module="aml.xsl">
   </ATTR>
  </LRE>
 </xsl:variable>
 <xsl:variable name="debug" as="xs:boolean" select="false()" line="55" column="59" module="generic.xsl">
 </xsl:variable>
 <xsl:variable name="krextor:resources" line="78" column="40" module="aml.xsl">
  <LRE name="CAEXFile" line="79" column="34" module="aml.xsl">
   <ATTR name="type" line="79" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="AdditionalInformation" line="80" column="114" module="aml.xsl">
   <ATTR name="type" line="80" module="aml.xsl">
   </ATTR>
   <ATTR name="related-via-properties" line="80" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="ExternalReference" line="82" column="103" module="aml.xsl">
   <ATTR name="type" line="82" module="aml.xsl">
   </ATTR>
   <ATTR name="related-via-properties" line="82" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="InstanceHierarchy" line="84" column="103" module="aml.xsl">
   <ATTR name="type" line="84" module="aml.xsl">
   </ATTR>
   <ATTR name="related-via-properties" line="84" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="InterfaceClassLib" line="86" column="103" module="aml.xsl">
   <ATTR name="type" line="86" module="aml.xsl">
   </ATTR>
   <ATTR name="related-via-properties" line="86" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="RoleClassLib" line="88" column="88" module="aml.xsl">
   <ATTR name="type" line="88" module="aml.xsl">
   </ATTR>
   <ATTR name="related-via-properties" line="88" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="SystemUnitClassLib" line="90" column="106" module="aml.xsl">
   <ATTR name="type" line="90" module="aml.xsl">
   </ATTR>
   <ATTR name="related-via-properties" line="90" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="InternalElement" line="92" column="97" module="aml.xsl">
   <ATTR name="type" line="92" module="aml.xsl">
   </ATTR>
   <ATTR name="related-via-properties" line="92" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="Attribute" line="93" column="79" module="aml.xsl">
   <ATTR name="type" line="93" module="aml.xsl">
   </ATTR>
   <ATTR name="related-via-properties" line="93" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="RefSemantic" line="94" column="85" module="aml.xsl">
   <ATTR name="type" line="94" module="aml.xsl">
   </ATTR>
   <ATTR name="related-via-properties" line="94" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="ExternalInterface" line="95" column="103" module="aml.xsl">
   <ATTR name="type" line="95" module="aml.xsl">
   </ATTR>
   <ATTR name="related-via-properties" line="95" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="SupportedRoleClass" line="96" column="106" module="aml.xsl">
   <ATTR name="type" line="96" module="aml.xsl">
   </ATTR>
   <ATTR name="related-via-properties" line="96" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="RoleRequirements" line="98" column="100" module="aml.xsl">
   <ATTR name="type" line="98" module="aml.xsl">
   </ATTR>
   <ATTR name="related-via-properties" line="98" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="InterfaceClass" line="99" column="94" module="aml.xsl">
   <ATTR name="type" line="99" module="aml.xsl">
   </ATTR>
   <ATTR name="related-via-properties" line="99" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="SystemUnitClass" line="101" column="97" module="aml.xsl">
   <ATTR name="type" line="101" module="aml.xsl">
   </ATTR>
   <ATTR name="related-via-properties" line="101" module="aml.xsl">
   </ATTR>
  </LRE>
  <LRE name="RoleClass" line="103" column="97" module="aml.xsl">
   <ATTR name="type" line="103" module="aml.xsl">
   </ATTR>
   <ATTR name="related-via-properties" line="103" module="aml.xsl">
   </ATTR>
  </LRE>
 </xsl:variable>
 <xsl:variable name="merge-url-pattern-match" as="xs:string" select="''" line="64" column="71" module="generic.xsl">
 </xsl:variable>
 <xsl:variable name="autogenerate-fragment-uris" select="'global-element-index'" line="73" column="80" module="aml.xsl">
 </xsl:variable>
 <source node="/" line="0" file="">
  <xsl:template match="/" line="709" column="25" module="generic.xsl">
   <xsl:apply-templates select="/" mode="krextor:main" line="710" column="51" module="generic.xsl">
    <source node="/" line="0" file="">
     <xsl:template match="/" mode="krextor:main" line="48" column="46" module="aml.xsl">
      <xsl:apply-imports line="49" column="26" module="aml.xsl">
       <xsl:template match="/" mode="krextor:main" line="78" column="45" module="turtle.xsl">
        <xsl:variable name="rxr" line="80" module="turtle.xsl">
         <xsl:for-each-group select="$rxr/rxr:graph/rxr:triple" group-by="krextor:rxr-node-to-turtle(rxr:subject)" line="84" column="57" module="turtle.xsl">
          <xsl:apply-imports line="81" column="22" module="turtle.xsl">
           <xsl:template match="/" mode="krextor:main" line="110" column="45" module="rxr.xsl">
            <LRE name="rxr:graph" line="111" column="13" module="rxr.xsl">
             <xsl:apply-imports line="112" column="22" module="rxr.xsl">
              <xsl:template name="krextor:main" match="/" mode="krextor:main" line="714" column="65" module="generic.xsl">
               <xsl:variable name="krextor:base-uri" as="xs:string" select="krextor:base-uri(.)" tunnel="yes" line="715" column="91" module="generic.xsl">
               </xsl:variable>
               <xsl:variable name="merging-rdf" as="xs:boolean" select="$merge-url-pattern-match != ''" tunnel="yes" line="716" column="105" module="generic.xsl">
               </xsl:variable>
               <xsl:apply-templates mode="krextor:main" line="717" column="39" module="generic.xsl">
                <source node="/CAEXFile" line="-1" file="">
                 <xsl:template match="CAEXFile |CAEXFile/AdditionalInformation |CAEXFile/ExternalReference |CAEXFile/InstanceHierarchy |CAEXFile/RoleClassLib |CAEXFile/SystemUnitClassLib |CAEXFile/InstanceHierarchy/InternalElement |Attribute |RefSemantic |ExternalInterface |SupportedRoleClass |RoleRequirements |InterfaceClassLib |InterfaceClass |RoleClass |SystemUnitClass" mode="krextor:main" line="121" column="45" module="aml.xsl">
                  <xsl:apply-templates select="." mode="krextor:create-resource" line="122" column="69" module="aml.xsl">
                   <source node="/CAEXFile" line="-1" file="">
                    <xsl:template match="*" mode="krextor:create-resource" line="398" column="56" module="generic.xsl">
                     <xsl:choose line="399" column="10" module="generic.xsl">
                      <xsl:variable name="mapping" line="406" module="generic.xsl">
                       <xsl:call-template name="krextor:create-resource" line="408" column="49" module="generic.xsl">
                        <xsl:template name="krextor:create-resource" line="269" column="46" module="generic.xsl">
                         <xsl:variable name="subject" select="()" as="xs:string?" line="270" column="53" module="generic.xsl">
                         </xsl:variable>
                         <xsl:variable name="related-via-properties" as="xs:string*" select="()" tunnel="yes" line="271" column="81" module="generic.xsl">
                         </xsl:variable>
                         <xsl:variable name="related-via-inverse-properties" as="xs:string*" select="()" tunnel="yes" line="272" column="89" module="generic.xsl">
                         </xsl:variable>
                         <xsl:variable name="type" select="()" as="xs:string*" line="273" column="50" module="generic.xsl">
                         </xsl:variable>
                         <xsl:variable name="properties" as="node()*" line="274" column="41" module="generic.xsl">
                         </xsl:variable>
                         <xsl:variable name="process-next" as="node()*" select="*|@*" line="275" column="57" module="generic.xsl">
                         </xsl:variable>
                         <xsl:variable name="subject-uri" as="xs:string" tunnel="yes" line="277" column="57" module="generic.xsl">
                         </xsl:variable>
                         <xsl:variable name="blank-node" as="xs:boolean" select="false()" line="278" column="61" module="generic.xsl">
                         </xsl:variable>
                         <xsl:variable name="this-blank-node-id" select="()" as="xs:string?" line="279" column="64" module="generic.xsl">
                         </xsl:variable>
                         <xsl:variable name="collection" as="xs:boolean" select="false()" line="280" column="61" module="generic.xsl">
                         </xsl:variable>
                         <xsl:variable name="nested-call" as="xs:boolean" select="false()" tunnel="yes" line="281" column="75" module="generic.xsl">
                         </xsl:variable>
                         <xsl:variable name="autogenerate-fragment-uri" line="283" module="generic.xsl">
                          <xsl:variable name="generated-uri" line="290" module="generic.xsl">
                           <xsl:function name="krextor:uri-generation-method" as="xs:string*" line="292" column="68" module="uri.xsl">
                            <xsl:apply-templates select="$node" mode="krextor:uri-generation-method" line="295" column="44" module="uri.xsl">
                             <source node="/CAEXFile" line="-1" file="">
                              <xsl:template match="node()|attribute() (: attribute() doesn't seem to be subsumed by node() :)" mode="krextor:uri-generation-method" as="xs:string*" line="287" column="68" module="uri.xsl">
                              </xsl:template>
                             </source><!-- /CAEXFile -->
                            </xsl:apply-templates>
                           </xsl:function>
                           <xsl:function name="krextor:generate-uri" as="xs:anyURI?" line="208" column="59" module="uri.xsl">
                            <xsl:value-of select="f:return-first(krextor:generate-uri-impl(), $autogenerate-fragment-uri, ($node, $base-uri))" line="216" column="114" module="uri.xsl">
                             <xsl:function name="krextor:generate-uri-impl" as="element(krextor:generate-uri-impl)" line="274" column="88" module="uri.xsl">
                              <LRE name="krextor:generate-uri-impl" line="275" column="30" module="uri.xsl">
                              </LRE>
                             </xsl:function>
                             <xsl:function name="f:return-first" line="64" column="37" module="util.xsl">
                              <xsl:function name="f:return-first-step" line="87" column="42" module="util.xsl">
                               <xsl:variable name="result" line="92" module="util.xsl">
                                <xsl:function name="f:apply" line="16" column="32" module="func-apply.xsl">
                                 <xsl:apply-templates select="$pFunc" mode="f:FXSL" line="21" column="56" module="func-apply.xsl">
                                  <source node="krextor:generate-uri-impl" line="-1" file="uri.xsl">
                                   <xsl:template match="krextor:generate-uri-impl" as="xs:anyURI?" mode="f:FXSL" line="279" column="79" module="uri.xsl">
                                    <xsl:variable name="arg1" as="xs:string" line="280" column="37" module="uri.xsl">
                                    </xsl:variable>
                                    <xsl:variable name="arg2" as="item()+" line="281" column="35" module="uri.xsl">
                                    </xsl:variable>
                                    <xsl:function name="krextor:generate-uri-impl" line="226" column="48" module="uri.xsl">
                                     <xsl:variable name="node" line="229" module="uri.xsl">
                                      <xsl:variable name="base-uri" line="230" module="uri.xsl">
                                       <xsl:variable name="method-element" line="231" module="uri.xsl">
                                        <xsl:apply-templates select="$method-element" line="234" column="44" module="uri.xsl">
                                         <xsl:element name="{concat('krextor-genuri:', $method)}" line="232" column="60" module="uri.xsl">
                                         </xsl:element>
                                         <source node="krextor-genuri:global-element-index" line="-1" file="">
                                          <xsl:template match="krextor-genuri:global-element-index" as="xs:string?" line="66" column="79" module="aml.xsl">
                                           <xsl:variable name="node" as="node()" line="67" column="38" module="aml.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="base-uri" as="xs:anyURI" line="68" column="45" module="aml.xsl">
                                           </xsl:variable>
                                           <xsl:function name="krextor:global-element-index" as="xs:string?" line="60" column="71" module="aml.xsl">
                                            <xsl:value-of select="concat(local-name($node), count(root($node)//*[local-name() eq local-name($node) and . &lt;&lt; $node]) + 1)" line="62" column="135" module="aml.xsl">
                                            </xsl:value-of>
                                           </xsl:function>
                                          </xsl:template>
                                         </source><!-- krextor-genuri:global-element-index -->
                                        </xsl:apply-templates>
                                       </xsl:variable>
                                      </xsl:variable>
                                     </xsl:variable>
                                    </xsl:function>
                                   </xsl:template>
                                  </source><!-- krextor:generate-uri-impl -->
                                 </xsl:apply-templates>
                                </xsl:function>
                               </xsl:variable>
                              </xsl:function>
                             </xsl:function>
                            </xsl:value-of>
                           </xsl:function>
                           <xsl:variable name="generated-blank-node" line="291" module="generic.xsl">
                            <xsl:variable name="generated-blank-node-id" line="298" module="generic.xsl">
                             <xsl:variable name="subject" line="299" module="generic.xsl">
                              <xsl:variable name="subject-type" line="300" module="generic.xsl">
                               <xsl:if test="exists($generated-uri)" line="301" column="36" module="generic.xsl">
                                <xsl:if test="$nested-call" line="302" column="30" module="generic.xsl">
                                </xsl:if>
                                <xsl:for-each select="$type" line="322" column="31" module="generic.xsl">
                                  <xsl:call-template name="krextor:output-triple-impl" line="323" column="52" module="generic.xsl">
                                   <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                    <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                    </xsl:variable>
                                    <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                    </xsl:variable>
                                    <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                    </xsl:variable>
                                    <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                    </xsl:variable>
                                    <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                    </xsl:variable>
                                    <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                    </xsl:variable>
                                    <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                    </xsl:variable>
                                    <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                    </xsl:variable>
                                    <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                    </xsl:if>
                                    <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                    </xsl:if>
                                    <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                     <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                      <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                      </xsl:variable>
                                      <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                      </xsl:variable>
                                      <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                      </xsl:variable>
                                      <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                      </xsl:variable>
                                      <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                      </xsl:variable>
                                      <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                      </xsl:variable>
                                      <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                      </xsl:variable>
                                      <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                       <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                        <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                        </xsl:attribute>
                                       </LRE>
                                       <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                        <ATTR name="uri" line="82" module="rxr.xsl">
                                        </ATTR>
                                       </LRE>
                                       <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                        <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                        </xsl:if>
                                        <xsl:choose line="87" column="11" module="rxr.xsl">
                                         <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                         </xsl:attribute>
                                        </xsl:choose>
                                       </LRE>
                                      </LRE>
                                     </xsl:template>
                                    </xsl:call-template>
                                   </xsl:template>
                                  </xsl:call-template>
                                </xsl:for-each>
                                <xsl:if test="$properties" line="333" column="29" module="generic.xsl">
                                </xsl:if>
                                <xsl:choose line="357" column="14" module="generic.xsl">
                                 <xsl:apply-templates select="$process-next" mode="krextor:main" line="366" column="67" module="generic.xsl">
                                  <source node="/CAEXFile/@FileName" line="-1" file="">
                                   <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                    <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                     <source node="/CAEXFile/@FileName" line="-1" file="">
                                      <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                       <xsl:choose line="497" column="10" module="generic.xsl">
                                        <xsl:variable name="mapping" line="504" module="generic.xsl">
                                         <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                         </xsl:if>
                                         <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                          <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                           <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                            <xsl:choose line="442" column="14" module="generic.xsl">
                                             <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                             </xsl:value-of>
                                            </xsl:choose>
                                           </xsl:variable>
                                           <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                            <xsl:choose line="460" column="10" module="generic.xsl">
                                             <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                               <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                 <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                  <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                   <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                   </xsl:value-of>
                                                  </xsl:function>
                                                 </xsl:copy-of>
                                                </xsl:function>
                                                <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                 <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                 </xsl:variable>
                                                 <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                 </xsl:variable>
                                                 <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                 </xsl:variable>
                                                 <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                 </xsl:variable>
                                                 <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                 </xsl:variable>
                                                 <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                 </xsl:variable>
                                                 <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                 </xsl:variable>
                                                 <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                 </xsl:variable>
                                                 <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                 </xsl:if>
                                                 <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                 </xsl:if>
                                                 <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                  <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                   <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                   </xsl:variable>
                                                   <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                   </xsl:variable>
                                                   <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                   </xsl:variable>
                                                   <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                   </xsl:variable>
                                                   <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                   </xsl:variable>
                                                   <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                   </xsl:variable>
                                                   <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                   </xsl:variable>
                                                   <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                    <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                     <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                     </xsl:attribute>
                                                    </LRE>
                                                    <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                     <ATTR name="uri" line="82" module="rxr.xsl">
                                                     </ATTR>
                                                    </LRE>
                                                    <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                     <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                     </xsl:if>
                                                     <xsl:choose line="87" column="11" module="rxr.xsl">
                                                      <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                       <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                       </xsl:if>
                                                       <xsl:choose line="96" column="12" module="rxr.xsl">
                                                        <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                         <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                          <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                           <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                            <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                            </xsl:variable>
                                                            <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                             <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                             </xsl:value-of>
                                                            </xsl:choose>
                                                           </xsl:template>
                                                          </xsl:call-template>
                                                         </xsl:function>
                                                        </xsl:value-of>
                                                       </xsl:choose>
                                                      </xsl:otherwise>
                                                     </xsl:choose>
                                                    </LRE>
                                                   </LRE>
                                                  </xsl:template>
                                                 </xsl:call-template>
                                                </xsl:template>
                                               </xsl:call-template>
                                             </xsl:for-each>
                                            </xsl:choose>
                                           </xsl:variable>
                                          </xsl:template>
                                         </xsl:call-template>
                                        </xsl:variable>
                                       </xsl:choose>
                                      </xsl:template>
                                     </source><!-- /CAEXFile/@FileName -->
                                    </xsl:apply-templates>
                                   </xsl:template>
                                  </source><!-- /CAEXFile/@FileName -->
                                  <source node="/CAEXFile/@SchemaVersion" line="-1" file="">
                                   <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                    <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                     <source node="/CAEXFile/@SchemaVersion" line="-1" file="">
                                      <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                       <xsl:choose line="497" column="10" module="generic.xsl">
                                        <xsl:variable name="mapping" line="504" module="generic.xsl">
                                         <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                         </xsl:if>
                                         <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                          <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                           <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                            <xsl:choose line="442" column="14" module="generic.xsl">
                                             <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                             </xsl:value-of>
                                            </xsl:choose>
                                           </xsl:variable>
                                           <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                            <xsl:choose line="460" column="10" module="generic.xsl">
                                             <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                               <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                 <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                  <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                   <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                   </xsl:value-of>
                                                  </xsl:function>
                                                 </xsl:copy-of>
                                                </xsl:function>
                                                <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                 <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                 </xsl:variable>
                                                 <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                 </xsl:variable>
                                                 <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                 </xsl:variable>
                                                 <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                 </xsl:variable>
                                                 <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                 </xsl:variable>
                                                 <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                 </xsl:variable>
                                                 <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                 </xsl:variable>
                                                 <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                 </xsl:variable>
                                                 <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                 </xsl:if>
                                                 <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                 </xsl:if>
                                                 <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                  <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                   <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                   </xsl:variable>
                                                   <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                   </xsl:variable>
                                                   <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                   </xsl:variable>
                                                   <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                   </xsl:variable>
                                                   <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                   </xsl:variable>
                                                   <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                   </xsl:variable>
                                                   <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                   </xsl:variable>
                                                   <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                    <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                     <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                     </xsl:attribute>
                                                    </LRE>
                                                    <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                     <ATTR name="uri" line="82" module="rxr.xsl">
                                                     </ATTR>
                                                    </LRE>
                                                    <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                     <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                     </xsl:if>
                                                     <xsl:choose line="87" column="11" module="rxr.xsl">
                                                      <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                       <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                       </xsl:if>
                                                       <xsl:choose line="96" column="12" module="rxr.xsl">
                                                        <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                         <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                          <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                           <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                            <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                            </xsl:variable>
                                                            <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                             <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                             </xsl:value-of>
                                                            </xsl:choose>
                                                           </xsl:template>
                                                          </xsl:call-template>
                                                         </xsl:function>
                                                        </xsl:value-of>
                                                       </xsl:choose>
                                                      </xsl:otherwise>
                                                     </xsl:choose>
                                                    </LRE>
                                                   </LRE>
                                                  </xsl:template>
                                                 </xsl:call-template>
                                                </xsl:template>
                                               </xsl:call-template>
                                             </xsl:for-each>
                                            </xsl:choose>
                                           </xsl:variable>
                                          </xsl:template>
                                         </xsl:call-template>
                                        </xsl:variable>
                                       </xsl:choose>
                                      </xsl:template>
                                     </source><!-- /CAEXFile/@SchemaVersion -->
                                    </xsl:apply-templates>
                                   </xsl:template>
                                  </source><!-- /CAEXFile/@SchemaVersion -->
                                  <source node="/CAEXFile/@xsi:noNamespaceSchemaLocation" line="-1" file="">
                                   <xsl:template match="@*|text()" mode="krextor:main" line="740" column="54" module="generic.xsl">
                                   </xsl:template>
                                  </source><!-- /CAEXFile/@xsi:noNamespaceSchemaLocation -->
                                  <source node="/CAEXFile/AdditionalInformation[1]" line="-1" file="">
                                   <xsl:template match="CAEXFile |CAEXFile/AdditionalInformation |CAEXFile/ExternalReference |CAEXFile/InstanceHierarchy |CAEXFile/RoleClassLib |CAEXFile/SystemUnitClassLib |CAEXFile/InstanceHierarchy/InternalElement |Attribute |RefSemantic |ExternalInterface |SupportedRoleClass |RoleRequirements |InterfaceClassLib |InterfaceClass |RoleClass |SystemUnitClass" mode="krextor:main" line="121" column="45" module="aml.xsl">
                                    <xsl:apply-templates select="." mode="krextor:create-resource" line="122" column="69" module="aml.xsl">
                                     <source node="/CAEXFile/AdditionalInformation[1]" line="-1" file="">
                                      <xsl:template match="*" mode="krextor:create-resource" line="398" column="56" module="generic.xsl">
                                       <xsl:choose line="399" column="10" module="generic.xsl">
                                        <xsl:variable name="mapping" line="406" module="generic.xsl">
                                         <xsl:call-template name="krextor:create-resource" line="408" column="49" module="generic.xsl">
                                          <xsl:template name="krextor:create-resource" line="269" column="46" module="generic.xsl">
                                           <xsl:variable name="subject" select="()" as="xs:string?" line="270" column="53" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="related-via-properties" as="xs:string*" select="()" tunnel="yes" line="271" column="81" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="related-via-inverse-properties" as="xs:string*" select="()" tunnel="yes" line="272" column="89" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="type" select="()" as="xs:string*" line="273" column="50" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="properties" as="node()*" line="274" column="41" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="process-next" as="node()*" select="*|@*" line="275" column="57" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="subject-uri" as="xs:string" tunnel="yes" line="277" column="57" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="blank-node" as="xs:boolean" select="false()" line="278" column="61" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="this-blank-node-id" select="()" as="xs:string?" line="279" column="64" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="collection" as="xs:boolean" select="false()" line="280" column="61" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="nested-call" as="xs:boolean" select="false()" tunnel="yes" line="281" column="75" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="autogenerate-fragment-uri" line="283" module="generic.xsl">
                                            <xsl:variable name="generated-uri" line="290" module="generic.xsl">
                                             <xsl:function name="krextor:uri-generation-method" as="xs:string*" line="292" column="68" module="uri.xsl">
                                              <xsl:apply-templates select="$node" mode="krextor:uri-generation-method" line="295" column="44" module="uri.xsl">
                                               <source node="/CAEXFile/AdditionalInformation[1]" line="-1" file="">
                                                <xsl:template match="node()|attribute() (: attribute() doesn't seem to be subsumed by node() :)" mode="krextor:uri-generation-method" as="xs:string*" line="287" column="68" module="uri.xsl">
                                                </xsl:template>
                                               </source><!-- /CAEXFile/AdditionalInformation[1] -->
                                              </xsl:apply-templates>
                                             </xsl:function>
                                             <xsl:function name="krextor:generate-uri" as="xs:anyURI?" line="208" column="59" module="uri.xsl">
                                              <xsl:value-of select="f:return-first(krextor:generate-uri-impl(), $autogenerate-fragment-uri, ($node, $base-uri))" line="216" column="114" module="uri.xsl">
                                               <xsl:function name="krextor:generate-uri-impl" as="element(krextor:generate-uri-impl)" line="274" column="88" module="uri.xsl">
                                                <LRE name="krextor:generate-uri-impl" line="275" column="30" module="uri.xsl">
                                                </LRE>
                                               </xsl:function>
                                               <xsl:function name="f:return-first" line="64" column="37" module="util.xsl">
                                                <xsl:function name="f:return-first-step" line="87" column="42" module="util.xsl">
                                                 <xsl:variable name="result" line="92" module="util.xsl">
                                                  <xsl:function name="f:apply" line="16" column="32" module="func-apply.xsl">
                                                   <xsl:apply-templates select="$pFunc" mode="f:FXSL" line="21" column="56" module="func-apply.xsl">
                                                    <source node="krextor:generate-uri-impl" line="-1" file="uri.xsl">
                                                     <xsl:template match="krextor:generate-uri-impl" as="xs:anyURI?" mode="f:FXSL" line="279" column="79" module="uri.xsl">
                                                      <xsl:variable name="arg1" as="xs:string" line="280" column="37" module="uri.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="arg2" as="item()+" line="281" column="35" module="uri.xsl">
                                                      </xsl:variable>
                                                      <xsl:function name="krextor:generate-uri-impl" line="226" column="48" module="uri.xsl">
                                                       <xsl:variable name="node" line="229" module="uri.xsl">
                                                        <xsl:variable name="base-uri" line="230" module="uri.xsl">
                                                         <xsl:variable name="method-element" line="231" module="uri.xsl">
                                                          <xsl:apply-templates select="$method-element" line="234" column="44" module="uri.xsl">
                                                           <xsl:element name="{concat('krextor-genuri:', $method)}" line="232" column="60" module="uri.xsl">
                                                           </xsl:element>
                                                           <source node="krextor-genuri:global-element-index" line="-1" file="">
                                                            <xsl:template match="krextor-genuri:global-element-index" as="xs:string?" line="66" column="79" module="aml.xsl">
                                                             <xsl:variable name="node" as="node()" line="67" column="38" module="aml.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="base-uri" as="xs:anyURI" line="68" column="45" module="aml.xsl">
                                                             </xsl:variable>
                                                             <xsl:function name="krextor:global-element-index" as="xs:string?" line="60" column="71" module="aml.xsl">
                                                              <xsl:value-of select="concat(local-name($node), count(root($node)//*[local-name() eq local-name($node) and . &lt;&lt; $node]) + 1)" line="62" column="135" module="aml.xsl">
                                                              </xsl:value-of>
                                                             </xsl:function>
                                                            </xsl:template>
                                                           </source><!-- krextor-genuri:global-element-index -->
                                                          </xsl:apply-templates>
                                                         </xsl:variable>
                                                        </xsl:variable>
                                                       </xsl:variable>
                                                      </xsl:function>
                                                     </xsl:template>
                                                    </source><!-- krextor:generate-uri-impl -->
                                                   </xsl:apply-templates>
                                                  </xsl:function>
                                                 </xsl:variable>
                                                </xsl:function>
                                               </xsl:function>
                                              </xsl:value-of>
                                             </xsl:function>
                                             <xsl:variable name="generated-blank-node" line="291" module="generic.xsl">
                                              <xsl:variable name="generated-blank-node-id" line="298" module="generic.xsl">
                                               <xsl:variable name="subject" line="299" module="generic.xsl">
                                                <xsl:variable name="subject-type" line="300" module="generic.xsl">
                                                 <xsl:if test="exists($generated-uri)" line="301" column="36" module="generic.xsl">
                                                  <xsl:if test="$nested-call" line="302" column="30" module="generic.xsl">
                                                   <xsl:call-template name="krextor:related-via-properties" line="306" column="56" module="generic.xsl">
                                                    <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                     <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:choose line="212" column="10" module="generic.xsl">
                                                      <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                       <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                        <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                         <xsl:variable name="actual-object" line="557" module="generic.xsl">
                                                          <xsl:variable name="actual-property" line="560" module="generic.xsl">
                                                           <xsl:variable name="actual-inverse" line="562" module="generic.xsl">
                                                            <xsl:choose line="563" column="14" module="generic.xsl">
                                                             <xsl:choose line="578" column="15" module="generic.xsl">
                                                              <xsl:for-each select="$actual-property" line="593" column="44" module="generic.xsl">
                                                                <xsl:call-template name="krextor:output-triple-impl" line="594" column="54" module="generic.xsl">
                                                                 <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                  <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                  </xsl:if>
                                                                  <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                  </xsl:if>
                                                                  <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                   <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                    <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                     <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                      <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                      </xsl:attribute>
                                                                     </LRE>
                                                                     <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                      <ATTR name="uri" line="82" module="rxr.xsl">
                                                                      </ATTR>
                                                                     </LRE>
                                                                     <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                      <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                      </xsl:if>
                                                                      <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                       <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </xsl:choose>
                                                                     </LRE>
                                                                    </LRE>
                                                                   </xsl:template>
                                                                  </xsl:call-template>
                                                                 </xsl:template>
                                                                </xsl:call-template>
                                                              </xsl:for-each>
                                                             </xsl:choose>
                                                            </xsl:choose>
                                                           </xsl:variable>
                                                          </xsl:variable>
                                                         </xsl:variable>
                                                        </xsl:if>
                                                       </xsl:template>
                                                      </xsl:call-template>
                                                     </xsl:choose>
                                                    </xsl:template>
                                                   </xsl:call-template>
                                                   <xsl:call-template name="krextor:related-via-properties" line="312" column="56" module="generic.xsl">
                                                    <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                     <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:choose line="212" column="10" module="generic.xsl">
                                                      <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                       <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                        <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                        </xsl:if>
                                                       </xsl:template>
                                                      </xsl:call-template>
                                                     </xsl:choose>
                                                    </xsl:template>
                                                   </xsl:call-template>
                                                  </xsl:if>
                                                  <xsl:for-each select="$type" line="322" column="31" module="generic.xsl">
                                                    <xsl:call-template name="krextor:output-triple-impl" line="323" column="52" module="generic.xsl">
                                                     <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                      <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                      </xsl:if>
                                                      <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                      </xsl:if>
                                                      <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                       <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                        <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                         <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                          <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                          </xsl:attribute>
                                                         </LRE>
                                                         <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                          <ATTR name="uri" line="82" module="rxr.xsl">
                                                          </ATTR>
                                                         </LRE>
                                                         <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                          <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                          </xsl:if>
                                                          <xsl:choose line="87" column="11" module="rxr.xsl">
                                                           <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                           </xsl:attribute>
                                                          </xsl:choose>
                                                         </LRE>
                                                        </LRE>
                                                       </xsl:template>
                                                      </xsl:call-template>
                                                     </xsl:template>
                                                    </xsl:call-template>
                                                  </xsl:for-each>
                                                  <xsl:if test="$properties" line="333" column="29" module="generic.xsl">
                                                  </xsl:if>
                                                  <xsl:choose line="357" column="14" module="generic.xsl">
                                                   <xsl:apply-templates select="$process-next" mode="krextor:main" line="366" column="67" module="generic.xsl">
                                                    <source node="/CAEXFile/AdditionalInformation[1]/@AutomationMLVersion" line="-1" file="">
                                                     <xsl:template match="CAEXFile/AdditionalInformation/@AutomationMLVersion" mode="krextor:main" line="216" column="95" module="aml.xsl">
                                                      <xsl:call-template name="krextor:add-literal-property" line="217" column="58" module="aml.xsl">
                                                       <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                        <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                         <xsl:choose line="442" column="14" module="generic.xsl">
                                                          <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                          </xsl:value-of>
                                                         </xsl:choose>
                                                        </xsl:variable>
                                                        <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                         <xsl:choose line="460" column="10" module="generic.xsl">
                                                          <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                            <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                             <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                              <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                               <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                </xsl:value-of>
                                                               </xsl:function>
                                                              </xsl:copy-of>
                                                             </xsl:function>
                                                             <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                              <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                              </xsl:variable>
                                                              <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                              </xsl:variable>
                                                              <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                              </xsl:variable>
                                                              <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                              </xsl:variable>
                                                              <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                              </xsl:variable>
                                                              <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                              </xsl:variable>
                                                              <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                              </xsl:variable>
                                                              <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                              </xsl:variable>
                                                              <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                              </xsl:if>
                                                              <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                              </xsl:if>
                                                              <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                               <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                </xsl:variable>
                                                                <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                </xsl:variable>
                                                                <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                </xsl:variable>
                                                                <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                </xsl:variable>
                                                                <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                </xsl:variable>
                                                                <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                </xsl:variable>
                                                                <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                </xsl:variable>
                                                                <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                 <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                  <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                  </xsl:attribute>
                                                                 </LRE>
                                                                 <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                  <ATTR name="uri" line="82" module="rxr.xsl">
                                                                  </ATTR>
                                                                 </LRE>
                                                                 <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                  <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                  </xsl:if>
                                                                  <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                   <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                    <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                     <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                     </xsl:attribute>
                                                                    </xsl:if>
                                                                    <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                     <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                      <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                       <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                        <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                         <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                         </xsl:variable>
                                                                         <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                          <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                          </xsl:value-of>
                                                                         </xsl:choose>
                                                                        </xsl:template>
                                                                       </xsl:call-template>
                                                                      </xsl:function>
                                                                     </xsl:value-of>
                                                                    </xsl:choose>
                                                                   </xsl:otherwise>
                                                                  </xsl:choose>
                                                                 </LRE>
                                                                </LRE>
                                                               </xsl:template>
                                                              </xsl:call-template>
                                                             </xsl:template>
                                                            </xsl:call-template>
                                                          </xsl:for-each>
                                                         </xsl:choose>
                                                        </xsl:variable>
                                                       </xsl:template>
                                                      </xsl:call-template>
                                                     </xsl:template>
                                                    </source><!-- /CAEXFile/AdditionalInformation[1]/@AutomationMLVersion -->
                                                   </xsl:apply-templates>
                                                  </xsl:choose>
                                                 </xsl:if>
                                                </xsl:variable>
                                               </xsl:variable>
                                              </xsl:variable>
                                             </xsl:variable>
                                            </xsl:variable>
                                           </xsl:variable>
                                          </xsl:template>
                                         </xsl:call-template>
                                        </xsl:variable>
                                       </xsl:choose>
                                      </xsl:template>
                                     </source><!-- /CAEXFile/AdditionalInformation[1] -->
                                    </xsl:apply-templates>
                                   </xsl:template>
                                  </source><!-- /CAEXFile/AdditionalInformation[1] -->
                                  <source node="/CAEXFile/AdditionalInformation[2]" line="-1" file="">
                                   <xsl:template match="CAEXFile |CAEXFile/AdditionalInformation |CAEXFile/ExternalReference |CAEXFile/InstanceHierarchy |CAEXFile/RoleClassLib |CAEXFile/SystemUnitClassLib |CAEXFile/InstanceHierarchy/InternalElement |Attribute |RefSemantic |ExternalInterface |SupportedRoleClass |RoleRequirements |InterfaceClassLib |InterfaceClass |RoleClass |SystemUnitClass" mode="krextor:main" line="121" column="45" module="aml.xsl">
                                    <xsl:apply-templates select="." mode="krextor:create-resource" line="122" column="69" module="aml.xsl">
                                     <source node="/CAEXFile/AdditionalInformation[2]" line="-1" file="">
                                      <xsl:template match="*" mode="krextor:create-resource" line="398" column="56" module="generic.xsl">
                                       <xsl:choose line="399" column="10" module="generic.xsl">
                                        <xsl:variable name="mapping" line="406" module="generic.xsl">
                                         <xsl:call-template name="krextor:create-resource" line="408" column="49" module="generic.xsl">
                                          <xsl:template name="krextor:create-resource" line="269" column="46" module="generic.xsl">
                                           <xsl:variable name="subject" select="()" as="xs:string?" line="270" column="53" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="related-via-properties" as="xs:string*" select="()" tunnel="yes" line="271" column="81" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="related-via-inverse-properties" as="xs:string*" select="()" tunnel="yes" line="272" column="89" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="type" select="()" as="xs:string*" line="273" column="50" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="properties" as="node()*" line="274" column="41" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="process-next" as="node()*" select="*|@*" line="275" column="57" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="subject-uri" as="xs:string" tunnel="yes" line="277" column="57" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="blank-node" as="xs:boolean" select="false()" line="278" column="61" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="this-blank-node-id" select="()" as="xs:string?" line="279" column="64" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="collection" as="xs:boolean" select="false()" line="280" column="61" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="nested-call" as="xs:boolean" select="false()" tunnel="yes" line="281" column="75" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="autogenerate-fragment-uri" line="283" module="generic.xsl">
                                            <xsl:variable name="generated-uri" line="290" module="generic.xsl">
                                             <xsl:function name="krextor:uri-generation-method" as="xs:string*" line="292" column="68" module="uri.xsl">
                                              <xsl:apply-templates select="$node" mode="krextor:uri-generation-method" line="295" column="44" module="uri.xsl">
                                               <source node="/CAEXFile/AdditionalInformation[2]" line="-1" file="">
                                                <xsl:template match="node()|attribute() (: attribute() doesn't seem to be subsumed by node() :)" mode="krextor:uri-generation-method" as="xs:string*" line="287" column="68" module="uri.xsl">
                                                </xsl:template>
                                               </source><!-- /CAEXFile/AdditionalInformation[2] -->
                                              </xsl:apply-templates>
                                             </xsl:function>
                                             <xsl:function name="krextor:generate-uri" as="xs:anyURI?" line="208" column="59" module="uri.xsl">
                                              <xsl:value-of select="f:return-first(krextor:generate-uri-impl(), $autogenerate-fragment-uri, ($node, $base-uri))" line="216" column="114" module="uri.xsl">
                                               <xsl:function name="krextor:generate-uri-impl" as="element(krextor:generate-uri-impl)" line="274" column="88" module="uri.xsl">
                                                <LRE name="krextor:generate-uri-impl" line="275" column="30" module="uri.xsl">
                                                </LRE>
                                               </xsl:function>
                                               <xsl:function name="f:return-first" line="64" column="37" module="util.xsl">
                                                <xsl:function name="f:return-first-step" line="87" column="42" module="util.xsl">
                                                 <xsl:variable name="result" line="92" module="util.xsl">
                                                  <xsl:function name="f:apply" line="16" column="32" module="func-apply.xsl">
                                                   <xsl:apply-templates select="$pFunc" mode="f:FXSL" line="21" column="56" module="func-apply.xsl">
                                                    <source node="krextor:generate-uri-impl" line="-1" file="uri.xsl">
                                                     <xsl:template match="krextor:generate-uri-impl" as="xs:anyURI?" mode="f:FXSL" line="279" column="79" module="uri.xsl">
                                                      <xsl:variable name="arg1" as="xs:string" line="280" column="37" module="uri.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="arg2" as="item()+" line="281" column="35" module="uri.xsl">
                                                      </xsl:variable>
                                                      <xsl:function name="krextor:generate-uri-impl" line="226" column="48" module="uri.xsl">
                                                       <xsl:variable name="node" line="229" module="uri.xsl">
                                                        <xsl:variable name="base-uri" line="230" module="uri.xsl">
                                                         <xsl:variable name="method-element" line="231" module="uri.xsl">
                                                          <xsl:apply-templates select="$method-element" line="234" column="44" module="uri.xsl">
                                                           <xsl:element name="{concat('krextor-genuri:', $method)}" line="232" column="60" module="uri.xsl">
                                                           </xsl:element>
                                                           <source node="krextor-genuri:global-element-index" line="-1" file="">
                                                            <xsl:template match="krextor-genuri:global-element-index" as="xs:string?" line="66" column="79" module="aml.xsl">
                                                             <xsl:variable name="node" as="node()" line="67" column="38" module="aml.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="base-uri" as="xs:anyURI" line="68" column="45" module="aml.xsl">
                                                             </xsl:variable>
                                                             <xsl:function name="krextor:global-element-index" as="xs:string?" line="60" column="71" module="aml.xsl">
                                                              <xsl:value-of select="concat(local-name($node), count(root($node)//*[local-name() eq local-name($node) and . &lt;&lt; $node]) + 1)" line="62" column="135" module="aml.xsl">
                                                              </xsl:value-of>
                                                             </xsl:function>
                                                            </xsl:template>
                                                           </source><!-- krextor-genuri:global-element-index -->
                                                          </xsl:apply-templates>
                                                         </xsl:variable>
                                                        </xsl:variable>
                                                       </xsl:variable>
                                                      </xsl:function>
                                                     </xsl:template>
                                                    </source><!-- krextor:generate-uri-impl -->
                                                   </xsl:apply-templates>
                                                  </xsl:function>
                                                 </xsl:variable>
                                                </xsl:function>
                                               </xsl:function>
                                              </xsl:value-of>
                                             </xsl:function>
                                             <xsl:variable name="generated-blank-node" line="291" module="generic.xsl">
                                              <xsl:variable name="generated-blank-node-id" line="298" module="generic.xsl">
                                               <xsl:variable name="subject" line="299" module="generic.xsl">
                                                <xsl:variable name="subject-type" line="300" module="generic.xsl">
                                                 <xsl:if test="exists($generated-uri)" line="301" column="36" module="generic.xsl">
                                                  <xsl:if test="$nested-call" line="302" column="30" module="generic.xsl">
                                                   <xsl:call-template name="krextor:related-via-properties" line="306" column="56" module="generic.xsl">
                                                    <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                     <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:choose line="212" column="10" module="generic.xsl">
                                                      <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                       <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                        <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                         <xsl:variable name="actual-object" line="557" module="generic.xsl">
                                                          <xsl:variable name="actual-property" line="560" module="generic.xsl">
                                                           <xsl:variable name="actual-inverse" line="562" module="generic.xsl">
                                                            <xsl:choose line="563" column="14" module="generic.xsl">
                                                             <xsl:choose line="578" column="15" module="generic.xsl">
                                                              <xsl:for-each select="$actual-property" line="593" column="44" module="generic.xsl">
                                                                <xsl:call-template name="krextor:output-triple-impl" line="594" column="54" module="generic.xsl">
                                                                 <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                  <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                  </xsl:if>
                                                                  <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                  </xsl:if>
                                                                  <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                   <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                    <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                     <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                      <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                      </xsl:attribute>
                                                                     </LRE>
                                                                     <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                      <ATTR name="uri" line="82" module="rxr.xsl">
                                                                      </ATTR>
                                                                     </LRE>
                                                                     <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                      <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                      </xsl:if>
                                                                      <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                       <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </xsl:choose>
                                                                     </LRE>
                                                                    </LRE>
                                                                   </xsl:template>
                                                                  </xsl:call-template>
                                                                 </xsl:template>
                                                                </xsl:call-template>
                                                              </xsl:for-each>
                                                             </xsl:choose>
                                                            </xsl:choose>
                                                           </xsl:variable>
                                                          </xsl:variable>
                                                         </xsl:variable>
                                                        </xsl:if>
                                                       </xsl:template>
                                                      </xsl:call-template>
                                                     </xsl:choose>
                                                    </xsl:template>
                                                   </xsl:call-template>
                                                   <xsl:call-template name="krextor:related-via-properties" line="312" column="56" module="generic.xsl">
                                                    <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                     <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:choose line="212" column="10" module="generic.xsl">
                                                      <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                       <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                        <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                        </xsl:if>
                                                       </xsl:template>
                                                      </xsl:call-template>
                                                     </xsl:choose>
                                                    </xsl:template>
                                                   </xsl:call-template>
                                                  </xsl:if>
                                                  <xsl:for-each select="$type" line="322" column="31" module="generic.xsl">
                                                    <xsl:call-template name="krextor:output-triple-impl" line="323" column="52" module="generic.xsl">
                                                     <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                      <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                      </xsl:if>
                                                      <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                      </xsl:if>
                                                      <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                       <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                        <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                         <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                          <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                          </xsl:attribute>
                                                         </LRE>
                                                         <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                          <ATTR name="uri" line="82" module="rxr.xsl">
                                                          </ATTR>
                                                         </LRE>
                                                         <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                          <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                          </xsl:if>
                                                          <xsl:choose line="87" column="11" module="rxr.xsl">
                                                           <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                           </xsl:attribute>
                                                          </xsl:choose>
                                                         </LRE>
                                                        </LRE>
                                                       </xsl:template>
                                                      </xsl:call-template>
                                                     </xsl:template>
                                                    </xsl:call-template>
                                                  </xsl:for-each>
                                                  <xsl:if test="$properties" line="333" column="29" module="generic.xsl">
                                                  </xsl:if>
                                                  <xsl:choose line="357" column="14" module="generic.xsl">
                                                   <xsl:apply-templates select="$process-next" mode="krextor:main" line="366" column="67" module="generic.xsl">
                                                    <source node="/CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterName[1]" line="-1" file="">
                                                     <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                      <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                       <source node="/CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterName[1]" line="-1" file="">
                                                        <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                         <xsl:choose line="497" column="10" module="generic.xsl">
                                                          <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                           <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                           </xsl:if>
                                                           <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                            <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                             <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                              <xsl:choose line="442" column="14" module="generic.xsl">
                                                               <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                               </xsl:value-of>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                             <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                              <xsl:choose line="460" column="10" module="generic.xsl">
                                                               <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                 <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                  <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                   <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                    <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                     <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                     </xsl:value-of>
                                                                    </xsl:function>
                                                                   </xsl:copy-of>
                                                                  </xsl:function>
                                                                  <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                   <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                    <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                     <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                      <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                       <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </LRE>
                                                                      <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                       <ATTR name="uri" line="82" module="rxr.xsl">
                                                                       </ATTR>
                                                                      </LRE>
                                                                      <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                       <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                       </xsl:if>
                                                                       <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                        <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                         <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                         </xsl:if>
                                                                         <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                          <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                           <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                            <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                             <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                              <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                              </xsl:variable>
                                                                              <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                               <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                               </xsl:value-of>
                                                                              </xsl:choose>
                                                                             </xsl:template>
                                                                            </xsl:call-template>
                                                                           </xsl:function>
                                                                          </xsl:value-of>
                                                                         </xsl:choose>
                                                                        </xsl:otherwise>
                                                                       </xsl:choose>
                                                                      </LRE>
                                                                     </LRE>
                                                                    </xsl:template>
                                                                   </xsl:call-template>
                                                                  </xsl:template>
                                                                 </xsl:call-template>
                                                               </xsl:for-each>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                            </xsl:template>
                                                           </xsl:call-template>
                                                          </xsl:variable>
                                                         </xsl:choose>
                                                        </xsl:template>
                                                       </source><!-- /CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterName[1] -->
                                                      </xsl:apply-templates>
                                                     </xsl:template>
                                                    </source><!-- /CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterName[1] -->
                                                    <source node="/CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterID[1]" line="-1" file="">
                                                     <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                      <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                       <source node="/CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterID[1]" line="-1" file="">
                                                        <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                         <xsl:choose line="497" column="10" module="generic.xsl">
                                                          <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                           <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                           </xsl:if>
                                                           <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                            <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                             <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                              <xsl:choose line="442" column="14" module="generic.xsl">
                                                               <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                               </xsl:value-of>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                             <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                              <xsl:choose line="460" column="10" module="generic.xsl">
                                                               <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                 <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                  <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                   <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                    <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                     <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                     </xsl:value-of>
                                                                    </xsl:function>
                                                                   </xsl:copy-of>
                                                                  </xsl:function>
                                                                  <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                   <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                    <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                     <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                      <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                       <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </LRE>
                                                                      <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                       <ATTR name="uri" line="82" module="rxr.xsl">
                                                                       </ATTR>
                                                                      </LRE>
                                                                      <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                       <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                       </xsl:if>
                                                                       <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                        <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                         <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                          <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                          </xsl:attribute>
                                                                         </xsl:if>
                                                                         <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                          <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                           <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                            <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                             <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                              <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                              </xsl:variable>
                                                                              <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                               <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                               </xsl:value-of>
                                                                              </xsl:choose>
                                                                             </xsl:template>
                                                                            </xsl:call-template>
                                                                           </xsl:function>
                                                                          </xsl:value-of>
                                                                         </xsl:choose>
                                                                        </xsl:otherwise>
                                                                       </xsl:choose>
                                                                      </LRE>
                                                                     </LRE>
                                                                    </xsl:template>
                                                                   </xsl:call-template>
                                                                  </xsl:template>
                                                                 </xsl:call-template>
                                                               </xsl:for-each>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                            </xsl:template>
                                                           </xsl:call-template>
                                                          </xsl:variable>
                                                         </xsl:choose>
                                                        </xsl:template>
                                                       </source><!-- /CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterID[1] -->
                                                      </xsl:apply-templates>
                                                     </xsl:template>
                                                    </source><!-- /CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterID[1] -->
                                                    <source node="/CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterVendor[1]" line="-1" file="">
                                                     <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                      <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                       <source node="/CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterVendor[1]" line="-1" file="">
                                                        <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                         <xsl:choose line="497" column="10" module="generic.xsl">
                                                          <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                           <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                           </xsl:if>
                                                           <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                            <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                             <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                              <xsl:choose line="442" column="14" module="generic.xsl">
                                                               <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                               </xsl:value-of>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                             <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                              <xsl:choose line="460" column="10" module="generic.xsl">
                                                               <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                 <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                  <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                   <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                    <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                     <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                     </xsl:value-of>
                                                                    </xsl:function>
                                                                   </xsl:copy-of>
                                                                  </xsl:function>
                                                                  <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                   <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                    <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                     <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                      <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                       <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </LRE>
                                                                      <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                       <ATTR name="uri" line="82" module="rxr.xsl">
                                                                       </ATTR>
                                                                      </LRE>
                                                                      <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                       <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                       </xsl:if>
                                                                       <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                        <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                         <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                          <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                          </xsl:attribute>
                                                                         </xsl:if>
                                                                         <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                          <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                           <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                            <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                             <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                              <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                              </xsl:variable>
                                                                              <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                               <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                               </xsl:value-of>
                                                                              </xsl:choose>
                                                                             </xsl:template>
                                                                            </xsl:call-template>
                                                                           </xsl:function>
                                                                          </xsl:value-of>
                                                                         </xsl:choose>
                                                                        </xsl:otherwise>
                                                                       </xsl:choose>
                                                                      </LRE>
                                                                     </LRE>
                                                                    </xsl:template>
                                                                   </xsl:call-template>
                                                                  </xsl:template>
                                                                 </xsl:call-template>
                                                               </xsl:for-each>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                            </xsl:template>
                                                           </xsl:call-template>
                                                          </xsl:variable>
                                                         </xsl:choose>
                                                        </xsl:template>
                                                       </source><!-- /CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterVendor[1] -->
                                                      </xsl:apply-templates>
                                                     </xsl:template>
                                                    </source><!-- /CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterVendor[1] -->
                                                    <source node="/CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterVendorURL[1]" line="-1" file="">
                                                     <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                      <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                       <source node="/CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterVendorURL[1]" line="-1" file="">
                                                        <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                         <xsl:choose line="497" column="10" module="generic.xsl">
                                                          <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                           <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                           </xsl:if>
                                                           <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                            <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                             <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                              <xsl:choose line="442" column="14" module="generic.xsl">
                                                               <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                               </xsl:value-of>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                             <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                              <xsl:choose line="460" column="10" module="generic.xsl">
                                                               <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                 <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                  <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                   <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                    <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                     <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                     </xsl:value-of>
                                                                    </xsl:function>
                                                                   </xsl:copy-of>
                                                                  </xsl:function>
                                                                  <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                   <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                    <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                     <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                      <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                       <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </LRE>
                                                                      <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                       <ATTR name="uri" line="82" module="rxr.xsl">
                                                                       </ATTR>
                                                                      </LRE>
                                                                      <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                       <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                       </xsl:if>
                                                                       <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                        <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                         <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                          <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                          </xsl:attribute>
                                                                         </xsl:if>
                                                                         <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                          <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                           <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                            <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                             <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                              <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                              </xsl:variable>
                                                                              <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                               <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                               </xsl:value-of>
                                                                              </xsl:choose>
                                                                             </xsl:template>
                                                                            </xsl:call-template>
                                                                           </xsl:function>
                                                                          </xsl:value-of>
                                                                         </xsl:choose>
                                                                        </xsl:otherwise>
                                                                       </xsl:choose>
                                                                      </LRE>
                                                                     </LRE>
                                                                    </xsl:template>
                                                                   </xsl:call-template>
                                                                  </xsl:template>
                                                                 </xsl:call-template>
                                                               </xsl:for-each>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                            </xsl:template>
                                                           </xsl:call-template>
                                                          </xsl:variable>
                                                         </xsl:choose>
                                                        </xsl:template>
                                                       </source><!-- /CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterVendorURL[1] -->
                                                      </xsl:apply-templates>
                                                     </xsl:template>
                                                    </source><!-- /CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterVendorURL[1] -->
                                                    <source node="/CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterVersion[1]" line="-1" file="">
                                                     <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                      <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                       <source node="/CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterVersion[1]" line="-1" file="">
                                                        <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                         <xsl:choose line="497" column="10" module="generic.xsl">
                                                          <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                           <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                           </xsl:if>
                                                           <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                            <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                             <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                              <xsl:choose line="442" column="14" module="generic.xsl">
                                                               <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                               </xsl:value-of>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                             <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                              <xsl:choose line="460" column="10" module="generic.xsl">
                                                               <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                 <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                  <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                   <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                    <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                     <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                     </xsl:value-of>
                                                                    </xsl:function>
                                                                   </xsl:copy-of>
                                                                  </xsl:function>
                                                                  <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                   <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                    <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                     <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                      <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                       <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </LRE>
                                                                      <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                       <ATTR name="uri" line="82" module="rxr.xsl">
                                                                       </ATTR>
                                                                      </LRE>
                                                                      <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                       <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                       </xsl:if>
                                                                       <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                        <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                         <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                          <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                          </xsl:attribute>
                                                                         </xsl:if>
                                                                         <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                          <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                           <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                            <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                             <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                              <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                              </xsl:variable>
                                                                              <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                               <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                               </xsl:value-of>
                                                                              </xsl:choose>
                                                                             </xsl:template>
                                                                            </xsl:call-template>
                                                                           </xsl:function>
                                                                          </xsl:value-of>
                                                                         </xsl:choose>
                                                                        </xsl:otherwise>
                                                                       </xsl:choose>
                                                                      </LRE>
                                                                     </LRE>
                                                                    </xsl:template>
                                                                   </xsl:call-template>
                                                                  </xsl:template>
                                                                 </xsl:call-template>
                                                               </xsl:for-each>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                            </xsl:template>
                                                           </xsl:call-template>
                                                          </xsl:variable>
                                                         </xsl:choose>
                                                        </xsl:template>
                                                       </source><!-- /CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterVersion[1] -->
                                                      </xsl:apply-templates>
                                                     </xsl:template>
                                                    </source><!-- /CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterVersion[1] -->
                                                    <source node="/CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterRelease[1]" line="-1" file="">
                                                     <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                      <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                       <source node="/CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterRelease[1]" line="-1" file="">
                                                        <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                         <xsl:choose line="497" column="10" module="generic.xsl">
                                                          <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                           <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                           </xsl:if>
                                                           <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                            <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                             <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                              <xsl:choose line="442" column="14" module="generic.xsl">
                                                               <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                               </xsl:value-of>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                             <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                              <xsl:choose line="460" column="10" module="generic.xsl">
                                                               <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                 <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                  <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                   <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                    <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                     <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                     </xsl:value-of>
                                                                    </xsl:function>
                                                                   </xsl:copy-of>
                                                                  </xsl:function>
                                                                  <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                   <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                    <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                     <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                      <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                       <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </LRE>
                                                                      <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                       <ATTR name="uri" line="82" module="rxr.xsl">
                                                                       </ATTR>
                                                                      </LRE>
                                                                      <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                       <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                       </xsl:if>
                                                                       <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                        <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                         <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                          <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                          </xsl:attribute>
                                                                         </xsl:if>
                                                                         <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                          <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                           <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                            <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                             <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                              <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                              </xsl:variable>
                                                                              <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                               <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                               </xsl:value-of>
                                                                              </xsl:choose>
                                                                             </xsl:template>
                                                                            </xsl:call-template>
                                                                           </xsl:function>
                                                                          </xsl:value-of>
                                                                         </xsl:choose>
                                                                        </xsl:otherwise>
                                                                       </xsl:choose>
                                                                      </LRE>
                                                                     </LRE>
                                                                    </xsl:template>
                                                                   </xsl:call-template>
                                                                  </xsl:template>
                                                                 </xsl:call-template>
                                                               </xsl:for-each>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                            </xsl:template>
                                                           </xsl:call-template>
                                                          </xsl:variable>
                                                         </xsl:choose>
                                                        </xsl:template>
                                                       </source><!-- /CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterRelease[1] -->
                                                      </xsl:apply-templates>
                                                     </xsl:template>
                                                    </source><!-- /CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterRelease[1] -->
                                                    <source node="/CAEXFile/AdditionalInformation[2]/WriterHeader[1]/LastWritingDateTime[1]" line="-1" file="">
                                                     <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                      <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                       <source node="/CAEXFile/AdditionalInformation[2]/WriterHeader[1]/LastWritingDateTime[1]" line="-1" file="">
                                                        <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                         <xsl:choose line="497" column="10" module="generic.xsl">
                                                          <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                           <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                           </xsl:if>
                                                           <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                            <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                             <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                              <xsl:choose line="442" column="14" module="generic.xsl">
                                                               <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                               </xsl:value-of>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                             <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                              <xsl:choose line="460" column="10" module="generic.xsl">
                                                               <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                 <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                  <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                   <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                    <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                     <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                     </xsl:value-of>
                                                                    </xsl:function>
                                                                   </xsl:copy-of>
                                                                  </xsl:function>
                                                                  <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                   <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                    <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                     <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                      <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                       <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </LRE>
                                                                      <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                       <ATTR name="uri" line="82" module="rxr.xsl">
                                                                       </ATTR>
                                                                      </LRE>
                                                                      <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                       <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                       </xsl:if>
                                                                       <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                        <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                         <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                          <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                          </xsl:attribute>
                                                                         </xsl:if>
                                                                         <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                          <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                           <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                            <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                             <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                              <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                              </xsl:variable>
                                                                              <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                               <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                               </xsl:value-of>
                                                                              </xsl:choose>
                                                                             </xsl:template>
                                                                            </xsl:call-template>
                                                                           </xsl:function>
                                                                          </xsl:value-of>
                                                                         </xsl:choose>
                                                                        </xsl:otherwise>
                                                                       </xsl:choose>
                                                                      </LRE>
                                                                     </LRE>
                                                                    </xsl:template>
                                                                   </xsl:call-template>
                                                                  </xsl:template>
                                                                 </xsl:call-template>
                                                               </xsl:for-each>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                            </xsl:template>
                                                           </xsl:call-template>
                                                          </xsl:variable>
                                                         </xsl:choose>
                                                        </xsl:template>
                                                       </source><!-- /CAEXFile/AdditionalInformation[2]/WriterHeader[1]/LastWritingDateTime[1] -->
                                                      </xsl:apply-templates>
                                                     </xsl:template>
                                                    </source><!-- /CAEXFile/AdditionalInformation[2]/WriterHeader[1]/LastWritingDateTime[1] -->
                                                    <source node="/CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterProjectTitle[1]" line="-1" file="">
                                                     <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                      <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                       <source node="/CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterProjectTitle[1]" line="-1" file="">
                                                        <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                         <xsl:choose line="497" column="10" module="generic.xsl">
                                                          <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                           <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                           </xsl:if>
                                                           <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                            <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                             <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                              <xsl:choose line="442" column="14" module="generic.xsl">
                                                               <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                               </xsl:value-of>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                             <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                              <xsl:choose line="460" column="10" module="generic.xsl">
                                                               <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                 <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                  <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                   <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                    <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                     <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                     </xsl:value-of>
                                                                    </xsl:function>
                                                                   </xsl:copy-of>
                                                                  </xsl:function>
                                                                  <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                   <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                    <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                     <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                      <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                       <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </LRE>
                                                                      <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                       <ATTR name="uri" line="82" module="rxr.xsl">
                                                                       </ATTR>
                                                                      </LRE>
                                                                      <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                       <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                       </xsl:if>
                                                                       <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                        <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                         <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                          <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                          </xsl:attribute>
                                                                         </xsl:if>
                                                                         <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                          <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                           <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                            <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                             <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                              <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                              </xsl:variable>
                                                                              <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                               <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                               </xsl:value-of>
                                                                              </xsl:choose>
                                                                             </xsl:template>
                                                                            </xsl:call-template>
                                                                           </xsl:function>
                                                                          </xsl:value-of>
                                                                         </xsl:choose>
                                                                        </xsl:otherwise>
                                                                       </xsl:choose>
                                                                      </LRE>
                                                                     </LRE>
                                                                    </xsl:template>
                                                                   </xsl:call-template>
                                                                  </xsl:template>
                                                                 </xsl:call-template>
                                                               </xsl:for-each>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                            </xsl:template>
                                                           </xsl:call-template>
                                                          </xsl:variable>
                                                         </xsl:choose>
                                                        </xsl:template>
                                                       </source><!-- /CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterProjectTitle[1] -->
                                                      </xsl:apply-templates>
                                                     </xsl:template>
                                                    </source><!-- /CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterProjectTitle[1] -->
                                                    <source node="/CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterProjectID[1]" line="-1" file="">
                                                     <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                      <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                       <source node="/CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterProjectID[1]" line="-1" file="">
                                                        <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                         <xsl:choose line="497" column="10" module="generic.xsl">
                                                          <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                           <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                           </xsl:if>
                                                           <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                            <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                             <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                              <xsl:choose line="442" column="14" module="generic.xsl">
                                                               <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                               </xsl:value-of>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                             <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                              <xsl:choose line="460" column="10" module="generic.xsl">
                                                               <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                 <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                  <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                   <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                    <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                     <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                     </xsl:value-of>
                                                                    </xsl:function>
                                                                   </xsl:copy-of>
                                                                  </xsl:function>
                                                                  <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                   <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                    <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                     <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                      <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                       <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </LRE>
                                                                      <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                       <ATTR name="uri" line="82" module="rxr.xsl">
                                                                       </ATTR>
                                                                      </LRE>
                                                                      <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                       <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                       </xsl:if>
                                                                       <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                        <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                         <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                          <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                          </xsl:attribute>
                                                                         </xsl:if>
                                                                         <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                          <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                           <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                            <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                             <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                              <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                              </xsl:variable>
                                                                              <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                               <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                               </xsl:value-of>
                                                                              </xsl:choose>
                                                                             </xsl:template>
                                                                            </xsl:call-template>
                                                                           </xsl:function>
                                                                          </xsl:value-of>
                                                                         </xsl:choose>
                                                                        </xsl:otherwise>
                                                                       </xsl:choose>
                                                                      </LRE>
                                                                     </LRE>
                                                                    </xsl:template>
                                                                   </xsl:call-template>
                                                                  </xsl:template>
                                                                 </xsl:call-template>
                                                               </xsl:for-each>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                            </xsl:template>
                                                           </xsl:call-template>
                                                          </xsl:variable>
                                                         </xsl:choose>
                                                        </xsl:template>
                                                       </source><!-- /CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterProjectID[1] -->
                                                      </xsl:apply-templates>
                                                     </xsl:template>
                                                    </source><!-- /CAEXFile/AdditionalInformation[2]/WriterHeader[1]/WriterProjectID[1] -->
                                                   </xsl:apply-templates>
                                                  </xsl:choose>
                                                 </xsl:if>
                                                </xsl:variable>
                                               </xsl:variable>
                                              </xsl:variable>
                                             </xsl:variable>
                                            </xsl:variable>
                                           </xsl:variable>
                                          </xsl:template>
                                         </xsl:call-template>
                                        </xsl:variable>
                                       </xsl:choose>
                                      </xsl:template>
                                     </source><!-- /CAEXFile/AdditionalInformation[2] -->
                                    </xsl:apply-templates>
                                   </xsl:template>
                                  </source><!-- /CAEXFile/AdditionalInformation[2] -->
                                  <source node="/CAEXFile/ExternalReference[1]" line="-1" file="">
                                   <xsl:template match="CAEXFile |CAEXFile/AdditionalInformation |CAEXFile/ExternalReference |CAEXFile/InstanceHierarchy |CAEXFile/RoleClassLib |CAEXFile/SystemUnitClassLib |CAEXFile/InstanceHierarchy/InternalElement |Attribute |RefSemantic |ExternalInterface |SupportedRoleClass |RoleRequirements |InterfaceClassLib |InterfaceClass |RoleClass |SystemUnitClass" mode="krextor:main" line="121" column="45" module="aml.xsl">
                                    <xsl:apply-templates select="." mode="krextor:create-resource" line="122" column="69" module="aml.xsl">
                                     <source node="/CAEXFile/ExternalReference[1]" line="-1" file="">
                                      <xsl:template match="*" mode="krextor:create-resource" line="398" column="56" module="generic.xsl">
                                       <xsl:choose line="399" column="10" module="generic.xsl">
                                        <xsl:variable name="mapping" line="406" module="generic.xsl">
                                         <xsl:call-template name="krextor:create-resource" line="408" column="49" module="generic.xsl">
                                          <xsl:template name="krextor:create-resource" line="269" column="46" module="generic.xsl">
                                           <xsl:variable name="subject" select="()" as="xs:string?" line="270" column="53" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="related-via-properties" as="xs:string*" select="()" tunnel="yes" line="271" column="81" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="related-via-inverse-properties" as="xs:string*" select="()" tunnel="yes" line="272" column="89" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="type" select="()" as="xs:string*" line="273" column="50" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="properties" as="node()*" line="274" column="41" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="process-next" as="node()*" select="*|@*" line="275" column="57" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="subject-uri" as="xs:string" tunnel="yes" line="277" column="57" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="blank-node" as="xs:boolean" select="false()" line="278" column="61" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="this-blank-node-id" select="()" as="xs:string?" line="279" column="64" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="collection" as="xs:boolean" select="false()" line="280" column="61" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="nested-call" as="xs:boolean" select="false()" tunnel="yes" line="281" column="75" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="autogenerate-fragment-uri" line="283" module="generic.xsl">
                                            <xsl:variable name="generated-uri" line="290" module="generic.xsl">
                                             <xsl:function name="krextor:uri-generation-method" as="xs:string*" line="292" column="68" module="uri.xsl">
                                              <xsl:apply-templates select="$node" mode="krextor:uri-generation-method" line="295" column="44" module="uri.xsl">
                                               <source node="/CAEXFile/ExternalReference[1]" line="-1" file="">
                                                <xsl:template match="node()|attribute() (: attribute() doesn't seem to be subsumed by node() :)" mode="krextor:uri-generation-method" as="xs:string*" line="287" column="68" module="uri.xsl">
                                                </xsl:template>
                                               </source><!-- /CAEXFile/ExternalReference[1] -->
                                              </xsl:apply-templates>
                                             </xsl:function>
                                             <xsl:function name="krextor:generate-uri" as="xs:anyURI?" line="208" column="59" module="uri.xsl">
                                              <xsl:value-of select="f:return-first(krextor:generate-uri-impl(), $autogenerate-fragment-uri, ($node, $base-uri))" line="216" column="114" module="uri.xsl">
                                               <xsl:function name="krextor:generate-uri-impl" as="element(krextor:generate-uri-impl)" line="274" column="88" module="uri.xsl">
                                                <LRE name="krextor:generate-uri-impl" line="275" column="30" module="uri.xsl">
                                                </LRE>
                                               </xsl:function>
                                               <xsl:function name="f:return-first" line="64" column="37" module="util.xsl">
                                                <xsl:function name="f:return-first-step" line="87" column="42" module="util.xsl">
                                                 <xsl:variable name="result" line="92" module="util.xsl">
                                                  <xsl:function name="f:apply" line="16" column="32" module="func-apply.xsl">
                                                   <xsl:apply-templates select="$pFunc" mode="f:FXSL" line="21" column="56" module="func-apply.xsl">
                                                    <source node="krextor:generate-uri-impl" line="-1" file="uri.xsl">
                                                     <xsl:template match="krextor:generate-uri-impl" as="xs:anyURI?" mode="f:FXSL" line="279" column="79" module="uri.xsl">
                                                      <xsl:variable name="arg1" as="xs:string" line="280" column="37" module="uri.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="arg2" as="item()+" line="281" column="35" module="uri.xsl">
                                                      </xsl:variable>
                                                      <xsl:function name="krextor:generate-uri-impl" line="226" column="48" module="uri.xsl">
                                                       <xsl:variable name="node" line="229" module="uri.xsl">
                                                        <xsl:variable name="base-uri" line="230" module="uri.xsl">
                                                         <xsl:variable name="method-element" line="231" module="uri.xsl">
                                                          <xsl:apply-templates select="$method-element" line="234" column="44" module="uri.xsl">
                                                           <xsl:element name="{concat('krextor-genuri:', $method)}" line="232" column="60" module="uri.xsl">
                                                           </xsl:element>
                                                           <source node="krextor-genuri:global-element-index" line="-1" file="">
                                                            <xsl:template match="krextor-genuri:global-element-index" as="xs:string?" line="66" column="79" module="aml.xsl">
                                                             <xsl:variable name="node" as="node()" line="67" column="38" module="aml.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="base-uri" as="xs:anyURI" line="68" column="45" module="aml.xsl">
                                                             </xsl:variable>
                                                             <xsl:function name="krextor:global-element-index" as="xs:string?" line="60" column="71" module="aml.xsl">
                                                              <xsl:value-of select="concat(local-name($node), count(root($node)//*[local-name() eq local-name($node) and . &lt;&lt; $node]) + 1)" line="62" column="135" module="aml.xsl">
                                                              </xsl:value-of>
                                                             </xsl:function>
                                                            </xsl:template>
                                                           </source><!-- krextor-genuri:global-element-index -->
                                                          </xsl:apply-templates>
                                                         </xsl:variable>
                                                        </xsl:variable>
                                                       </xsl:variable>
                                                      </xsl:function>
                                                     </xsl:template>
                                                    </source><!-- krextor:generate-uri-impl -->
                                                   </xsl:apply-templates>
                                                  </xsl:function>
                                                 </xsl:variable>
                                                </xsl:function>
                                               </xsl:function>
                                              </xsl:value-of>
                                             </xsl:function>
                                             <xsl:variable name="generated-blank-node" line="291" module="generic.xsl">
                                              <xsl:variable name="generated-blank-node-id" line="298" module="generic.xsl">
                                               <xsl:variable name="subject" line="299" module="generic.xsl">
                                                <xsl:variable name="subject-type" line="300" module="generic.xsl">
                                                 <xsl:if test="exists($generated-uri)" line="301" column="36" module="generic.xsl">
                                                  <xsl:if test="$nested-call" line="302" column="30" module="generic.xsl">
                                                   <xsl:call-template name="krextor:related-via-properties" line="306" column="56" module="generic.xsl">
                                                    <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                     <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:choose line="212" column="10" module="generic.xsl">
                                                      <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                       <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                        <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                         <xsl:variable name="actual-object" line="557" module="generic.xsl">
                                                          <xsl:variable name="actual-property" line="560" module="generic.xsl">
                                                           <xsl:variable name="actual-inverse" line="562" module="generic.xsl">
                                                            <xsl:choose line="563" column="14" module="generic.xsl">
                                                             <xsl:choose line="578" column="15" module="generic.xsl">
                                                              <xsl:for-each select="$actual-property" line="593" column="44" module="generic.xsl">
                                                                <xsl:call-template name="krextor:output-triple-impl" line="594" column="54" module="generic.xsl">
                                                                 <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                  <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                  </xsl:if>
                                                                  <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                  </xsl:if>
                                                                  <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                   <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                    <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                     <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                      <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                      </xsl:attribute>
                                                                     </LRE>
                                                                     <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                      <ATTR name="uri" line="82" module="rxr.xsl">
                                                                      </ATTR>
                                                                     </LRE>
                                                                     <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                      <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                      </xsl:if>
                                                                      <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                       <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </xsl:choose>
                                                                     </LRE>
                                                                    </LRE>
                                                                   </xsl:template>
                                                                  </xsl:call-template>
                                                                 </xsl:template>
                                                                </xsl:call-template>
                                                              </xsl:for-each>
                                                             </xsl:choose>
                                                            </xsl:choose>
                                                           </xsl:variable>
                                                          </xsl:variable>
                                                         </xsl:variable>
                                                        </xsl:if>
                                                       </xsl:template>
                                                      </xsl:call-template>
                                                     </xsl:choose>
                                                    </xsl:template>
                                                   </xsl:call-template>
                                                   <xsl:call-template name="krextor:related-via-properties" line="312" column="56" module="generic.xsl">
                                                    <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                     <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:choose line="212" column="10" module="generic.xsl">
                                                      <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                       <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                        <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                        </xsl:if>
                                                       </xsl:template>
                                                      </xsl:call-template>
                                                     </xsl:choose>
                                                    </xsl:template>
                                                   </xsl:call-template>
                                                  </xsl:if>
                                                  <xsl:for-each select="$type" line="322" column="31" module="generic.xsl">
                                                    <xsl:call-template name="krextor:output-triple-impl" line="323" column="52" module="generic.xsl">
                                                     <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                      <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                      </xsl:if>
                                                      <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                      </xsl:if>
                                                      <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                       <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                        <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                         <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                          <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                          </xsl:attribute>
                                                         </LRE>
                                                         <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                          <ATTR name="uri" line="82" module="rxr.xsl">
                                                          </ATTR>
                                                         </LRE>
                                                         <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                          <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                          </xsl:if>
                                                          <xsl:choose line="87" column="11" module="rxr.xsl">
                                                           <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                           </xsl:attribute>
                                                          </xsl:choose>
                                                         </LRE>
                                                        </LRE>
                                                       </xsl:template>
                                                      </xsl:call-template>
                                                     </xsl:template>
                                                    </xsl:call-template>
                                                  </xsl:for-each>
                                                  <xsl:if test="$properties" line="333" column="29" module="generic.xsl">
                                                  </xsl:if>
                                                  <xsl:choose line="357" column="14" module="generic.xsl">
                                                   <xsl:apply-templates select="$process-next" mode="krextor:main" line="366" column="67" module="generic.xsl">
                                                    <source node="/CAEXFile/ExternalReference[1]/@Path" line="-1" file="">
                                                     <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                      <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                       <source node="/CAEXFile/ExternalReference[1]/@Path" line="-1" file="">
                                                        <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                         <xsl:choose line="497" column="10" module="generic.xsl">
                                                          <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                           <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                           </xsl:if>
                                                           <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                            <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                             <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                              <xsl:choose line="442" column="14" module="generic.xsl">
                                                               <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                               </xsl:value-of>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                             <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                              <xsl:choose line="460" column="10" module="generic.xsl">
                                                               <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                 <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                  <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                   <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                    <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                     <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                     </xsl:value-of>
                                                                    </xsl:function>
                                                                   </xsl:copy-of>
                                                                  </xsl:function>
                                                                  <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                   <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                    <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                     <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                      <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                       <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </LRE>
                                                                      <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                       <ATTR name="uri" line="82" module="rxr.xsl">
                                                                       </ATTR>
                                                                      </LRE>
                                                                      <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                       <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                       </xsl:if>
                                                                       <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                        <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                         <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                          <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                          </xsl:attribute>
                                                                         </xsl:if>
                                                                         <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                          <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                           <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                            <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                             <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                              <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                              </xsl:variable>
                                                                              <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                               <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                               </xsl:value-of>
                                                                              </xsl:choose>
                                                                             </xsl:template>
                                                                            </xsl:call-template>
                                                                           </xsl:function>
                                                                          </xsl:value-of>
                                                                         </xsl:choose>
                                                                        </xsl:otherwise>
                                                                       </xsl:choose>
                                                                      </LRE>
                                                                     </LRE>
                                                                    </xsl:template>
                                                                   </xsl:call-template>
                                                                  </xsl:template>
                                                                 </xsl:call-template>
                                                               </xsl:for-each>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                            </xsl:template>
                                                           </xsl:call-template>
                                                          </xsl:variable>
                                                         </xsl:choose>
                                                        </xsl:template>
                                                       </source><!-- /CAEXFile/ExternalReference[1]/@Path -->
                                                      </xsl:apply-templates>
                                                     </xsl:template>
                                                    </source><!-- /CAEXFile/ExternalReference[1]/@Path -->
                                                    <source node="/CAEXFile/ExternalReference[1]/@Alias" line="-1" file="">
                                                     <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                      <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                       <source node="/CAEXFile/ExternalReference[1]/@Alias" line="-1" file="">
                                                        <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                         <xsl:choose line="497" column="10" module="generic.xsl">
                                                          <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                           <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                           </xsl:if>
                                                           <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                            <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                             <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                              <xsl:choose line="442" column="14" module="generic.xsl">
                                                               <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                               </xsl:value-of>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                             <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                              <xsl:choose line="460" column="10" module="generic.xsl">
                                                               <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                 <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                  <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                   <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                    <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                     <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                     </xsl:value-of>
                                                                    </xsl:function>
                                                                   </xsl:copy-of>
                                                                  </xsl:function>
                                                                  <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                   <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                    <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                     <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                      <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                       <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </LRE>
                                                                      <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                       <ATTR name="uri" line="82" module="rxr.xsl">
                                                                       </ATTR>
                                                                      </LRE>
                                                                      <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                       <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                       </xsl:if>
                                                                       <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                        <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                         <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                          <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                          </xsl:attribute>
                                                                         </xsl:if>
                                                                         <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                          <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                           <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                            <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                             <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                              <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                              </xsl:variable>
                                                                              <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                               <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                               </xsl:value-of>
                                                                              </xsl:choose>
                                                                             </xsl:template>
                                                                            </xsl:call-template>
                                                                           </xsl:function>
                                                                          </xsl:value-of>
                                                                         </xsl:choose>
                                                                        </xsl:otherwise>
                                                                       </xsl:choose>
                                                                      </LRE>
                                                                     </LRE>
                                                                    </xsl:template>
                                                                   </xsl:call-template>
                                                                  </xsl:template>
                                                                 </xsl:call-template>
                                                               </xsl:for-each>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                            </xsl:template>
                                                           </xsl:call-template>
                                                          </xsl:variable>
                                                         </xsl:choose>
                                                        </xsl:template>
                                                       </source><!-- /CAEXFile/ExternalReference[1]/@Alias -->
                                                      </xsl:apply-templates>
                                                     </xsl:template>
                                                    </source><!-- /CAEXFile/ExternalReference[1]/@Alias -->
                                                   </xsl:apply-templates>
                                                  </xsl:choose>
                                                 </xsl:if>
                                                </xsl:variable>
                                               </xsl:variable>
                                              </xsl:variable>
                                             </xsl:variable>
                                            </xsl:variable>
                                           </xsl:variable>
                                          </xsl:template>
                                         </xsl:call-template>
                                        </xsl:variable>
                                       </xsl:choose>
                                      </xsl:template>
                                     </source><!-- /CAEXFile/ExternalReference[1] -->
                                    </xsl:apply-templates>
                                   </xsl:template>
                                  </source><!-- /CAEXFile/ExternalReference[1] -->
                                  <source node="/CAEXFile/ExternalReference[2]" line="-1" file="">
                                   <xsl:template match="CAEXFile |CAEXFile/AdditionalInformation |CAEXFile/ExternalReference |CAEXFile/InstanceHierarchy |CAEXFile/RoleClassLib |CAEXFile/SystemUnitClassLib |CAEXFile/InstanceHierarchy/InternalElement |Attribute |RefSemantic |ExternalInterface |SupportedRoleClass |RoleRequirements |InterfaceClassLib |InterfaceClass |RoleClass |SystemUnitClass" mode="krextor:main" line="121" column="45" module="aml.xsl">
                                    <xsl:apply-templates select="." mode="krextor:create-resource" line="122" column="69" module="aml.xsl">
                                     <source node="/CAEXFile/ExternalReference[2]" line="-1" file="">
                                      <xsl:template match="*" mode="krextor:create-resource" line="398" column="56" module="generic.xsl">
                                       <xsl:choose line="399" column="10" module="generic.xsl">
                                        <xsl:variable name="mapping" line="406" module="generic.xsl">
                                         <xsl:call-template name="krextor:create-resource" line="408" column="49" module="generic.xsl">
                                          <xsl:template name="krextor:create-resource" line="269" column="46" module="generic.xsl">
                                           <xsl:variable name="subject" select="()" as="xs:string?" line="270" column="53" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="related-via-properties" as="xs:string*" select="()" tunnel="yes" line="271" column="81" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="related-via-inverse-properties" as="xs:string*" select="()" tunnel="yes" line="272" column="89" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="type" select="()" as="xs:string*" line="273" column="50" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="properties" as="node()*" line="274" column="41" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="process-next" as="node()*" select="*|@*" line="275" column="57" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="subject-uri" as="xs:string" tunnel="yes" line="277" column="57" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="blank-node" as="xs:boolean" select="false()" line="278" column="61" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="this-blank-node-id" select="()" as="xs:string?" line="279" column="64" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="collection" as="xs:boolean" select="false()" line="280" column="61" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="nested-call" as="xs:boolean" select="false()" tunnel="yes" line="281" column="75" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="autogenerate-fragment-uri" line="283" module="generic.xsl">
                                            <xsl:variable name="generated-uri" line="290" module="generic.xsl">
                                             <xsl:function name="krextor:uri-generation-method" as="xs:string*" line="292" column="68" module="uri.xsl">
                                              <xsl:apply-templates select="$node" mode="krextor:uri-generation-method" line="295" column="44" module="uri.xsl">
                                               <source node="/CAEXFile/ExternalReference[2]" line="-1" file="">
                                                <xsl:template match="node()|attribute() (: attribute() doesn't seem to be subsumed by node() :)" mode="krextor:uri-generation-method" as="xs:string*" line="287" column="68" module="uri.xsl">
                                                </xsl:template>
                                               </source><!-- /CAEXFile/ExternalReference[2] -->
                                              </xsl:apply-templates>
                                             </xsl:function>
                                             <xsl:function name="krextor:generate-uri" as="xs:anyURI?" line="208" column="59" module="uri.xsl">
                                              <xsl:value-of select="f:return-first(krextor:generate-uri-impl(), $autogenerate-fragment-uri, ($node, $base-uri))" line="216" column="114" module="uri.xsl">
                                               <xsl:function name="krextor:generate-uri-impl" as="element(krextor:generate-uri-impl)" line="274" column="88" module="uri.xsl">
                                                <LRE name="krextor:generate-uri-impl" line="275" column="30" module="uri.xsl">
                                                </LRE>
                                               </xsl:function>
                                               <xsl:function name="f:return-first" line="64" column="37" module="util.xsl">
                                                <xsl:function name="f:return-first-step" line="87" column="42" module="util.xsl">
                                                 <xsl:variable name="result" line="92" module="util.xsl">
                                                  <xsl:function name="f:apply" line="16" column="32" module="func-apply.xsl">
                                                   <xsl:apply-templates select="$pFunc" mode="f:FXSL" line="21" column="56" module="func-apply.xsl">
                                                    <source node="krextor:generate-uri-impl" line="-1" file="uri.xsl">
                                                     <xsl:template match="krextor:generate-uri-impl" as="xs:anyURI?" mode="f:FXSL" line="279" column="79" module="uri.xsl">
                                                      <xsl:variable name="arg1" as="xs:string" line="280" column="37" module="uri.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="arg2" as="item()+" line="281" column="35" module="uri.xsl">
                                                      </xsl:variable>
                                                      <xsl:function name="krextor:generate-uri-impl" line="226" column="48" module="uri.xsl">
                                                       <xsl:variable name="node" line="229" module="uri.xsl">
                                                        <xsl:variable name="base-uri" line="230" module="uri.xsl">
                                                         <xsl:variable name="method-element" line="231" module="uri.xsl">
                                                          <xsl:apply-templates select="$method-element" line="234" column="44" module="uri.xsl">
                                                           <xsl:element name="{concat('krextor-genuri:', $method)}" line="232" column="60" module="uri.xsl">
                                                           </xsl:element>
                                                           <source node="krextor-genuri:global-element-index" line="-1" file="">
                                                            <xsl:template match="krextor-genuri:global-element-index" as="xs:string?" line="66" column="79" module="aml.xsl">
                                                             <xsl:variable name="node" as="node()" line="67" column="38" module="aml.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="base-uri" as="xs:anyURI" line="68" column="45" module="aml.xsl">
                                                             </xsl:variable>
                                                             <xsl:function name="krextor:global-element-index" as="xs:string?" line="60" column="71" module="aml.xsl">
                                                              <xsl:value-of select="concat(local-name($node), count(root($node)//*[local-name() eq local-name($node) and . &lt;&lt; $node]) + 1)" line="62" column="135" module="aml.xsl">
                                                              </xsl:value-of>
                                                             </xsl:function>
                                                            </xsl:template>
                                                           </source><!-- krextor-genuri:global-element-index -->
                                                          </xsl:apply-templates>
                                                         </xsl:variable>
                                                        </xsl:variable>
                                                       </xsl:variable>
                                                      </xsl:function>
                                                     </xsl:template>
                                                    </source><!-- krextor:generate-uri-impl -->
                                                   </xsl:apply-templates>
                                                  </xsl:function>
                                                 </xsl:variable>
                                                </xsl:function>
                                               </xsl:function>
                                              </xsl:value-of>
                                             </xsl:function>
                                             <xsl:variable name="generated-blank-node" line="291" module="generic.xsl">
                                              <xsl:variable name="generated-blank-node-id" line="298" module="generic.xsl">
                                               <xsl:variable name="subject" line="299" module="generic.xsl">
                                                <xsl:variable name="subject-type" line="300" module="generic.xsl">
                                                 <xsl:if test="exists($generated-uri)" line="301" column="36" module="generic.xsl">
                                                  <xsl:if test="$nested-call" line="302" column="30" module="generic.xsl">
                                                   <xsl:call-template name="krextor:related-via-properties" line="306" column="56" module="generic.xsl">
                                                    <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                     <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:choose line="212" column="10" module="generic.xsl">
                                                      <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                       <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                        <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                         <xsl:variable name="actual-object" line="557" module="generic.xsl">
                                                          <xsl:variable name="actual-property" line="560" module="generic.xsl">
                                                           <xsl:variable name="actual-inverse" line="562" module="generic.xsl">
                                                            <xsl:choose line="563" column="14" module="generic.xsl">
                                                             <xsl:choose line="578" column="15" module="generic.xsl">
                                                              <xsl:for-each select="$actual-property" line="593" column="44" module="generic.xsl">
                                                                <xsl:call-template name="krextor:output-triple-impl" line="594" column="54" module="generic.xsl">
                                                                 <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                  <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                  </xsl:if>
                                                                  <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                  </xsl:if>
                                                                  <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                   <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                    <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                     <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                      <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                      </xsl:attribute>
                                                                     </LRE>
                                                                     <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                      <ATTR name="uri" line="82" module="rxr.xsl">
                                                                      </ATTR>
                                                                     </LRE>
                                                                     <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                      <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                      </xsl:if>
                                                                      <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                       <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </xsl:choose>
                                                                     </LRE>
                                                                    </LRE>
                                                                   </xsl:template>
                                                                  </xsl:call-template>
                                                                 </xsl:template>
                                                                </xsl:call-template>
                                                              </xsl:for-each>
                                                             </xsl:choose>
                                                            </xsl:choose>
                                                           </xsl:variable>
                                                          </xsl:variable>
                                                         </xsl:variable>
                                                        </xsl:if>
                                                       </xsl:template>
                                                      </xsl:call-template>
                                                     </xsl:choose>
                                                    </xsl:template>
                                                   </xsl:call-template>
                                                   <xsl:call-template name="krextor:related-via-properties" line="312" column="56" module="generic.xsl">
                                                    <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                     <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:choose line="212" column="10" module="generic.xsl">
                                                      <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                       <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                        <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                        </xsl:if>
                                                       </xsl:template>
                                                      </xsl:call-template>
                                                     </xsl:choose>
                                                    </xsl:template>
                                                   </xsl:call-template>
                                                  </xsl:if>
                                                  <xsl:for-each select="$type" line="322" column="31" module="generic.xsl">
                                                    <xsl:call-template name="krextor:output-triple-impl" line="323" column="52" module="generic.xsl">
                                                     <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                      <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                      </xsl:if>
                                                      <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                      </xsl:if>
                                                      <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                       <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                        <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                         <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                          <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                          </xsl:attribute>
                                                         </LRE>
                                                         <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                          <ATTR name="uri" line="82" module="rxr.xsl">
                                                          </ATTR>
                                                         </LRE>
                                                         <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                          <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                          </xsl:if>
                                                          <xsl:choose line="87" column="11" module="rxr.xsl">
                                                           <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                           </xsl:attribute>
                                                          </xsl:choose>
                                                         </LRE>
                                                        </LRE>
                                                       </xsl:template>
                                                      </xsl:call-template>
                                                     </xsl:template>
                                                    </xsl:call-template>
                                                  </xsl:for-each>
                                                  <xsl:if test="$properties" line="333" column="29" module="generic.xsl">
                                                  </xsl:if>
                                                  <xsl:choose line="357" column="14" module="generic.xsl">
                                                   <xsl:apply-templates select="$process-next" mode="krextor:main" line="366" column="67" module="generic.xsl">
                                                    <source node="/CAEXFile/ExternalReference[2]/@Path" line="-1" file="">
                                                     <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                      <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                       <source node="/CAEXFile/ExternalReference[2]/@Path" line="-1" file="">
                                                        <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                         <xsl:choose line="497" column="10" module="generic.xsl">
                                                          <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                           <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                           </xsl:if>
                                                           <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                            <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                             <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                              <xsl:choose line="442" column="14" module="generic.xsl">
                                                               <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                               </xsl:value-of>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                             <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                              <xsl:choose line="460" column="10" module="generic.xsl">
                                                               <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                 <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                  <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                   <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                    <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                     <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                     </xsl:value-of>
                                                                    </xsl:function>
                                                                   </xsl:copy-of>
                                                                  </xsl:function>
                                                                  <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                   <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                    <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                     <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                      <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                       <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </LRE>
                                                                      <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                       <ATTR name="uri" line="82" module="rxr.xsl">
                                                                       </ATTR>
                                                                      </LRE>
                                                                      <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                       <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                       </xsl:if>
                                                                       <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                        <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                         <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                          <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                          </xsl:attribute>
                                                                         </xsl:if>
                                                                         <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                          <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                           <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                            <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                             <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                              <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                              </xsl:variable>
                                                                              <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                               <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                               </xsl:value-of>
                                                                              </xsl:choose>
                                                                             </xsl:template>
                                                                            </xsl:call-template>
                                                                           </xsl:function>
                                                                          </xsl:value-of>
                                                                         </xsl:choose>
                                                                        </xsl:otherwise>
                                                                       </xsl:choose>
                                                                      </LRE>
                                                                     </LRE>
                                                                    </xsl:template>
                                                                   </xsl:call-template>
                                                                  </xsl:template>
                                                                 </xsl:call-template>
                                                               </xsl:for-each>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                            </xsl:template>
                                                           </xsl:call-template>
                                                          </xsl:variable>
                                                         </xsl:choose>
                                                        </xsl:template>
                                                       </source><!-- /CAEXFile/ExternalReference[2]/@Path -->
                                                      </xsl:apply-templates>
                                                     </xsl:template>
                                                    </source><!-- /CAEXFile/ExternalReference[2]/@Path -->
                                                    <source node="/CAEXFile/ExternalReference[2]/@Alias" line="-1" file="">
                                                     <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                      <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                       <source node="/CAEXFile/ExternalReference[2]/@Alias" line="-1" file="">
                                                        <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                         <xsl:choose line="497" column="10" module="generic.xsl">
                                                          <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                           <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                           </xsl:if>
                                                           <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                            <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                             <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                              <xsl:choose line="442" column="14" module="generic.xsl">
                                                               <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                               </xsl:value-of>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                             <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                              <xsl:choose line="460" column="10" module="generic.xsl">
                                                               <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                 <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                  <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                   <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                    <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                     <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                     </xsl:value-of>
                                                                    </xsl:function>
                                                                   </xsl:copy-of>
                                                                  </xsl:function>
                                                                  <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                   <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                    <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                     <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                      <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                       <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </LRE>
                                                                      <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                       <ATTR name="uri" line="82" module="rxr.xsl">
                                                                       </ATTR>
                                                                      </LRE>
                                                                      <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                       <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                       </xsl:if>
                                                                       <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                        <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                         <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                          <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                          </xsl:attribute>
                                                                         </xsl:if>
                                                                         <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                          <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                           <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                            <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                             <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                              <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                              </xsl:variable>
                                                                              <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                               <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                               </xsl:value-of>
                                                                              </xsl:choose>
                                                                             </xsl:template>
                                                                            </xsl:call-template>
                                                                           </xsl:function>
                                                                          </xsl:value-of>
                                                                         </xsl:choose>
                                                                        </xsl:otherwise>
                                                                       </xsl:choose>
                                                                      </LRE>
                                                                     </LRE>
                                                                    </xsl:template>
                                                                   </xsl:call-template>
                                                                  </xsl:template>
                                                                 </xsl:call-template>
                                                               </xsl:for-each>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                            </xsl:template>
                                                           </xsl:call-template>
                                                          </xsl:variable>
                                                         </xsl:choose>
                                                        </xsl:template>
                                                       </source><!-- /CAEXFile/ExternalReference[2]/@Alias -->
                                                      </xsl:apply-templates>
                                                     </xsl:template>
                                                    </source><!-- /CAEXFile/ExternalReference[2]/@Alias -->
                                                   </xsl:apply-templates>
                                                  </xsl:choose>
                                                 </xsl:if>
                                                </xsl:variable>
                                               </xsl:variable>
                                              </xsl:variable>
                                             </xsl:variable>
                                            </xsl:variable>
                                           </xsl:variable>
                                          </xsl:template>
                                         </xsl:call-template>
                                        </xsl:variable>
                                       </xsl:choose>
                                      </xsl:template>
                                     </source><!-- /CAEXFile/ExternalReference[2] -->
                                    </xsl:apply-templates>
                                   </xsl:template>
                                  </source><!-- /CAEXFile/ExternalReference[2] -->
                                  <source node="/CAEXFile/RoleClassLib[1]" line="-1" file="">
                                   <xsl:template match="CAEXFile |CAEXFile/AdditionalInformation |CAEXFile/ExternalReference |CAEXFile/InstanceHierarchy |CAEXFile/RoleClassLib |CAEXFile/SystemUnitClassLib |CAEXFile/InstanceHierarchy/InternalElement |Attribute |RefSemantic |ExternalInterface |SupportedRoleClass |RoleRequirements |InterfaceClassLib |InterfaceClass |RoleClass |SystemUnitClass" mode="krextor:main" line="121" column="45" module="aml.xsl">
                                    <xsl:apply-templates select="." mode="krextor:create-resource" line="122" column="69" module="aml.xsl">
                                     <source node="/CAEXFile/RoleClassLib[1]" line="-1" file="">
                                      <xsl:template match="*" mode="krextor:create-resource" line="398" column="56" module="generic.xsl">
                                       <xsl:choose line="399" column="10" module="generic.xsl">
                                        <xsl:variable name="mapping" line="406" module="generic.xsl">
                                         <xsl:call-template name="krextor:create-resource" line="408" column="49" module="generic.xsl">
                                          <xsl:template name="krextor:create-resource" line="269" column="46" module="generic.xsl">
                                           <xsl:variable name="subject" select="()" as="xs:string?" line="270" column="53" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="related-via-properties" as="xs:string*" select="()" tunnel="yes" line="271" column="81" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="related-via-inverse-properties" as="xs:string*" select="()" tunnel="yes" line="272" column="89" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="type" select="()" as="xs:string*" line="273" column="50" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="properties" as="node()*" line="274" column="41" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="process-next" as="node()*" select="*|@*" line="275" column="57" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="subject-uri" as="xs:string" tunnel="yes" line="277" column="57" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="blank-node" as="xs:boolean" select="false()" line="278" column="61" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="this-blank-node-id" select="()" as="xs:string?" line="279" column="64" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="collection" as="xs:boolean" select="false()" line="280" column="61" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="nested-call" as="xs:boolean" select="false()" tunnel="yes" line="281" column="75" module="generic.xsl">
                                           </xsl:variable>
                                           <xsl:variable name="autogenerate-fragment-uri" line="283" module="generic.xsl">
                                            <xsl:variable name="generated-uri" line="290" module="generic.xsl">
                                             <xsl:function name="krextor:uri-generation-method" as="xs:string*" line="292" column="68" module="uri.xsl">
                                              <xsl:apply-templates select="$node" mode="krextor:uri-generation-method" line="295" column="44" module="uri.xsl">
                                               <source node="/CAEXFile/RoleClassLib[1]" line="-1" file="">
                                                <xsl:template match="node()|attribute() (: attribute() doesn't seem to be subsumed by node() :)" mode="krextor:uri-generation-method" as="xs:string*" line="287" column="68" module="uri.xsl">
                                                </xsl:template>
                                               </source><!-- /CAEXFile/RoleClassLib[1] -->
                                              </xsl:apply-templates>
                                             </xsl:function>
                                             <xsl:function name="krextor:generate-uri" as="xs:anyURI?" line="208" column="59" module="uri.xsl">
                                              <xsl:value-of select="f:return-first(krextor:generate-uri-impl(), $autogenerate-fragment-uri, ($node, $base-uri))" line="216" column="114" module="uri.xsl">
                                               <xsl:function name="krextor:generate-uri-impl" as="element(krextor:generate-uri-impl)" line="274" column="88" module="uri.xsl">
                                                <LRE name="krextor:generate-uri-impl" line="275" column="30" module="uri.xsl">
                                                </LRE>
                                               </xsl:function>
                                               <xsl:function name="f:return-first" line="64" column="37" module="util.xsl">
                                                <xsl:function name="f:return-first-step" line="87" column="42" module="util.xsl">
                                                 <xsl:variable name="result" line="92" module="util.xsl">
                                                  <xsl:function name="f:apply" line="16" column="32" module="func-apply.xsl">
                                                   <xsl:apply-templates select="$pFunc" mode="f:FXSL" line="21" column="56" module="func-apply.xsl">
                                                    <source node="krextor:generate-uri-impl" line="-1" file="uri.xsl">
                                                     <xsl:template match="krextor:generate-uri-impl" as="xs:anyURI?" mode="f:FXSL" line="279" column="79" module="uri.xsl">
                                                      <xsl:variable name="arg1" as="xs:string" line="280" column="37" module="uri.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="arg2" as="item()+" line="281" column="35" module="uri.xsl">
                                                      </xsl:variable>
                                                      <xsl:function name="krextor:generate-uri-impl" line="226" column="48" module="uri.xsl">
                                                       <xsl:variable name="node" line="229" module="uri.xsl">
                                                        <xsl:variable name="base-uri" line="230" module="uri.xsl">
                                                         <xsl:variable name="method-element" line="231" module="uri.xsl">
                                                          <xsl:apply-templates select="$method-element" line="234" column="44" module="uri.xsl">
                                                           <xsl:element name="{concat('krextor-genuri:', $method)}" line="232" column="60" module="uri.xsl">
                                                           </xsl:element>
                                                           <source node="krextor-genuri:global-element-index" line="-1" file="">
                                                            <xsl:template match="krextor-genuri:global-element-index" as="xs:string?" line="66" column="79" module="aml.xsl">
                                                             <xsl:variable name="node" as="node()" line="67" column="38" module="aml.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="base-uri" as="xs:anyURI" line="68" column="45" module="aml.xsl">
                                                             </xsl:variable>
                                                             <xsl:function name="krextor:global-element-index" as="xs:string?" line="60" column="71" module="aml.xsl">
                                                              <xsl:value-of select="concat(local-name($node), count(root($node)//*[local-name() eq local-name($node) and . &lt;&lt; $node]) + 1)" line="62" column="135" module="aml.xsl">
                                                              </xsl:value-of>
                                                             </xsl:function>
                                                            </xsl:template>
                                                           </source><!-- krextor-genuri:global-element-index -->
                                                          </xsl:apply-templates>
                                                         </xsl:variable>
                                                        </xsl:variable>
                                                       </xsl:variable>
                                                      </xsl:function>
                                                     </xsl:template>
                                                    </source><!-- krextor:generate-uri-impl -->
                                                   </xsl:apply-templates>
                                                  </xsl:function>
                                                 </xsl:variable>
                                                </xsl:function>
                                               </xsl:function>
                                              </xsl:value-of>
                                             </xsl:function>
                                             <xsl:variable name="generated-blank-node" line="291" module="generic.xsl">
                                              <xsl:variable name="generated-blank-node-id" line="298" module="generic.xsl">
                                               <xsl:variable name="subject" line="299" module="generic.xsl">
                                                <xsl:variable name="subject-type" line="300" module="generic.xsl">
                                                 <xsl:if test="exists($generated-uri)" line="301" column="36" module="generic.xsl">
                                                  <xsl:if test="$nested-call" line="302" column="30" module="generic.xsl">
                                                   <xsl:call-template name="krextor:related-via-properties" line="306" column="56" module="generic.xsl">
                                                    <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                     <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:choose line="212" column="10" module="generic.xsl">
                                                      <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                       <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                        <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                         <xsl:variable name="actual-object" line="557" module="generic.xsl">
                                                          <xsl:variable name="actual-property" line="560" module="generic.xsl">
                                                           <xsl:variable name="actual-inverse" line="562" module="generic.xsl">
                                                            <xsl:choose line="563" column="14" module="generic.xsl">
                                                             <xsl:choose line="578" column="15" module="generic.xsl">
                                                              <xsl:for-each select="$actual-property" line="593" column="44" module="generic.xsl">
                                                                <xsl:call-template name="krextor:output-triple-impl" line="594" column="54" module="generic.xsl">
                                                                 <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                  <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                  </xsl:variable>
                                                                  <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                  </xsl:if>
                                                                  <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                  </xsl:if>
                                                                  <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                   <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                    <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                    </xsl:variable>
                                                                    <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                     <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                      <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                      </xsl:attribute>
                                                                     </LRE>
                                                                     <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                      <ATTR name="uri" line="82" module="rxr.xsl">
                                                                      </ATTR>
                                                                     </LRE>
                                                                     <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                      <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                      </xsl:if>
                                                                      <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                       <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </xsl:choose>
                                                                     </LRE>
                                                                    </LRE>
                                                                   </xsl:template>
                                                                  </xsl:call-template>
                                                                 </xsl:template>
                                                                </xsl:call-template>
                                                              </xsl:for-each>
                                                             </xsl:choose>
                                                            </xsl:choose>
                                                           </xsl:variable>
                                                          </xsl:variable>
                                                         </xsl:variable>
                                                        </xsl:if>
                                                       </xsl:template>
                                                      </xsl:call-template>
                                                     </xsl:choose>
                                                    </xsl:template>
                                                   </xsl:call-template>
                                                   <xsl:call-template name="krextor:related-via-properties" line="312" column="56" module="generic.xsl">
                                                    <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                     <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                     </xsl:variable>
                                                     <xsl:choose line="212" column="10" module="generic.xsl">
                                                      <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                       <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                        <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                        </xsl:variable>
                                                        <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                        </xsl:if>
                                                       </xsl:template>
                                                      </xsl:call-template>
                                                     </xsl:choose>
                                                    </xsl:template>
                                                   </xsl:call-template>
                                                  </xsl:if>
                                                  <xsl:for-each select="$type" line="322" column="31" module="generic.xsl">
                                                    <xsl:call-template name="krextor:output-triple-impl" line="323" column="52" module="generic.xsl">
                                                     <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                      <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                      </xsl:variable>
                                                      <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                      </xsl:if>
                                                      <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                      </xsl:if>
                                                      <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                       <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                        <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                        </xsl:variable>
                                                        <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                         <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                          <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                          </xsl:attribute>
                                                         </LRE>
                                                         <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                          <ATTR name="uri" line="82" module="rxr.xsl">
                                                          </ATTR>
                                                         </LRE>
                                                         <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                          <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                          </xsl:if>
                                                          <xsl:choose line="87" column="11" module="rxr.xsl">
                                                           <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                           </xsl:attribute>
                                                          </xsl:choose>
                                                         </LRE>
                                                        </LRE>
                                                       </xsl:template>
                                                      </xsl:call-template>
                                                     </xsl:template>
                                                    </xsl:call-template>
                                                  </xsl:for-each>
                                                  <xsl:if test="$properties" line="333" column="29" module="generic.xsl">
                                                  </xsl:if>
                                                  <xsl:choose line="357" column="14" module="generic.xsl">
                                                   <xsl:apply-templates select="$process-next" mode="krextor:main" line="366" column="67" module="generic.xsl">
                                                    <source node="/CAEXFile/RoleClassLib[1]/@Name" line="-1" file="">
                                                     <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                      <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                       <source node="/CAEXFile/RoleClassLib[1]/@Name" line="-1" file="">
                                                        <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                         <xsl:choose line="497" column="10" module="generic.xsl">
                                                          <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                           <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                           </xsl:if>
                                                           <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                            <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                             <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                              <xsl:choose line="442" column="14" module="generic.xsl">
                                                               <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                               </xsl:value-of>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                             <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                              <xsl:choose line="460" column="10" module="generic.xsl">
                                                               <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                 <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                  <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                   <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                    <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                     <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                     </xsl:value-of>
                                                                    </xsl:function>
                                                                   </xsl:copy-of>
                                                                  </xsl:function>
                                                                  <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                   <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                    <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                     <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                      <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                       <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </LRE>
                                                                      <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                       <ATTR name="uri" line="82" module="rxr.xsl">
                                                                       </ATTR>
                                                                      </LRE>
                                                                      <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                       <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                       </xsl:if>
                                                                       <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                        <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                         <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                          <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                          </xsl:attribute>
                                                                         </xsl:if>
                                                                         <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                          <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                           <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                            <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                             <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                              <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                              </xsl:variable>
                                                                              <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                               <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                               </xsl:value-of>
                                                                              </xsl:choose>
                                                                             </xsl:template>
                                                                            </xsl:call-template>
                                                                           </xsl:function>
                                                                          </xsl:value-of>
                                                                         </xsl:choose>
                                                                        </xsl:otherwise>
                                                                       </xsl:choose>
                                                                      </LRE>
                                                                     </LRE>
                                                                    </xsl:template>
                                                                   </xsl:call-template>
                                                                  </xsl:template>
                                                                 </xsl:call-template>
                                                               </xsl:for-each>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                            </xsl:template>
                                                           </xsl:call-template>
                                                          </xsl:variable>
                                                         </xsl:choose>
                                                        </xsl:template>
                                                       </source><!-- /CAEXFile/RoleClassLib[1]/@Name -->
                                                      </xsl:apply-templates>
                                                     </xsl:template>
                                                    </source><!-- /CAEXFile/RoleClassLib[1]/@Name -->
                                                    <source node="/CAEXFile/RoleClassLib[1]/Description[1]/text()[1]" line="-1" file="">
                                                     <xsl:template match="@*|text()" mode="krextor:main" line="740" column="54" module="generic.xsl">
                                                     </xsl:template>
                                                    </source><!-- /CAEXFile/RoleClassLib[1]/Description[1]/text()[1] -->
                                                    <source node="/CAEXFile/RoleClassLib[1]/Version[1]" line="-1" file="">
                                                     <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                      <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                       <source node="/CAEXFile/RoleClassLib[1]/Version[1]" line="-1" file="">
                                                        <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                         <xsl:choose line="497" column="10" module="generic.xsl">
                                                          <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                           <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                           </xsl:if>
                                                           <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                            <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                             <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                              <xsl:choose line="442" column="14" module="generic.xsl">
                                                               <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                               </xsl:value-of>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                             <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                              <xsl:choose line="460" column="10" module="generic.xsl">
                                                               <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                 <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                  <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                   <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                    <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                     <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                     </xsl:value-of>
                                                                    </xsl:function>
                                                                   </xsl:copy-of>
                                                                  </xsl:function>
                                                                  <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                   <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                   </xsl:variable>
                                                                   <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                   </xsl:if>
                                                                   <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                    <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                     <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                     </xsl:variable>
                                                                     <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                      <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                       <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                       </xsl:attribute>
                                                                      </LRE>
                                                                      <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                       <ATTR name="uri" line="82" module="rxr.xsl">
                                                                       </ATTR>
                                                                      </LRE>
                                                                      <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                       <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                       </xsl:if>
                                                                       <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                        <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                         <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                          <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                          </xsl:attribute>
                                                                         </xsl:if>
                                                                         <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                          <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                           <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                            <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                             <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                              <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                              </xsl:variable>
                                                                              <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                               <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                               </xsl:value-of>
                                                                              </xsl:choose>
                                                                             </xsl:template>
                                                                            </xsl:call-template>
                                                                           </xsl:function>
                                                                          </xsl:value-of>
                                                                         </xsl:choose>
                                                                        </xsl:otherwise>
                                                                       </xsl:choose>
                                                                      </LRE>
                                                                     </LRE>
                                                                    </xsl:template>
                                                                   </xsl:call-template>
                                                                  </xsl:template>
                                                                 </xsl:call-template>
                                                               </xsl:for-each>
                                                              </xsl:choose>
                                                             </xsl:variable>
                                                            </xsl:template>
                                                           </xsl:call-template>
                                                          </xsl:variable>
                                                         </xsl:choose>
                                                        </xsl:template>
                                                       </source><!-- /CAEXFile/RoleClassLib[1]/Version[1] -->
                                                      </xsl:apply-templates>
                                                     </xsl:template>
                                                    </source><!-- /CAEXFile/RoleClassLib[1]/Version[1] -->
                                                    <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]" line="-1" file="">
                                                     <xsl:template match="CAEXFile |CAEXFile/AdditionalInformation |CAEXFile/ExternalReference |CAEXFile/InstanceHierarchy |CAEXFile/RoleClassLib |CAEXFile/SystemUnitClassLib |CAEXFile/InstanceHierarchy/InternalElement |Attribute |RefSemantic |ExternalInterface |SupportedRoleClass |RoleRequirements |InterfaceClassLib |InterfaceClass |RoleClass |SystemUnitClass" mode="krextor:main" line="121" column="45" module="aml.xsl">
                                                      <xsl:apply-templates select="." mode="krextor:create-resource" line="122" column="69" module="aml.xsl">
                                                       <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]" line="-1" file="">
                                                        <xsl:template match="*" mode="krextor:create-resource" line="398" column="56" module="generic.xsl">
                                                         <xsl:choose line="399" column="10" module="generic.xsl">
                                                          <xsl:variable name="mapping" line="406" module="generic.xsl">
                                                           <xsl:call-template name="krextor:create-resource" line="408" column="49" module="generic.xsl">
                                                            <xsl:template name="krextor:create-resource" line="269" column="46" module="generic.xsl">
                                                             <xsl:variable name="subject" select="()" as="xs:string?" line="270" column="53" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="related-via-properties" as="xs:string*" select="()" tunnel="yes" line="271" column="81" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="related-via-inverse-properties" as="xs:string*" select="()" tunnel="yes" line="272" column="89" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="type" select="()" as="xs:string*" line="273" column="50" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="properties" as="node()*" line="274" column="41" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="process-next" as="node()*" select="*|@*" line="275" column="57" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="subject-uri" as="xs:string" tunnel="yes" line="277" column="57" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="blank-node" as="xs:boolean" select="false()" line="278" column="61" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="this-blank-node-id" select="()" as="xs:string?" line="279" column="64" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="collection" as="xs:boolean" select="false()" line="280" column="61" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="nested-call" as="xs:boolean" select="false()" tunnel="yes" line="281" column="75" module="generic.xsl">
                                                             </xsl:variable>
                                                             <xsl:variable name="autogenerate-fragment-uri" line="283" module="generic.xsl">
                                                              <xsl:variable name="generated-uri" line="290" module="generic.xsl">
                                                               <xsl:function name="krextor:uri-generation-method" as="xs:string*" line="292" column="68" module="uri.xsl">
                                                                <xsl:apply-templates select="$node" mode="krextor:uri-generation-method" line="295" column="44" module="uri.xsl">
                                                                 <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]" line="-1" file="">
                                                                  <xsl:template match="node()|attribute() (: attribute() doesn't seem to be subsumed by node() :)" mode="krextor:uri-generation-method" as="xs:string*" line="287" column="68" module="uri.xsl">
                                                                  </xsl:template>
                                                                 </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1] -->
                                                                </xsl:apply-templates>
                                                               </xsl:function>
                                                               <xsl:function name="krextor:generate-uri" as="xs:anyURI?" line="208" column="59" module="uri.xsl">
                                                                <xsl:value-of select="f:return-first(krextor:generate-uri-impl(), $autogenerate-fragment-uri, ($node, $base-uri))" line="216" column="114" module="uri.xsl">
                                                                 <xsl:function name="krextor:generate-uri-impl" as="element(krextor:generate-uri-impl)" line="274" column="88" module="uri.xsl">
                                                                  <LRE name="krextor:generate-uri-impl" line="275" column="30" module="uri.xsl">
                                                                  </LRE>
                                                                 </xsl:function>
                                                                 <xsl:function name="f:return-first" line="64" column="37" module="util.xsl">
                                                                  <xsl:function name="f:return-first-step" line="87" column="42" module="util.xsl">
                                                                   <xsl:variable name="result" line="92" module="util.xsl">
                                                                    <xsl:function name="f:apply" line="16" column="32" module="func-apply.xsl">
                                                                     <xsl:apply-templates select="$pFunc" mode="f:FXSL" line="21" column="56" module="func-apply.xsl">
                                                                      <source node="krextor:generate-uri-impl" line="-1" file="uri.xsl">
                                                                       <xsl:template match="krextor:generate-uri-impl" as="xs:anyURI?" mode="f:FXSL" line="279" column="79" module="uri.xsl">
                                                                        <xsl:variable name="arg1" as="xs:string" line="280" column="37" module="uri.xsl">
                                                                        </xsl:variable>
                                                                        <xsl:variable name="arg2" as="item()+" line="281" column="35" module="uri.xsl">
                                                                        </xsl:variable>
                                                                        <xsl:function name="krextor:generate-uri-impl" line="226" column="48" module="uri.xsl">
                                                                         <xsl:variable name="node" line="229" module="uri.xsl">
                                                                          <xsl:variable name="base-uri" line="230" module="uri.xsl">
                                                                           <xsl:variable name="method-element" line="231" module="uri.xsl">
                                                                            <xsl:apply-templates select="$method-element" line="234" column="44" module="uri.xsl">
                                                                             <xsl:element name="{concat('krextor-genuri:', $method)}" line="232" column="60" module="uri.xsl">
                                                                             </xsl:element>
                                                                             <source node="krextor-genuri:global-element-index" line="-1" file="">
                                                                              <xsl:template match="krextor-genuri:global-element-index" as="xs:string?" line="66" column="79" module="aml.xsl">
                                                                               <xsl:variable name="node" as="node()" line="67" column="38" module="aml.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="base-uri" as="xs:anyURI" line="68" column="45" module="aml.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:function name="krextor:global-element-index" as="xs:string?" line="60" column="71" module="aml.xsl">
                                                                                <xsl:value-of select="concat(local-name($node), count(root($node)//*[local-name() eq local-name($node) and . &lt;&lt; $node]) + 1)" line="62" column="135" module="aml.xsl">
                                                                                </xsl:value-of>
                                                                               </xsl:function>
                                                                              </xsl:template>
                                                                             </source><!-- krextor-genuri:global-element-index -->
                                                                            </xsl:apply-templates>
                                                                           </xsl:variable>
                                                                          </xsl:variable>
                                                                         </xsl:variable>
                                                                        </xsl:function>
                                                                       </xsl:template>
                                                                      </source><!-- krextor:generate-uri-impl -->
                                                                     </xsl:apply-templates>
                                                                    </xsl:function>
                                                                   </xsl:variable>
                                                                  </xsl:function>
                                                                 </xsl:function>
                                                                </xsl:value-of>
                                                               </xsl:function>
                                                               <xsl:variable name="generated-blank-node" line="291" module="generic.xsl">
                                                                <xsl:variable name="generated-blank-node-id" line="298" module="generic.xsl">
                                                                 <xsl:variable name="subject" line="299" module="generic.xsl">
                                                                  <xsl:variable name="subject-type" line="300" module="generic.xsl">
                                                                   <xsl:if test="exists($generated-uri)" line="301" column="36" module="generic.xsl">
                                                                    <xsl:if test="$nested-call" line="302" column="30" module="generic.xsl">
                                                                     <xsl:call-template name="krextor:related-via-properties" line="306" column="56" module="generic.xsl">
                                                                      <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                                       <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                                       </xsl:variable>
                                                                       <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                                       </xsl:variable>
                                                                       <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                                       </xsl:variable>
                                                                       <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                                       </xsl:variable>
                                                                       <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                                       </xsl:variable>
                                                                       <xsl:choose line="212" column="10" module="generic.xsl">
                                                                        <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                                         <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                                          <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                                           <xsl:variable name="actual-object" line="557" module="generic.xsl">
                                                                            <xsl:variable name="actual-property" line="560" module="generic.xsl">
                                                                             <xsl:variable name="actual-inverse" line="562" module="generic.xsl">
                                                                              <xsl:choose line="563" column="14" module="generic.xsl">
                                                                               <xsl:choose line="578" column="15" module="generic.xsl">
                                                                                <xsl:for-each select="$actual-property" line="593" column="44" module="generic.xsl">
                                                                                  <xsl:call-template name="krextor:output-triple-impl" line="594" column="54" module="generic.xsl">
                                                                                   <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                    <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                    </xsl:variable>
                                                                                    <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                    </xsl:variable>
                                                                                    <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                    </xsl:variable>
                                                                                    <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                    </xsl:variable>
                                                                                    <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                    </xsl:variable>
                                                                                    <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                    </xsl:variable>
                                                                                    <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                    </xsl:variable>
                                                                                    <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                    </xsl:variable>
                                                                                    <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                    </xsl:if>
                                                                                    <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                    </xsl:if>
                                                                                    <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                     <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                      <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                      </xsl:variable>
                                                                                      <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                      </xsl:variable>
                                                                                      <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                      </xsl:variable>
                                                                                      <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                      </xsl:variable>
                                                                                      <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                      </xsl:variable>
                                                                                      <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                      </xsl:variable>
                                                                                      <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                      </xsl:variable>
                                                                                      <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                       <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                        <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                        </xsl:attribute>
                                                                                       </LRE>
                                                                                       <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                        <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                        </ATTR>
                                                                                       </LRE>
                                                                                       <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                        <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                        </xsl:if>
                                                                                        <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                         <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                         </xsl:attribute>
                                                                                        </xsl:choose>
                                                                                       </LRE>
                                                                                      </LRE>
                                                                                     </xsl:template>
                                                                                    </xsl:call-template>
                                                                                   </xsl:template>
                                                                                  </xsl:call-template>
                                                                                  <xsl:call-template name="krextor:output-triple-impl" line="594" column="54" module="generic.xsl">
                                                                                   <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                    <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                    </xsl:variable>
                                                                                    <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                    </xsl:variable>
                                                                                    <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                    </xsl:variable>
                                                                                    <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                    </xsl:variable>
                                                                                    <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                    </xsl:variable>
                                                                                    <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                    </xsl:variable>
                                                                                    <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                    </xsl:variable>
                                                                                    <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                    </xsl:variable>
                                                                                    <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                    </xsl:if>
                                                                                    <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                    </xsl:if>
                                                                                    <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                     <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                      <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                      </xsl:variable>
                                                                                      <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                      </xsl:variable>
                                                                                      <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                      </xsl:variable>
                                                                                      <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                      </xsl:variable>
                                                                                      <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                      </xsl:variable>
                                                                                      <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                      </xsl:variable>
                                                                                      <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                      </xsl:variable>
                                                                                      <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                       <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                        <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                        </xsl:attribute>
                                                                                       </LRE>
                                                                                       <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                        <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                        </ATTR>
                                                                                       </LRE>
                                                                                       <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                        <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                        </xsl:if>
                                                                                        <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                         <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                         </xsl:attribute>
                                                                                        </xsl:choose>
                                                                                       </LRE>
                                                                                      </LRE>
                                                                                     </xsl:template>
                                                                                    </xsl:call-template>
                                                                                   </xsl:template>
                                                                                  </xsl:call-template>
                                                                                </xsl:for-each>
                                                                               </xsl:choose>
                                                                              </xsl:choose>
                                                                             </xsl:variable>
                                                                            </xsl:variable>
                                                                           </xsl:variable>
                                                                          </xsl:if>
                                                                         </xsl:template>
                                                                        </xsl:call-template>
                                                                       </xsl:choose>
                                                                      </xsl:template>
                                                                     </xsl:call-template>
                                                                     <xsl:call-template name="krextor:related-via-properties" line="312" column="56" module="generic.xsl">
                                                                      <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                                       <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                                       </xsl:variable>
                                                                       <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                                       </xsl:variable>
                                                                       <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                                       </xsl:variable>
                                                                       <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                                       </xsl:variable>
                                                                       <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                                       </xsl:variable>
                                                                       <xsl:choose line="212" column="10" module="generic.xsl">
                                                                        <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                                         <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                                          <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                                          </xsl:if>
                                                                         </xsl:template>
                                                                        </xsl:call-template>
                                                                       </xsl:choose>
                                                                      </xsl:template>
                                                                     </xsl:call-template>
                                                                    </xsl:if>
                                                                    <xsl:for-each select="$type" line="322" column="31" module="generic.xsl">
                                                                      <xsl:call-template name="krextor:output-triple-impl" line="323" column="52" module="generic.xsl">
                                                                       <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                        <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                        </xsl:variable>
                                                                        <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                        </xsl:variable>
                                                                        <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                        </xsl:variable>
                                                                        <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                        </xsl:variable>
                                                                        <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                        </xsl:variable>
                                                                        <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                        </xsl:variable>
                                                                        <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                        </xsl:variable>
                                                                        <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                        </xsl:variable>
                                                                        <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                        </xsl:if>
                                                                        <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                        </xsl:if>
                                                                        <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                         <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                          <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                          </xsl:variable>
                                                                          <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                          </xsl:variable>
                                                                          <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                           <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                            <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                            </xsl:attribute>
                                                                           </LRE>
                                                                           <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                            <ATTR name="uri" line="82" module="rxr.xsl">
                                                                            </ATTR>
                                                                           </LRE>
                                                                           <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                            <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                            </xsl:if>
                                                                            <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                             <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                             </xsl:attribute>
                                                                            </xsl:choose>
                                                                           </LRE>
                                                                          </LRE>
                                                                         </xsl:template>
                                                                        </xsl:call-template>
                                                                       </xsl:template>
                                                                      </xsl:call-template>
                                                                    </xsl:for-each>
                                                                    <xsl:if test="$properties" line="333" column="29" module="generic.xsl">
                                                                    </xsl:if>
                                                                    <xsl:choose line="357" column="14" module="generic.xsl">
                                                                     <xsl:apply-templates select="$process-next" mode="krextor:main" line="366" column="67" module="generic.xsl">
                                                                      <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/@Name" line="-1" file="">
                                                                       <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                                        <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                                         <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/@Name" line="-1" file="">
                                                                          <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                                           <xsl:choose line="497" column="10" module="generic.xsl">
                                                                            <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                                             <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                                             </xsl:if>
                                                                             <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                                              <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                                               <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                                                <xsl:choose line="442" column="14" module="generic.xsl">
                                                                                 <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                                                 </xsl:value-of>
                                                                                </xsl:choose>
                                                                               </xsl:variable>
                                                                               <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                                                <xsl:choose line="460" column="10" module="generic.xsl">
                                                                                 <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                                   <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                                    <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                                     <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                                      <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                                       <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                                       </xsl:value-of>
                                                                                      </xsl:function>
                                                                                     </xsl:copy-of>
                                                                                    </xsl:function>
                                                                                    <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                     <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                     </xsl:variable>
                                                                                     <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                     </xsl:variable>
                                                                                     <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                     </xsl:variable>
                                                                                     <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                     </xsl:variable>
                                                                                     <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                     </xsl:variable>
                                                                                     <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                     </xsl:variable>
                                                                                     <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                     </xsl:variable>
                                                                                     <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                     </xsl:variable>
                                                                                     <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                     </xsl:if>
                                                                                     <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                     </xsl:if>
                                                                                     <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                      <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                       <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                       </xsl:variable>
                                                                                       <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                       </xsl:variable>
                                                                                       <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                       </xsl:variable>
                                                                                       <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                       </xsl:variable>
                                                                                       <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                       </xsl:variable>
                                                                                       <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                       </xsl:variable>
                                                                                       <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                       </xsl:variable>
                                                                                       <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                        <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                         <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                         </xsl:attribute>
                                                                                        </LRE>
                                                                                        <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                         <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                         </ATTR>
                                                                                        </LRE>
                                                                                        <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                         <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                         </xsl:if>
                                                                                         <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                          <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                                           <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                                            <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                                            </xsl:attribute>
                                                                                           </xsl:if>
                                                                                           <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                                            <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                                             <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                                              <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                                               <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                                                <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                                                </xsl:variable>
                                                                                                <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                                                 <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                                                 </xsl:value-of>
                                                                                                </xsl:choose>
                                                                                               </xsl:template>
                                                                                              </xsl:call-template>
                                                                                             </xsl:function>
                                                                                            </xsl:value-of>
                                                                                           </xsl:choose>
                                                                                          </xsl:otherwise>
                                                                                         </xsl:choose>
                                                                                        </LRE>
                                                                                       </LRE>
                                                                                      </xsl:template>
                                                                                     </xsl:call-template>
                                                                                    </xsl:template>
                                                                                   </xsl:call-template>
                                                                                 </xsl:for-each>
                                                                                </xsl:choose>
                                                                               </xsl:variable>
                                                                              </xsl:template>
                                                                             </xsl:call-template>
                                                                            </xsl:variable>
                                                                           </xsl:choose>
                                                                          </xsl:template>
                                                                         </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/@Name -->
                                                                        </xsl:apply-templates>
                                                                       </xsl:template>
                                                                      </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/@Name -->
                                                                      <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/@RefBaseClassPath" line="-1" file="">
                                                                       <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                                        <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                                         <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/@RefBaseClassPath" line="-1" file="">
                                                                          <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                                           <xsl:choose line="497" column="10" module="generic.xsl">
                                                                            <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                                             <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                                             </xsl:if>
                                                                             <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                                              <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                                               <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                                                <xsl:choose line="442" column="14" module="generic.xsl">
                                                                                 <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                                                 </xsl:value-of>
                                                                                </xsl:choose>
                                                                               </xsl:variable>
                                                                               <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                                                <xsl:choose line="460" column="10" module="generic.xsl">
                                                                                 <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                                   <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                                    <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                                     <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                                      <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                                       <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                                       </xsl:value-of>
                                                                                      </xsl:function>
                                                                                     </xsl:copy-of>
                                                                                    </xsl:function>
                                                                                    <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                     <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                     </xsl:variable>
                                                                                     <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                     </xsl:variable>
                                                                                     <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                     </xsl:variable>
                                                                                     <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                     </xsl:variable>
                                                                                     <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                     </xsl:variable>
                                                                                     <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                     </xsl:variable>
                                                                                     <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                     </xsl:variable>
                                                                                     <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                     </xsl:variable>
                                                                                     <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                     </xsl:if>
                                                                                     <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                     </xsl:if>
                                                                                     <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                      <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                       <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                       </xsl:variable>
                                                                                       <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                       </xsl:variable>
                                                                                       <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                       </xsl:variable>
                                                                                       <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                       </xsl:variable>
                                                                                       <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                       </xsl:variable>
                                                                                       <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                       </xsl:variable>
                                                                                       <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                       </xsl:variable>
                                                                                       <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                        <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                         <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                         </xsl:attribute>
                                                                                        </LRE>
                                                                                        <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                         <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                         </ATTR>
                                                                                        </LRE>
                                                                                        <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                         <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                         </xsl:if>
                                                                                         <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                          <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                                           <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                                            <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                                            </xsl:attribute>
                                                                                           </xsl:if>
                                                                                           <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                                            <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                                             <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                                              <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                                               <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                                                <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                                                </xsl:variable>
                                                                                                <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                                                 <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                                                 </xsl:value-of>
                                                                                                </xsl:choose>
                                                                                               </xsl:template>
                                                                                              </xsl:call-template>
                                                                                             </xsl:function>
                                                                                            </xsl:value-of>
                                                                                           </xsl:choose>
                                                                                          </xsl:otherwise>
                                                                                         </xsl:choose>
                                                                                        </LRE>
                                                                                       </LRE>
                                                                                      </xsl:template>
                                                                                     </xsl:call-template>
                                                                                    </xsl:template>
                                                                                   </xsl:call-template>
                                                                                 </xsl:for-each>
                                                                                </xsl:choose>
                                                                               </xsl:variable>
                                                                              </xsl:template>
                                                                             </xsl:call-template>
                                                                            </xsl:variable>
                                                                           </xsl:choose>
                                                                          </xsl:template>
                                                                         </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/@RefBaseClassPath -->
                                                                        </xsl:apply-templates>
                                                                       </xsl:template>
                                                                      </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/@RefBaseClassPath -->
                                                                      <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]" line="-1" file="">
                                                                       <xsl:template match="CAEXFile |CAEXFile/AdditionalInformation |CAEXFile/ExternalReference |CAEXFile/InstanceHierarchy |CAEXFile/RoleClassLib |CAEXFile/SystemUnitClassLib |CAEXFile/InstanceHierarchy/InternalElement |Attribute |RefSemantic |ExternalInterface |SupportedRoleClass |RoleRequirements |InterfaceClassLib |InterfaceClass |RoleClass |SystemUnitClass" mode="krextor:main" line="121" column="45" module="aml.xsl">
                                                                        <xsl:apply-templates select="." mode="krextor:create-resource" line="122" column="69" module="aml.xsl">
                                                                         <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]" line="-1" file="">
                                                                          <xsl:template match="*" mode="krextor:create-resource" line="398" column="56" module="generic.xsl">
                                                                           <xsl:choose line="399" column="10" module="generic.xsl">
                                                                            <xsl:variable name="mapping" line="406" module="generic.xsl">
                                                                             <xsl:call-template name="krextor:create-resource" line="408" column="49" module="generic.xsl">
                                                                              <xsl:template name="krextor:create-resource" line="269" column="46" module="generic.xsl">
                                                                               <xsl:variable name="subject" select="()" as="xs:string?" line="270" column="53" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="related-via-properties" as="xs:string*" select="()" tunnel="yes" line="271" column="81" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="related-via-inverse-properties" as="xs:string*" select="()" tunnel="yes" line="272" column="89" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="type" select="()" as="xs:string*" line="273" column="50" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="properties" as="node()*" line="274" column="41" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="process-next" as="node()*" select="*|@*" line="275" column="57" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="subject-uri" as="xs:string" tunnel="yes" line="277" column="57" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="blank-node" as="xs:boolean" select="false()" line="278" column="61" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="this-blank-node-id" select="()" as="xs:string?" line="279" column="64" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="collection" as="xs:boolean" select="false()" line="280" column="61" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="nested-call" as="xs:boolean" select="false()" tunnel="yes" line="281" column="75" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="autogenerate-fragment-uri" line="283" module="generic.xsl">
                                                                                <xsl:variable name="generated-uri" line="290" module="generic.xsl">
                                                                                 <xsl:function name="krextor:uri-generation-method" as="xs:string*" line="292" column="68" module="uri.xsl">
                                                                                  <xsl:apply-templates select="$node" mode="krextor:uri-generation-method" line="295" column="44" module="uri.xsl">
                                                                                   <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]" line="-1" file="">
                                                                                    <xsl:template match="node()|attribute() (: attribute() doesn't seem to be subsumed by node() :)" mode="krextor:uri-generation-method" as="xs:string*" line="287" column="68" module="uri.xsl">
                                                                                    </xsl:template>
                                                                                   </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1] -->
                                                                                  </xsl:apply-templates>
                                                                                 </xsl:function>
                                                                                 <xsl:function name="krextor:generate-uri" as="xs:anyURI?" line="208" column="59" module="uri.xsl">
                                                                                  <xsl:value-of select="f:return-first(krextor:generate-uri-impl(), $autogenerate-fragment-uri, ($node, $base-uri))" line="216" column="114" module="uri.xsl">
                                                                                   <xsl:function name="krextor:generate-uri-impl" as="element(krextor:generate-uri-impl)" line="274" column="88" module="uri.xsl">
                                                                                    <LRE name="krextor:generate-uri-impl" line="275" column="30" module="uri.xsl">
                                                                                    </LRE>
                                                                                   </xsl:function>
                                                                                   <xsl:function name="f:return-first" line="64" column="37" module="util.xsl">
                                                                                    <xsl:function name="f:return-first-step" line="87" column="42" module="util.xsl">
                                                                                     <xsl:variable name="result" line="92" module="util.xsl">
                                                                                      <xsl:function name="f:apply" line="16" column="32" module="func-apply.xsl">
                                                                                       <xsl:apply-templates select="$pFunc" mode="f:FXSL" line="21" column="56" module="func-apply.xsl">
                                                                                        <source node="krextor:generate-uri-impl" line="-1" file="uri.xsl">
                                                                                         <xsl:template match="krextor:generate-uri-impl" as="xs:anyURI?" mode="f:FXSL" line="279" column="79" module="uri.xsl">
                                                                                          <xsl:variable name="arg1" as="xs:string" line="280" column="37" module="uri.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="arg2" as="item()+" line="281" column="35" module="uri.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:function name="krextor:generate-uri-impl" line="226" column="48" module="uri.xsl">
                                                                                           <xsl:variable name="node" line="229" module="uri.xsl">
                                                                                            <xsl:variable name="base-uri" line="230" module="uri.xsl">
                                                                                             <xsl:variable name="method-element" line="231" module="uri.xsl">
                                                                                              <xsl:apply-templates select="$method-element" line="234" column="44" module="uri.xsl">
                                                                                               <xsl:element name="{concat('krextor-genuri:', $method)}" line="232" column="60" module="uri.xsl">
                                                                                               </xsl:element>
                                                                                               <source node="krextor-genuri:global-element-index" line="-1" file="">
                                                                                                <xsl:template match="krextor-genuri:global-element-index" as="xs:string?" line="66" column="79" module="aml.xsl">
                                                                                                 <xsl:variable name="node" as="node()" line="67" column="38" module="aml.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="base-uri" as="xs:anyURI" line="68" column="45" module="aml.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:function name="krextor:global-element-index" as="xs:string?" line="60" column="71" module="aml.xsl">
                                                                                                  <xsl:value-of select="concat(local-name($node), count(root($node)//*[local-name() eq local-name($node) and . &lt;&lt; $node]) + 1)" line="62" column="135" module="aml.xsl">
                                                                                                  </xsl:value-of>
                                                                                                 </xsl:function>
                                                                                                </xsl:template>
                                                                                               </source><!-- krextor-genuri:global-element-index -->
                                                                                              </xsl:apply-templates>
                                                                                             </xsl:variable>
                                                                                            </xsl:variable>
                                                                                           </xsl:variable>
                                                                                          </xsl:function>
                                                                                         </xsl:template>
                                                                                        </source><!-- krextor:generate-uri-impl -->
                                                                                       </xsl:apply-templates>
                                                                                      </xsl:function>
                                                                                     </xsl:variable>
                                                                                    </xsl:function>
                                                                                   </xsl:function>
                                                                                  </xsl:value-of>
                                                                                 </xsl:function>
                                                                                 <xsl:variable name="generated-blank-node" line="291" module="generic.xsl">
                                                                                  <xsl:variable name="generated-blank-node-id" line="298" module="generic.xsl">
                                                                                   <xsl:variable name="subject" line="299" module="generic.xsl">
                                                                                    <xsl:variable name="subject-type" line="300" module="generic.xsl">
                                                                                     <xsl:if test="exists($generated-uri)" line="301" column="36" module="generic.xsl">
                                                                                      <xsl:if test="$nested-call" line="302" column="30" module="generic.xsl">
                                                                                       <xsl:call-template name="krextor:related-via-properties" line="306" column="56" module="generic.xsl">
                                                                                        <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                                                         <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:choose line="212" column="10" module="generic.xsl">
                                                                                          <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                                                           <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                                                            <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                                                             <xsl:variable name="actual-object" line="557" module="generic.xsl">
                                                                                              <xsl:variable name="actual-property" line="560" module="generic.xsl">
                                                                                               <xsl:variable name="actual-inverse" line="562" module="generic.xsl">
                                                                                                <xsl:choose line="563" column="14" module="generic.xsl">
                                                                                                 <xsl:choose line="578" column="15" module="generic.xsl">
                                                                                                  <xsl:for-each select="$actual-property" line="593" column="44" module="generic.xsl">
                                                                                                    <xsl:call-template name="krextor:output-triple-impl" line="594" column="54" module="generic.xsl">
                                                                                                     <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                      <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                      </xsl:if>
                                                                                                      <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                      </xsl:if>
                                                                                                      <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                       <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                        <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                         <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                          <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                          </xsl:attribute>
                                                                                                         </LRE>
                                                                                                         <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                          <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                          </ATTR>
                                                                                                         </LRE>
                                                                                                         <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                          <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                          </xsl:if>
                                                                                                          <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                           <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                                           </xsl:attribute>
                                                                                                          </xsl:choose>
                                                                                                         </LRE>
                                                                                                        </LRE>
                                                                                                       </xsl:template>
                                                                                                      </xsl:call-template>
                                                                                                     </xsl:template>
                                                                                                    </xsl:call-template>
                                                                                                  </xsl:for-each>
                                                                                                 </xsl:choose>
                                                                                                </xsl:choose>
                                                                                               </xsl:variable>
                                                                                              </xsl:variable>
                                                                                             </xsl:variable>
                                                                                            </xsl:if>
                                                                                           </xsl:template>
                                                                                          </xsl:call-template>
                                                                                         </xsl:choose>
                                                                                        </xsl:template>
                                                                                       </xsl:call-template>
                                                                                       <xsl:call-template name="krextor:related-via-properties" line="312" column="56" module="generic.xsl">
                                                                                        <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                                                         <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:choose line="212" column="10" module="generic.xsl">
                                                                                          <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                                                           <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                                                            <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                                                            </xsl:if>
                                                                                           </xsl:template>
                                                                                          </xsl:call-template>
                                                                                         </xsl:choose>
                                                                                        </xsl:template>
                                                                                       </xsl:call-template>
                                                                                      </xsl:if>
                                                                                      <xsl:for-each select="$type" line="322" column="31" module="generic.xsl">
                                                                                        <xsl:call-template name="krextor:output-triple-impl" line="323" column="52" module="generic.xsl">
                                                                                         <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                          <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                          </xsl:if>
                                                                                          <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                          </xsl:if>
                                                                                          <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                           <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                            <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                             <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                              <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                              </xsl:attribute>
                                                                                             </LRE>
                                                                                             <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                              <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                              </ATTR>
                                                                                             </LRE>
                                                                                             <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                              <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                              </xsl:if>
                                                                                              <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                               <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                               </xsl:attribute>
                                                                                              </xsl:choose>
                                                                                             </LRE>
                                                                                            </LRE>
                                                                                           </xsl:template>
                                                                                          </xsl:call-template>
                                                                                         </xsl:template>
                                                                                        </xsl:call-template>
                                                                                      </xsl:for-each>
                                                                                      <xsl:if test="$properties" line="333" column="29" module="generic.xsl">
                                                                                      </xsl:if>
                                                                                      <xsl:choose line="357" column="14" module="generic.xsl">
                                                                                       <xsl:apply-templates select="$process-next" mode="krextor:main" line="366" column="67" module="generic.xsl">
                                                                                        <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/@Name" line="-1" file="">
                                                                                         <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                                                          <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                                                           <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/@Name" line="-1" file="">
                                                                                            <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                                                             <xsl:choose line="497" column="10" module="generic.xsl">
                                                                                              <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                                                               <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                                                               </xsl:if>
                                                                                               <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                                                                <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                                                                 <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                                                                  <xsl:choose line="442" column="14" module="generic.xsl">
                                                                                                   <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                                                                   </xsl:value-of>
                                                                                                  </xsl:choose>
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                                                                  <xsl:choose line="460" column="10" module="generic.xsl">
                                                                                                   <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                                                     <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                                                      <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                                                       <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                                                        <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                                                         <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                                                         </xsl:value-of>
                                                                                                        </xsl:function>
                                                                                                       </xsl:copy-of>
                                                                                                      </xsl:function>
                                                                                                      <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                       <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                       </xsl:variable>
                                                                                                       <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                       </xsl:variable>
                                                                                                       <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                       </xsl:variable>
                                                                                                       <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                       </xsl:variable>
                                                                                                       <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                       </xsl:variable>
                                                                                                       <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                       </xsl:variable>
                                                                                                       <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                       </xsl:variable>
                                                                                                       <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                       </xsl:variable>
                                                                                                       <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                       </xsl:if>
                                                                                                       <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                       </xsl:if>
                                                                                                       <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                        <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                         <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                         </xsl:variable>
                                                                                                         <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                         </xsl:variable>
                                                                                                         <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                         </xsl:variable>
                                                                                                         <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                         </xsl:variable>
                                                                                                         <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                         </xsl:variable>
                                                                                                         <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                         </xsl:variable>
                                                                                                         <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                         </xsl:variable>
                                                                                                         <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                          <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                           <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                           </xsl:attribute>
                                                                                                          </LRE>
                                                                                                          <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                           <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                           </ATTR>
                                                                                                          </LRE>
                                                                                                          <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                           <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                           </xsl:if>
                                                                                                           <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                            <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                                                             <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                                                              <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                                                              </xsl:attribute>
                                                                                                             </xsl:if>
                                                                                                             <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                                                              <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                                                               <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                                                                <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                                                                 <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                                                                  <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                                                                  </xsl:variable>
                                                                                                                  <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                                                                   <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                                                                   </xsl:value-of>
                                                                                                                  </xsl:choose>
                                                                                                                 </xsl:template>
                                                                                                                </xsl:call-template>
                                                                                                               </xsl:function>
                                                                                                              </xsl:value-of>
                                                                                                             </xsl:choose>
                                                                                                            </xsl:otherwise>
                                                                                                           </xsl:choose>
                                                                                                          </LRE>
                                                                                                         </LRE>
                                                                                                        </xsl:template>
                                                                                                       </xsl:call-template>
                                                                                                      </xsl:template>
                                                                                                     </xsl:call-template>
                                                                                                   </xsl:for-each>
                                                                                                  </xsl:choose>
                                                                                                 </xsl:variable>
                                                                                                </xsl:template>
                                                                                               </xsl:call-template>
                                                                                              </xsl:variable>
                                                                                             </xsl:choose>
                                                                                            </xsl:template>
                                                                                           </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/@Name -->
                                                                                          </xsl:apply-templates>
                                                                                         </xsl:template>
                                                                                        </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/@Name -->
                                                                                        <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/@AttributeDataType" line="-1" file="">
                                                                                         <xsl:template match="@*|text()" mode="krextor:main" line="740" column="54" module="generic.xsl">
                                                                                         </xsl:template>
                                                                                        </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/@AttributeDataType -->
                                                                                        <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[1]" line="-1" file="">
                                                                                         <xsl:template match="CAEXFile |CAEXFile/AdditionalInformation |CAEXFile/ExternalReference |CAEXFile/InstanceHierarchy |CAEXFile/RoleClassLib |CAEXFile/SystemUnitClassLib |CAEXFile/InstanceHierarchy/InternalElement |Attribute |RefSemantic |ExternalInterface |SupportedRoleClass |RoleRequirements |InterfaceClassLib |InterfaceClass |RoleClass |SystemUnitClass" mode="krextor:main" line="121" column="45" module="aml.xsl">
                                                                                          <xsl:apply-templates select="." mode="krextor:create-resource" line="122" column="69" module="aml.xsl">
                                                                                           <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[1]" line="-1" file="">
                                                                                            <xsl:template match="*" mode="krextor:create-resource" line="398" column="56" module="generic.xsl">
                                                                                             <xsl:choose line="399" column="10" module="generic.xsl">
                                                                                              <xsl:variable name="mapping" line="406" module="generic.xsl">
                                                                                               <xsl:call-template name="krextor:create-resource" line="408" column="49" module="generic.xsl">
                                                                                                <xsl:template name="krextor:create-resource" line="269" column="46" module="generic.xsl">
                                                                                                 <xsl:variable name="subject" select="()" as="xs:string?" line="270" column="53" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="related-via-properties" as="xs:string*" select="()" tunnel="yes" line="271" column="81" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="related-via-inverse-properties" as="xs:string*" select="()" tunnel="yes" line="272" column="89" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="type" select="()" as="xs:string*" line="273" column="50" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="properties" as="node()*" line="274" column="41" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="process-next" as="node()*" select="*|@*" line="275" column="57" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="subject-uri" as="xs:string" tunnel="yes" line="277" column="57" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="blank-node" as="xs:boolean" select="false()" line="278" column="61" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="this-blank-node-id" select="()" as="xs:string?" line="279" column="64" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="collection" as="xs:boolean" select="false()" line="280" column="61" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="nested-call" as="xs:boolean" select="false()" tunnel="yes" line="281" column="75" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="autogenerate-fragment-uri" line="283" module="generic.xsl">
                                                                                                  <xsl:variable name="generated-uri" line="290" module="generic.xsl">
                                                                                                   <xsl:function name="krextor:uri-generation-method" as="xs:string*" line="292" column="68" module="uri.xsl">
                                                                                                    <xsl:apply-templates select="$node" mode="krextor:uri-generation-method" line="295" column="44" module="uri.xsl">
                                                                                                     <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[1]" line="-1" file="">
                                                                                                      <xsl:template match="node()|attribute() (: attribute() doesn't seem to be subsumed by node() :)" mode="krextor:uri-generation-method" as="xs:string*" line="287" column="68" module="uri.xsl">
                                                                                                      </xsl:template>
                                                                                                     </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[1] -->
                                                                                                    </xsl:apply-templates>
                                                                                                   </xsl:function>
                                                                                                   <xsl:function name="krextor:generate-uri" as="xs:anyURI?" line="208" column="59" module="uri.xsl">
                                                                                                    <xsl:value-of select="f:return-first(krextor:generate-uri-impl(), $autogenerate-fragment-uri, ($node, $base-uri))" line="216" column="114" module="uri.xsl">
                                                                                                     <xsl:function name="krextor:generate-uri-impl" as="element(krextor:generate-uri-impl)" line="274" column="88" module="uri.xsl">
                                                                                                      <LRE name="krextor:generate-uri-impl" line="275" column="30" module="uri.xsl">
                                                                                                      </LRE>
                                                                                                     </xsl:function>
                                                                                                     <xsl:function name="f:return-first" line="64" column="37" module="util.xsl">
                                                                                                      <xsl:function name="f:return-first-step" line="87" column="42" module="util.xsl">
                                                                                                       <xsl:variable name="result" line="92" module="util.xsl">
                                                                                                        <xsl:function name="f:apply" line="16" column="32" module="func-apply.xsl">
                                                                                                         <xsl:apply-templates select="$pFunc" mode="f:FXSL" line="21" column="56" module="func-apply.xsl">
                                                                                                          <source node="krextor:generate-uri-impl" line="-1" file="uri.xsl">
                                                                                                           <xsl:template match="krextor:generate-uri-impl" as="xs:anyURI?" mode="f:FXSL" line="279" column="79" module="uri.xsl">
                                                                                                            <xsl:variable name="arg1" as="xs:string" line="280" column="37" module="uri.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="arg2" as="item()+" line="281" column="35" module="uri.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:function name="krextor:generate-uri-impl" line="226" column="48" module="uri.xsl">
                                                                                                             <xsl:variable name="node" line="229" module="uri.xsl">
                                                                                                              <xsl:variable name="base-uri" line="230" module="uri.xsl">
                                                                                                               <xsl:variable name="method-element" line="231" module="uri.xsl">
                                                                                                                <xsl:apply-templates select="$method-element" line="234" column="44" module="uri.xsl">
                                                                                                                 <xsl:element name="{concat('krextor-genuri:', $method)}" line="232" column="60" module="uri.xsl">
                                                                                                                 </xsl:element>
                                                                                                                 <source node="krextor-genuri:global-element-index" line="-1" file="">
                                                                                                                  <xsl:template match="krextor-genuri:global-element-index" as="xs:string?" line="66" column="79" module="aml.xsl">
                                                                                                                   <xsl:variable name="node" as="node()" line="67" column="38" module="aml.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="base-uri" as="xs:anyURI" line="68" column="45" module="aml.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:function name="krextor:global-element-index" as="xs:string?" line="60" column="71" module="aml.xsl">
                                                                                                                    <xsl:value-of select="concat(local-name($node), count(root($node)//*[local-name() eq local-name($node) and . &lt;&lt; $node]) + 1)" line="62" column="135" module="aml.xsl">
                                                                                                                    </xsl:value-of>
                                                                                                                   </xsl:function>
                                                                                                                  </xsl:template>
                                                                                                                 </source><!-- krextor-genuri:global-element-index -->
                                                                                                                </xsl:apply-templates>
                                                                                                               </xsl:variable>
                                                                                                              </xsl:variable>
                                                                                                             </xsl:variable>
                                                                                                            </xsl:function>
                                                                                                           </xsl:template>
                                                                                                          </source><!-- krextor:generate-uri-impl -->
                                                                                                         </xsl:apply-templates>
                                                                                                        </xsl:function>
                                                                                                       </xsl:variable>
                                                                                                      </xsl:function>
                                                                                                     </xsl:function>
                                                                                                    </xsl:value-of>
                                                                                                   </xsl:function>
                                                                                                   <xsl:variable name="generated-blank-node" line="291" module="generic.xsl">
                                                                                                    <xsl:variable name="generated-blank-node-id" line="298" module="generic.xsl">
                                                                                                     <xsl:variable name="subject" line="299" module="generic.xsl">
                                                                                                      <xsl:variable name="subject-type" line="300" module="generic.xsl">
                                                                                                       <xsl:if test="exists($generated-uri)" line="301" column="36" module="generic.xsl">
                                                                                                        <xsl:if test="$nested-call" line="302" column="30" module="generic.xsl">
                                                                                                         <xsl:call-template name="krextor:related-via-properties" line="306" column="56" module="generic.xsl">
                                                                                                          <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                                                                           <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:choose line="212" column="10" module="generic.xsl">
                                                                                                            <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                                                                             <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                                                                              <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                                                                               <xsl:variable name="actual-object" line="557" module="generic.xsl">
                                                                                                                <xsl:variable name="actual-property" line="560" module="generic.xsl">
                                                                                                                 <xsl:variable name="actual-inverse" line="562" module="generic.xsl">
                                                                                                                  <xsl:choose line="563" column="14" module="generic.xsl">
                                                                                                                   <xsl:choose line="578" column="15" module="generic.xsl">
                                                                                                                    <xsl:for-each select="$actual-property" line="593" column="44" module="generic.xsl">
                                                                                                                      <xsl:call-template name="krextor:output-triple-impl" line="594" column="54" module="generic.xsl">
                                                                                                                       <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                                        <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                                        </xsl:if>
                                                                                                                        <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                                        </xsl:if>
                                                                                                                        <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                                         <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                                          <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                                           <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                                            <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                                            </xsl:attribute>
                                                                                                                           </LRE>
                                                                                                                           <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                                            <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                                            </ATTR>
                                                                                                                           </LRE>
                                                                                                                           <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                                            <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                                            </xsl:if>
                                                                                                                            <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                                             <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                                                             </xsl:attribute>
                                                                                                                            </xsl:choose>
                                                                                                                           </LRE>
                                                                                                                          </LRE>
                                                                                                                         </xsl:template>
                                                                                                                        </xsl:call-template>
                                                                                                                       </xsl:template>
                                                                                                                      </xsl:call-template>
                                                                                                                    </xsl:for-each>
                                                                                                                   </xsl:choose>
                                                                                                                  </xsl:choose>
                                                                                                                 </xsl:variable>
                                                                                                                </xsl:variable>
                                                                                                               </xsl:variable>
                                                                                                              </xsl:if>
                                                                                                             </xsl:template>
                                                                                                            </xsl:call-template>
                                                                                                           </xsl:choose>
                                                                                                          </xsl:template>
                                                                                                         </xsl:call-template>
                                                                                                         <xsl:call-template name="krextor:related-via-properties" line="312" column="56" module="generic.xsl">
                                                                                                          <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                                                                           <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:choose line="212" column="10" module="generic.xsl">
                                                                                                            <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                                                                             <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                                                                              <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                                                                              </xsl:if>
                                                                                                             </xsl:template>
                                                                                                            </xsl:call-template>
                                                                                                           </xsl:choose>
                                                                                                          </xsl:template>
                                                                                                         </xsl:call-template>
                                                                                                        </xsl:if>
                                                                                                        <xsl:for-each select="$type" line="322" column="31" module="generic.xsl">
                                                                                                          <xsl:call-template name="krextor:output-triple-impl" line="323" column="52" module="generic.xsl">
                                                                                                           <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                            <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                            </xsl:if>
                                                                                                            <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                            </xsl:if>
                                                                                                            <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                             <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                              <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                               <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                                <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                                </xsl:attribute>
                                                                                                               </LRE>
                                                                                                               <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                                <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                                </ATTR>
                                                                                                               </LRE>
                                                                                                               <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                                <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                                </xsl:if>
                                                                                                                <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                                 <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                                                 </xsl:attribute>
                                                                                                                </xsl:choose>
                                                                                                               </LRE>
                                                                                                              </LRE>
                                                                                                             </xsl:template>
                                                                                                            </xsl:call-template>
                                                                                                           </xsl:template>
                                                                                                          </xsl:call-template>
                                                                                                        </xsl:for-each>
                                                                                                        <xsl:if test="$properties" line="333" column="29" module="generic.xsl">
                                                                                                        </xsl:if>
                                                                                                        <xsl:choose line="357" column="14" module="generic.xsl">
                                                                                                         <xsl:apply-templates select="$process-next" mode="krextor:main" line="366" column="67" module="generic.xsl">
                                                                                                          <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[1]/@Name" line="-1" file="">
                                                                                                           <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                                                                            <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                                                                             <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[1]/@Name" line="-1" file="">
                                                                                                              <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                                                                               <xsl:choose line="497" column="10" module="generic.xsl">
                                                                                                                <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                                                                                 <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                                                                                 </xsl:if>
                                                                                                                 <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                                                                                  <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                                                                                   <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                                                                                    <xsl:choose line="442" column="14" module="generic.xsl">
                                                                                                                     <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                                                                                     </xsl:value-of>
                                                                                                                    </xsl:choose>
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                                                                                    <xsl:choose line="460" column="10" module="generic.xsl">
                                                                                                                     <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                                                                       <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                                                                        <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                                                                         <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                                                                          <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                                                                           <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                                                                           </xsl:value-of>
                                                                                                                          </xsl:function>
                                                                                                                         </xsl:copy-of>
                                                                                                                        </xsl:function>
                                                                                                                        <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                                         <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                                         </xsl:if>
                                                                                                                         <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                                         </xsl:if>
                                                                                                                         <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                                          <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                                           <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                                            <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                                             <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                                             </xsl:attribute>
                                                                                                                            </LRE>
                                                                                                                            <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                                             <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                                             </ATTR>
                                                                                                                            </LRE>
                                                                                                                            <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                                             <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                                             </xsl:if>
                                                                                                                             <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                                              <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                                                                               <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                                                                                <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                                                                                </xsl:attribute>
                                                                                                                               </xsl:if>
                                                                                                                               <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                                                                                <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                                                                                 <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                                                                                  <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                                                                                   <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                                                                                    <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                                                                                    </xsl:variable>
                                                                                                                                    <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                                                                                     <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                                                                                     </xsl:value-of>
                                                                                                                                    </xsl:choose>
                                                                                                                                   </xsl:template>
                                                                                                                                  </xsl:call-template>
                                                                                                                                 </xsl:function>
                                                                                                                                </xsl:value-of>
                                                                                                                               </xsl:choose>
                                                                                                                              </xsl:otherwise>
                                                                                                                             </xsl:choose>
                                                                                                                            </LRE>
                                                                                                                           </LRE>
                                                                                                                          </xsl:template>
                                                                                                                         </xsl:call-template>
                                                                                                                        </xsl:template>
                                                                                                                       </xsl:call-template>
                                                                                                                     </xsl:for-each>
                                                                                                                    </xsl:choose>
                                                                                                                   </xsl:variable>
                                                                                                                  </xsl:template>
                                                                                                                 </xsl:call-template>
                                                                                                                </xsl:variable>
                                                                                                               </xsl:choose>
                                                                                                              </xsl:template>
                                                                                                             </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[1]/@Name -->
                                                                                                            </xsl:apply-templates>
                                                                                                           </xsl:template>
                                                                                                          </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[1]/@Name -->
                                                                                                          <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[1]/@AttributeDataType" line="-1" file="">
                                                                                                           <xsl:template match="@*|text()" mode="krextor:main" line="740" column="54" module="generic.xsl">
                                                                                                           </xsl:template>
                                                                                                          </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[1]/@AttributeDataType -->
                                                                                                          <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[1]/Value[1]" line="-1" file="">
                                                                                                           <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                                                                            <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                                                                             <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[1]/Value[1]" line="-1" file="">
                                                                                                              <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                                                                               <xsl:choose line="497" column="10" module="generic.xsl">
                                                                                                                <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                                                                                 <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                                                                                 </xsl:if>
                                                                                                                 <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                                                                                  <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                                                                                   <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                                                                                    <xsl:choose line="442" column="14" module="generic.xsl">
                                                                                                                     <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                                                                                     </xsl:value-of>
                                                                                                                    </xsl:choose>
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                                                                                    <xsl:choose line="460" column="10" module="generic.xsl">
                                                                                                                     <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                                                                       <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                                                                        <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                                                                         <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                                                                          <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                                                                           <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                                                                           </xsl:value-of>
                                                                                                                          </xsl:function>
                                                                                                                         </xsl:copy-of>
                                                                                                                        </xsl:function>
                                                                                                                        <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                                         <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                                         </xsl:if>
                                                                                                                         <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                                         </xsl:if>
                                                                                                                         <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                                          <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                                           <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                                            <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                                             <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                                             </xsl:attribute>
                                                                                                                            </LRE>
                                                                                                                            <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                                             <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                                             </ATTR>
                                                                                                                            </LRE>
                                                                                                                            <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                                             <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                                             </xsl:if>
                                                                                                                             <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                                              <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                                                                               <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                                                                                <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                                                                                </xsl:attribute>
                                                                                                                               </xsl:if>
                                                                                                                               <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                                                                                <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                                                                                 <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                                                                                  <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                                                                                   <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                                                                                    <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                                                                                    </xsl:variable>
                                                                                                                                    <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                                                                                     <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                                                                                     </xsl:value-of>
                                                                                                                                    </xsl:choose>
                                                                                                                                   </xsl:template>
                                                                                                                                  </xsl:call-template>
                                                                                                                                 </xsl:function>
                                                                                                                                </xsl:value-of>
                                                                                                                               </xsl:choose>
                                                                                                                              </xsl:otherwise>
                                                                                                                             </xsl:choose>
                                                                                                                            </LRE>
                                                                                                                           </LRE>
                                                                                                                          </xsl:template>
                                                                                                                         </xsl:call-template>
                                                                                                                        </xsl:template>
                                                                                                                       </xsl:call-template>
                                                                                                                     </xsl:for-each>
                                                                                                                    </xsl:choose>
                                                                                                                   </xsl:variable>
                                                                                                                  </xsl:template>
                                                                                                                 </xsl:call-template>
                                                                                                                </xsl:variable>
                                                                                                               </xsl:choose>
                                                                                                              </xsl:template>
                                                                                                             </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[1]/Value[1] -->
                                                                                                            </xsl:apply-templates>
                                                                                                           </xsl:template>
                                                                                                          </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[1]/Value[1] -->
                                                                                                         </xsl:apply-templates>
                                                                                                        </xsl:choose>
                                                                                                       </xsl:if>
                                                                                                      </xsl:variable>
                                                                                                     </xsl:variable>
                                                                                                    </xsl:variable>
                                                                                                   </xsl:variable>
                                                                                                  </xsl:variable>
                                                                                                 </xsl:variable>
                                                                                                </xsl:template>
                                                                                               </xsl:call-template>
                                                                                              </xsl:variable>
                                                                                             </xsl:choose>
                                                                                            </xsl:template>
                                                                                           </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[1] -->
                                                                                          </xsl:apply-templates>
                                                                                         </xsl:template>
                                                                                        </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[1] -->
                                                                                        <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[2]" line="-1" file="">
                                                                                         <xsl:template match="CAEXFile |CAEXFile/AdditionalInformation |CAEXFile/ExternalReference |CAEXFile/InstanceHierarchy |CAEXFile/RoleClassLib |CAEXFile/SystemUnitClassLib |CAEXFile/InstanceHierarchy/InternalElement |Attribute |RefSemantic |ExternalInterface |SupportedRoleClass |RoleRequirements |InterfaceClassLib |InterfaceClass |RoleClass |SystemUnitClass" mode="krextor:main" line="121" column="45" module="aml.xsl">
                                                                                          <xsl:apply-templates select="." mode="krextor:create-resource" line="122" column="69" module="aml.xsl">
                                                                                           <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[2]" line="-1" file="">
                                                                                            <xsl:template match="*" mode="krextor:create-resource" line="398" column="56" module="generic.xsl">
                                                                                             <xsl:choose line="399" column="10" module="generic.xsl">
                                                                                              <xsl:variable name="mapping" line="406" module="generic.xsl">
                                                                                               <xsl:call-template name="krextor:create-resource" line="408" column="49" module="generic.xsl">
                                                                                                <xsl:template name="krextor:create-resource" line="269" column="46" module="generic.xsl">
                                                                                                 <xsl:variable name="subject" select="()" as="xs:string?" line="270" column="53" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="related-via-properties" as="xs:string*" select="()" tunnel="yes" line="271" column="81" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="related-via-inverse-properties" as="xs:string*" select="()" tunnel="yes" line="272" column="89" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="type" select="()" as="xs:string*" line="273" column="50" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="properties" as="node()*" line="274" column="41" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="process-next" as="node()*" select="*|@*" line="275" column="57" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="subject-uri" as="xs:string" tunnel="yes" line="277" column="57" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="blank-node" as="xs:boolean" select="false()" line="278" column="61" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="this-blank-node-id" select="()" as="xs:string?" line="279" column="64" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="collection" as="xs:boolean" select="false()" line="280" column="61" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="nested-call" as="xs:boolean" select="false()" tunnel="yes" line="281" column="75" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="autogenerate-fragment-uri" line="283" module="generic.xsl">
                                                                                                  <xsl:variable name="generated-uri" line="290" module="generic.xsl">
                                                                                                   <xsl:function name="krextor:uri-generation-method" as="xs:string*" line="292" column="68" module="uri.xsl">
                                                                                                    <xsl:apply-templates select="$node" mode="krextor:uri-generation-method" line="295" column="44" module="uri.xsl">
                                                                                                     <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[2]" line="-1" file="">
                                                                                                      <xsl:template match="node()|attribute() (: attribute() doesn't seem to be subsumed by node() :)" mode="krextor:uri-generation-method" as="xs:string*" line="287" column="68" module="uri.xsl">
                                                                                                      </xsl:template>
                                                                                                     </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[2] -->
                                                                                                    </xsl:apply-templates>
                                                                                                   </xsl:function>
                                                                                                   <xsl:function name="krextor:generate-uri" as="xs:anyURI?" line="208" column="59" module="uri.xsl">
                                                                                                    <xsl:value-of select="f:return-first(krextor:generate-uri-impl(), $autogenerate-fragment-uri, ($node, $base-uri))" line="216" column="114" module="uri.xsl">
                                                                                                     <xsl:function name="krextor:generate-uri-impl" as="element(krextor:generate-uri-impl)" line="274" column="88" module="uri.xsl">
                                                                                                      <LRE name="krextor:generate-uri-impl" line="275" column="30" module="uri.xsl">
                                                                                                      </LRE>
                                                                                                     </xsl:function>
                                                                                                     <xsl:function name="f:return-first" line="64" column="37" module="util.xsl">
                                                                                                      <xsl:function name="f:return-first-step" line="87" column="42" module="util.xsl">
                                                                                                       <xsl:variable name="result" line="92" module="util.xsl">
                                                                                                        <xsl:function name="f:apply" line="16" column="32" module="func-apply.xsl">
                                                                                                         <xsl:apply-templates select="$pFunc" mode="f:FXSL" line="21" column="56" module="func-apply.xsl">
                                                                                                          <source node="krextor:generate-uri-impl" line="-1" file="uri.xsl">
                                                                                                           <xsl:template match="krextor:generate-uri-impl" as="xs:anyURI?" mode="f:FXSL" line="279" column="79" module="uri.xsl">
                                                                                                            <xsl:variable name="arg1" as="xs:string" line="280" column="37" module="uri.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="arg2" as="item()+" line="281" column="35" module="uri.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:function name="krextor:generate-uri-impl" line="226" column="48" module="uri.xsl">
                                                                                                             <xsl:variable name="node" line="229" module="uri.xsl">
                                                                                                              <xsl:variable name="base-uri" line="230" module="uri.xsl">
                                                                                                               <xsl:variable name="method-element" line="231" module="uri.xsl">
                                                                                                                <xsl:apply-templates select="$method-element" line="234" column="44" module="uri.xsl">
                                                                                                                 <xsl:element name="{concat('krextor-genuri:', $method)}" line="232" column="60" module="uri.xsl">
                                                                                                                 </xsl:element>
                                                                                                                 <source node="krextor-genuri:global-element-index" line="-1" file="">
                                                                                                                  <xsl:template match="krextor-genuri:global-element-index" as="xs:string?" line="66" column="79" module="aml.xsl">
                                                                                                                   <xsl:variable name="node" as="node()" line="67" column="38" module="aml.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="base-uri" as="xs:anyURI" line="68" column="45" module="aml.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:function name="krextor:global-element-index" as="xs:string?" line="60" column="71" module="aml.xsl">
                                                                                                                    <xsl:value-of select="concat(local-name($node), count(root($node)//*[local-name() eq local-name($node) and . &lt;&lt; $node]) + 1)" line="62" column="135" module="aml.xsl">
                                                                                                                    </xsl:value-of>
                                                                                                                   </xsl:function>
                                                                                                                  </xsl:template>
                                                                                                                 </source><!-- krextor-genuri:global-element-index -->
                                                                                                                </xsl:apply-templates>
                                                                                                               </xsl:variable>
                                                                                                              </xsl:variable>
                                                                                                             </xsl:variable>
                                                                                                            </xsl:function>
                                                                                                           </xsl:template>
                                                                                                          </source><!-- krextor:generate-uri-impl -->
                                                                                                         </xsl:apply-templates>
                                                                                                        </xsl:function>
                                                                                                       </xsl:variable>
                                                                                                      </xsl:function>
                                                                                                     </xsl:function>
                                                                                                    </xsl:value-of>
                                                                                                   </xsl:function>
                                                                                                   <xsl:variable name="generated-blank-node" line="291" module="generic.xsl">
                                                                                                    <xsl:variable name="generated-blank-node-id" line="298" module="generic.xsl">
                                                                                                     <xsl:variable name="subject" line="299" module="generic.xsl">
                                                                                                      <xsl:variable name="subject-type" line="300" module="generic.xsl">
                                                                                                       <xsl:if test="exists($generated-uri)" line="301" column="36" module="generic.xsl">
                                                                                                        <xsl:if test="$nested-call" line="302" column="30" module="generic.xsl">
                                                                                                         <xsl:call-template name="krextor:related-via-properties" line="306" column="56" module="generic.xsl">
                                                                                                          <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                                                                           <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:choose line="212" column="10" module="generic.xsl">
                                                                                                            <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                                                                             <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                                                                              <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                                                                               <xsl:variable name="actual-object" line="557" module="generic.xsl">
                                                                                                                <xsl:variable name="actual-property" line="560" module="generic.xsl">
                                                                                                                 <xsl:variable name="actual-inverse" line="562" module="generic.xsl">
                                                                                                                  <xsl:choose line="563" column="14" module="generic.xsl">
                                                                                                                   <xsl:choose line="578" column="15" module="generic.xsl">
                                                                                                                    <xsl:for-each select="$actual-property" line="593" column="44" module="generic.xsl">
                                                                                                                      <xsl:call-template name="krextor:output-triple-impl" line="594" column="54" module="generic.xsl">
                                                                                                                       <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                                        <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                                        </xsl:if>
                                                                                                                        <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                                        </xsl:if>
                                                                                                                        <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                                         <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                                          <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                                           <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                                            <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                                            </xsl:attribute>
                                                                                                                           </LRE>
                                                                                                                           <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                                            <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                                            </ATTR>
                                                                                                                           </LRE>
                                                                                                                           <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                                            <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                                            </xsl:if>
                                                                                                                            <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                                             <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                                                             </xsl:attribute>
                                                                                                                            </xsl:choose>
                                                                                                                           </LRE>
                                                                                                                          </LRE>
                                                                                                                         </xsl:template>
                                                                                                                        </xsl:call-template>
                                                                                                                       </xsl:template>
                                                                                                                      </xsl:call-template>
                                                                                                                    </xsl:for-each>
                                                                                                                   </xsl:choose>
                                                                                                                  </xsl:choose>
                                                                                                                 </xsl:variable>
                                                                                                                </xsl:variable>
                                                                                                               </xsl:variable>
                                                                                                              </xsl:if>
                                                                                                             </xsl:template>
                                                                                                            </xsl:call-template>
                                                                                                           </xsl:choose>
                                                                                                          </xsl:template>
                                                                                                         </xsl:call-template>
                                                                                                         <xsl:call-template name="krextor:related-via-properties" line="312" column="56" module="generic.xsl">
                                                                                                          <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                                                                           <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:choose line="212" column="10" module="generic.xsl">
                                                                                                            <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                                                                             <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                                                                              <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                                                                              </xsl:if>
                                                                                                             </xsl:template>
                                                                                                            </xsl:call-template>
                                                                                                           </xsl:choose>
                                                                                                          </xsl:template>
                                                                                                         </xsl:call-template>
                                                                                                        </xsl:if>
                                                                                                        <xsl:for-each select="$type" line="322" column="31" module="generic.xsl">
                                                                                                          <xsl:call-template name="krextor:output-triple-impl" line="323" column="52" module="generic.xsl">
                                                                                                           <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                            <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                            </xsl:if>
                                                                                                            <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                            </xsl:if>
                                                                                                            <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                             <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                              <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                               <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                                <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                                </xsl:attribute>
                                                                                                               </LRE>
                                                                                                               <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                                <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                                </ATTR>
                                                                                                               </LRE>
                                                                                                               <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                                <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                                </xsl:if>
                                                                                                                <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                                 <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                                                 </xsl:attribute>
                                                                                                                </xsl:choose>
                                                                                                               </LRE>
                                                                                                              </LRE>
                                                                                                             </xsl:template>
                                                                                                            </xsl:call-template>
                                                                                                           </xsl:template>
                                                                                                          </xsl:call-template>
                                                                                                        </xsl:for-each>
                                                                                                        <xsl:if test="$properties" line="333" column="29" module="generic.xsl">
                                                                                                        </xsl:if>
                                                                                                        <xsl:choose line="357" column="14" module="generic.xsl">
                                                                                                         <xsl:apply-templates select="$process-next" mode="krextor:main" line="366" column="67" module="generic.xsl">
                                                                                                          <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[2]/@Name" line="-1" file="">
                                                                                                           <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                                                                            <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                                                                             <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[2]/@Name" line="-1" file="">
                                                                                                              <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                                                                               <xsl:choose line="497" column="10" module="generic.xsl">
                                                                                                                <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                                                                                 <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                                                                                 </xsl:if>
                                                                                                                 <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                                                                                  <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                                                                                   <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                                                                                    <xsl:choose line="442" column="14" module="generic.xsl">
                                                                                                                     <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                                                                                     </xsl:value-of>
                                                                                                                    </xsl:choose>
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                                                                                    <xsl:choose line="460" column="10" module="generic.xsl">
                                                                                                                     <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                                                                       <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                                                                        <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                                                                         <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                                                                          <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                                                                           <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                                                                           </xsl:value-of>
                                                                                                                          </xsl:function>
                                                                                                                         </xsl:copy-of>
                                                                                                                        </xsl:function>
                                                                                                                        <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                                         <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                                         </xsl:if>
                                                                                                                         <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                                         </xsl:if>
                                                                                                                         <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                                          <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                                           <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                                            <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                                             <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                                             </xsl:attribute>
                                                                                                                            </LRE>
                                                                                                                            <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                                             <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                                             </ATTR>
                                                                                                                            </LRE>
                                                                                                                            <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                                             <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                                             </xsl:if>
                                                                                                                             <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                                              <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                                                                               <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                                                                                <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                                                                                </xsl:attribute>
                                                                                                                               </xsl:if>
                                                                                                                               <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                                                                                <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                                                                                 <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                                                                                  <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                                                                                   <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                                                                                    <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                                                                                    </xsl:variable>
                                                                                                                                    <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                                                                                     <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                                                                                     </xsl:value-of>
                                                                                                                                    </xsl:choose>
                                                                                                                                   </xsl:template>
                                                                                                                                  </xsl:call-template>
                                                                                                                                 </xsl:function>
                                                                                                                                </xsl:value-of>
                                                                                                                               </xsl:choose>
                                                                                                                              </xsl:otherwise>
                                                                                                                             </xsl:choose>
                                                                                                                            </LRE>
                                                                                                                           </LRE>
                                                                                                                          </xsl:template>
                                                                                                                         </xsl:call-template>
                                                                                                                        </xsl:template>
                                                                                                                       </xsl:call-template>
                                                                                                                     </xsl:for-each>
                                                                                                                    </xsl:choose>
                                                                                                                   </xsl:variable>
                                                                                                                  </xsl:template>
                                                                                                                 </xsl:call-template>
                                                                                                                </xsl:variable>
                                                                                                               </xsl:choose>
                                                                                                              </xsl:template>
                                                                                                             </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[2]/@Name -->
                                                                                                            </xsl:apply-templates>
                                                                                                           </xsl:template>
                                                                                                          </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[2]/@Name -->
                                                                                                          <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[2]/@AttributeDataType" line="-1" file="">
                                                                                                           <xsl:template match="@*|text()" mode="krextor:main" line="740" column="54" module="generic.xsl">
                                                                                                           </xsl:template>
                                                                                                          </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[2]/@AttributeDataType -->
                                                                                                          <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[2]/Value[1]" line="-1" file="">
                                                                                                           <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                                                                            <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                                                                             <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[2]/Value[1]" line="-1" file="">
                                                                                                              <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                                                                               <xsl:choose line="497" column="10" module="generic.xsl">
                                                                                                                <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                                                                                 <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                                                                                 </xsl:if>
                                                                                                                 <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                                                                                  <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                                                                                   <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                                                                                    <xsl:choose line="442" column="14" module="generic.xsl">
                                                                                                                     <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                                                                                     </xsl:value-of>
                                                                                                                    </xsl:choose>
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                                                                                    <xsl:choose line="460" column="10" module="generic.xsl">
                                                                                                                     <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                                                                       <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                                                                        <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                                                                         <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                                                                          <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                                                                           <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                                                                           </xsl:value-of>
                                                                                                                          </xsl:function>
                                                                                                                         </xsl:copy-of>
                                                                                                                        </xsl:function>
                                                                                                                        <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                                         <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                                         </xsl:if>
                                                                                                                         <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                                         </xsl:if>
                                                                                                                         <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                                          <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                                           <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                                            <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                                             <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                                             </xsl:attribute>
                                                                                                                            </LRE>
                                                                                                                            <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                                             <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                                             </ATTR>
                                                                                                                            </LRE>
                                                                                                                            <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                                             <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                                             </xsl:if>
                                                                                                                             <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                                              <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                                                                               <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                                                                                <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                                                                                </xsl:attribute>
                                                                                                                               </xsl:if>
                                                                                                                               <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                                                                                <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                                                                                 <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                                                                                  <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                                                                                   <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                                                                                    <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                                                                                    </xsl:variable>
                                                                                                                                    <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                                                                                     <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                                                                                     </xsl:value-of>
                                                                                                                                    </xsl:choose>
                                                                                                                                   </xsl:template>
                                                                                                                                  </xsl:call-template>
                                                                                                                                 </xsl:function>
                                                                                                                                </xsl:value-of>
                                                                                                                               </xsl:choose>
                                                                                                                              </xsl:otherwise>
                                                                                                                             </xsl:choose>
                                                                                                                            </LRE>
                                                                                                                           </LRE>
                                                                                                                          </xsl:template>
                                                                                                                         </xsl:call-template>
                                                                                                                        </xsl:template>
                                                                                                                       </xsl:call-template>
                                                                                                                     </xsl:for-each>
                                                                                                                    </xsl:choose>
                                                                                                                   </xsl:variable>
                                                                                                                  </xsl:template>
                                                                                                                 </xsl:call-template>
                                                                                                                </xsl:variable>
                                                                                                               </xsl:choose>
                                                                                                              </xsl:template>
                                                                                                             </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[2]/Value[1] -->
                                                                                                            </xsl:apply-templates>
                                                                                                           </xsl:template>
                                                                                                          </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[2]/Value[1] -->
                                                                                                         </xsl:apply-templates>
                                                                                                        </xsl:choose>
                                                                                                       </xsl:if>
                                                                                                      </xsl:variable>
                                                                                                     </xsl:variable>
                                                                                                    </xsl:variable>
                                                                                                   </xsl:variable>
                                                                                                  </xsl:variable>
                                                                                                 </xsl:variable>
                                                                                                </xsl:template>
                                                                                               </xsl:call-template>
                                                                                              </xsl:variable>
                                                                                             </xsl:choose>
                                                                                            </xsl:template>
                                                                                           </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[2] -->
                                                                                          </xsl:apply-templates>
                                                                                         </xsl:template>
                                                                                        </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[2] -->
                                                                                        <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[3]" line="-1" file="">
                                                                                         <xsl:template match="CAEXFile |CAEXFile/AdditionalInformation |CAEXFile/ExternalReference |CAEXFile/InstanceHierarchy |CAEXFile/RoleClassLib |CAEXFile/SystemUnitClassLib |CAEXFile/InstanceHierarchy/InternalElement |Attribute |RefSemantic |ExternalInterface |SupportedRoleClass |RoleRequirements |InterfaceClassLib |InterfaceClass |RoleClass |SystemUnitClass" mode="krextor:main" line="121" column="45" module="aml.xsl">
                                                                                          <xsl:apply-templates select="." mode="krextor:create-resource" line="122" column="69" module="aml.xsl">
                                                                                           <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[3]" line="-1" file="">
                                                                                            <xsl:template match="*" mode="krextor:create-resource" line="398" column="56" module="generic.xsl">
                                                                                             <xsl:choose line="399" column="10" module="generic.xsl">
                                                                                              <xsl:variable name="mapping" line="406" module="generic.xsl">
                                                                                               <xsl:call-template name="krextor:create-resource" line="408" column="49" module="generic.xsl">
                                                                                                <xsl:template name="krextor:create-resource" line="269" column="46" module="generic.xsl">
                                                                                                 <xsl:variable name="subject" select="()" as="xs:string?" line="270" column="53" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="related-via-properties" as="xs:string*" select="()" tunnel="yes" line="271" column="81" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="related-via-inverse-properties" as="xs:string*" select="()" tunnel="yes" line="272" column="89" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="type" select="()" as="xs:string*" line="273" column="50" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="properties" as="node()*" line="274" column="41" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="process-next" as="node()*" select="*|@*" line="275" column="57" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="subject-uri" as="xs:string" tunnel="yes" line="277" column="57" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="blank-node" as="xs:boolean" select="false()" line="278" column="61" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="this-blank-node-id" select="()" as="xs:string?" line="279" column="64" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="collection" as="xs:boolean" select="false()" line="280" column="61" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="nested-call" as="xs:boolean" select="false()" tunnel="yes" line="281" column="75" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="autogenerate-fragment-uri" line="283" module="generic.xsl">
                                                                                                  <xsl:variable name="generated-uri" line="290" module="generic.xsl">
                                                                                                   <xsl:function name="krextor:uri-generation-method" as="xs:string*" line="292" column="68" module="uri.xsl">
                                                                                                    <xsl:apply-templates select="$node" mode="krextor:uri-generation-method" line="295" column="44" module="uri.xsl">
                                                                                                     <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[3]" line="-1" file="">
                                                                                                      <xsl:template match="node()|attribute() (: attribute() doesn't seem to be subsumed by node() :)" mode="krextor:uri-generation-method" as="xs:string*" line="287" column="68" module="uri.xsl">
                                                                                                      </xsl:template>
                                                                                                     </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[3] -->
                                                                                                    </xsl:apply-templates>
                                                                                                   </xsl:function>
                                                                                                   <xsl:function name="krextor:generate-uri" as="xs:anyURI?" line="208" column="59" module="uri.xsl">
                                                                                                    <xsl:value-of select="f:return-first(krextor:generate-uri-impl(), $autogenerate-fragment-uri, ($node, $base-uri))" line="216" column="114" module="uri.xsl">
                                                                                                     <xsl:function name="krextor:generate-uri-impl" as="element(krextor:generate-uri-impl)" line="274" column="88" module="uri.xsl">
                                                                                                      <LRE name="krextor:generate-uri-impl" line="275" column="30" module="uri.xsl">
                                                                                                      </LRE>
                                                                                                     </xsl:function>
                                                                                                     <xsl:function name="f:return-first" line="64" column="37" module="util.xsl">
                                                                                                      <xsl:function name="f:return-first-step" line="87" column="42" module="util.xsl">
                                                                                                       <xsl:variable name="result" line="92" module="util.xsl">
                                                                                                        <xsl:function name="f:apply" line="16" column="32" module="func-apply.xsl">
                                                                                                         <xsl:apply-templates select="$pFunc" mode="f:FXSL" line="21" column="56" module="func-apply.xsl">
                                                                                                          <source node="krextor:generate-uri-impl" line="-1" file="uri.xsl">
                                                                                                           <xsl:template match="krextor:generate-uri-impl" as="xs:anyURI?" mode="f:FXSL" line="279" column="79" module="uri.xsl">
                                                                                                            <xsl:variable name="arg1" as="xs:string" line="280" column="37" module="uri.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="arg2" as="item()+" line="281" column="35" module="uri.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:function name="krextor:generate-uri-impl" line="226" column="48" module="uri.xsl">
                                                                                                             <xsl:variable name="node" line="229" module="uri.xsl">
                                                                                                              <xsl:variable name="base-uri" line="230" module="uri.xsl">
                                                                                                               <xsl:variable name="method-element" line="231" module="uri.xsl">
                                                                                                                <xsl:apply-templates select="$method-element" line="234" column="44" module="uri.xsl">
                                                                                                                 <xsl:element name="{concat('krextor-genuri:', $method)}" line="232" column="60" module="uri.xsl">
                                                                                                                 </xsl:element>
                                                                                                                 <source node="krextor-genuri:global-element-index" line="-1" file="">
                                                                                                                  <xsl:template match="krextor-genuri:global-element-index" as="xs:string?" line="66" column="79" module="aml.xsl">
                                                                                                                   <xsl:variable name="node" as="node()" line="67" column="38" module="aml.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="base-uri" as="xs:anyURI" line="68" column="45" module="aml.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:function name="krextor:global-element-index" as="xs:string?" line="60" column="71" module="aml.xsl">
                                                                                                                    <xsl:value-of select="concat(local-name($node), count(root($node)//*[local-name() eq local-name($node) and . &lt;&lt; $node]) + 1)" line="62" column="135" module="aml.xsl">
                                                                                                                    </xsl:value-of>
                                                                                                                   </xsl:function>
                                                                                                                  </xsl:template>
                                                                                                                 </source><!-- krextor-genuri:global-element-index -->
                                                                                                                </xsl:apply-templates>
                                                                                                               </xsl:variable>
                                                                                                              </xsl:variable>
                                                                                                             </xsl:variable>
                                                                                                            </xsl:function>
                                                                                                           </xsl:template>
                                                                                                          </source><!-- krextor:generate-uri-impl -->
                                                                                                         </xsl:apply-templates>
                                                                                                        </xsl:function>
                                                                                                       </xsl:variable>
                                                                                                      </xsl:function>
                                                                                                     </xsl:function>
                                                                                                    </xsl:value-of>
                                                                                                   </xsl:function>
                                                                                                   <xsl:variable name="generated-blank-node" line="291" module="generic.xsl">
                                                                                                    <xsl:variable name="generated-blank-node-id" line="298" module="generic.xsl">
                                                                                                     <xsl:variable name="subject" line="299" module="generic.xsl">
                                                                                                      <xsl:variable name="subject-type" line="300" module="generic.xsl">
                                                                                                       <xsl:if test="exists($generated-uri)" line="301" column="36" module="generic.xsl">
                                                                                                        <xsl:if test="$nested-call" line="302" column="30" module="generic.xsl">
                                                                                                         <xsl:call-template name="krextor:related-via-properties" line="306" column="56" module="generic.xsl">
                                                                                                          <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                                                                           <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:choose line="212" column="10" module="generic.xsl">
                                                                                                            <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                                                                             <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                                                                              <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                                                                               <xsl:variable name="actual-object" line="557" module="generic.xsl">
                                                                                                                <xsl:variable name="actual-property" line="560" module="generic.xsl">
                                                                                                                 <xsl:variable name="actual-inverse" line="562" module="generic.xsl">
                                                                                                                  <xsl:choose line="563" column="14" module="generic.xsl">
                                                                                                                   <xsl:choose line="578" column="15" module="generic.xsl">
                                                                                                                    <xsl:for-each select="$actual-property" line="593" column="44" module="generic.xsl">
                                                                                                                      <xsl:call-template name="krextor:output-triple-impl" line="594" column="54" module="generic.xsl">
                                                                                                                       <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                                        <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                                        </xsl:if>
                                                                                                                        <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                                        </xsl:if>
                                                                                                                        <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                                         <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                                          <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                                           <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                                            <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                                            </xsl:attribute>
                                                                                                                           </LRE>
                                                                                                                           <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                                            <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                                            </ATTR>
                                                                                                                           </LRE>
                                                                                                                           <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                                            <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                                            </xsl:if>
                                                                                                                            <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                                             <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                                                             </xsl:attribute>
                                                                                                                            </xsl:choose>
                                                                                                                           </LRE>
                                                                                                                          </LRE>
                                                                                                                         </xsl:template>
                                                                                                                        </xsl:call-template>
                                                                                                                       </xsl:template>
                                                                                                                      </xsl:call-template>
                                                                                                                    </xsl:for-each>
                                                                                                                   </xsl:choose>
                                                                                                                  </xsl:choose>
                                                                                                                 </xsl:variable>
                                                                                                                </xsl:variable>
                                                                                                               </xsl:variable>
                                                                                                              </xsl:if>
                                                                                                             </xsl:template>
                                                                                                            </xsl:call-template>
                                                                                                           </xsl:choose>
                                                                                                          </xsl:template>
                                                                                                         </xsl:call-template>
                                                                                                         <xsl:call-template name="krextor:related-via-properties" line="312" column="56" module="generic.xsl">
                                                                                                          <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                                                                           <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:choose line="212" column="10" module="generic.xsl">
                                                                                                            <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                                                                             <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                                                                              <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                                                                              </xsl:if>
                                                                                                             </xsl:template>
                                                                                                            </xsl:call-template>
                                                                                                           </xsl:choose>
                                                                                                          </xsl:template>
                                                                                                         </xsl:call-template>
                                                                                                        </xsl:if>
                                                                                                        <xsl:for-each select="$type" line="322" column="31" module="generic.xsl">
                                                                                                          <xsl:call-template name="krextor:output-triple-impl" line="323" column="52" module="generic.xsl">
                                                                                                           <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                            <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                            </xsl:if>
                                                                                                            <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                            </xsl:if>
                                                                                                            <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                             <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                              <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                               <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                                <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                                </xsl:attribute>
                                                                                                               </LRE>
                                                                                                               <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                                <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                                </ATTR>
                                                                                                               </LRE>
                                                                                                               <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                                <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                                </xsl:if>
                                                                                                                <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                                 <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                                                 </xsl:attribute>
                                                                                                                </xsl:choose>
                                                                                                               </LRE>
                                                                                                              </LRE>
                                                                                                             </xsl:template>
                                                                                                            </xsl:call-template>
                                                                                                           </xsl:template>
                                                                                                          </xsl:call-template>
                                                                                                        </xsl:for-each>
                                                                                                        <xsl:if test="$properties" line="333" column="29" module="generic.xsl">
                                                                                                        </xsl:if>
                                                                                                        <xsl:choose line="357" column="14" module="generic.xsl">
                                                                                                         <xsl:apply-templates select="$process-next" mode="krextor:main" line="366" column="67" module="generic.xsl">
                                                                                                          <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[3]/@Name" line="-1" file="">
                                                                                                           <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                                                                            <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                                                                             <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[3]/@Name" line="-1" file="">
                                                                                                              <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                                                                               <xsl:choose line="497" column="10" module="generic.xsl">
                                                                                                                <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                                                                                 <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                                                                                 </xsl:if>
                                                                                                                 <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                                                                                  <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                                                                                   <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                                                                                    <xsl:choose line="442" column="14" module="generic.xsl">
                                                                                                                     <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                                                                                     </xsl:value-of>
                                                                                                                    </xsl:choose>
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                                                                                    <xsl:choose line="460" column="10" module="generic.xsl">
                                                                                                                     <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                                                                       <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                                                                        <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                                                                         <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                                                                          <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                                                                           <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                                                                           </xsl:value-of>
                                                                                                                          </xsl:function>
                                                                                                                         </xsl:copy-of>
                                                                                                                        </xsl:function>
                                                                                                                        <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                                         <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                                         </xsl:if>
                                                                                                                         <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                                         </xsl:if>
                                                                                                                         <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                                          <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                                           <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                                            <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                                             <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                                             </xsl:attribute>
                                                                                                                            </LRE>
                                                                                                                            <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                                             <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                                             </ATTR>
                                                                                                                            </LRE>
                                                                                                                            <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                                             <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                                             </xsl:if>
                                                                                                                             <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                                              <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                                                                               <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                                                                                <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                                                                                </xsl:attribute>
                                                                                                                               </xsl:if>
                                                                                                                               <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                                                                                <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                                                                                 <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                                                                                  <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                                                                                   <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                                                                                    <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                                                                                    </xsl:variable>
                                                                                                                                    <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                                                                                     <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                                                                                     </xsl:value-of>
                                                                                                                                    </xsl:choose>
                                                                                                                                   </xsl:template>
                                                                                                                                  </xsl:call-template>
                                                                                                                                 </xsl:function>
                                                                                                                                </xsl:value-of>
                                                                                                                               </xsl:choose>
                                                                                                                              </xsl:otherwise>
                                                                                                                             </xsl:choose>
                                                                                                                            </LRE>
                                                                                                                           </LRE>
                                                                                                                          </xsl:template>
                                                                                                                         </xsl:call-template>
                                                                                                                        </xsl:template>
                                                                                                                       </xsl:call-template>
                                                                                                                     </xsl:for-each>
                                                                                                                    </xsl:choose>
                                                                                                                   </xsl:variable>
                                                                                                                  </xsl:template>
                                                                                                                 </xsl:call-template>
                                                                                                                </xsl:variable>
                                                                                                               </xsl:choose>
                                                                                                              </xsl:template>
                                                                                                             </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[3]/@Name -->
                                                                                                            </xsl:apply-templates>
                                                                                                           </xsl:template>
                                                                                                          </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[3]/@Name -->
                                                                                                          <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[3]/@AttributeDataType" line="-1" file="">
                                                                                                           <xsl:template match="@*|text()" mode="krextor:main" line="740" column="54" module="generic.xsl">
                                                                                                           </xsl:template>
                                                                                                          </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[3]/@AttributeDataType -->
                                                                                                          <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[3]/Value[1]" line="-1" file="">
                                                                                                           <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                                                                            <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                                                                             <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[3]/Value[1]" line="-1" file="">
                                                                                                              <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                                                                               <xsl:choose line="497" column="10" module="generic.xsl">
                                                                                                                <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                                                                                 <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                                                                                 </xsl:if>
                                                                                                                 <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                                                                                  <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                                                                                   <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                                                                                    <xsl:choose line="442" column="14" module="generic.xsl">
                                                                                                                     <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                                                                                     </xsl:value-of>
                                                                                                                    </xsl:choose>
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                                                                                    <xsl:choose line="460" column="10" module="generic.xsl">
                                                                                                                     <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                                                                       <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                                                                        <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                                                                         <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                                                                          <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                                                                           <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                                                                           </xsl:value-of>
                                                                                                                          </xsl:function>
                                                                                                                         </xsl:copy-of>
                                                                                                                        </xsl:function>
                                                                                                                        <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                                         <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                                         </xsl:if>
                                                                                                                         <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                                         </xsl:if>
                                                                                                                         <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                                          <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                                           <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                                            <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                                             <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                                             </xsl:attribute>
                                                                                                                            </LRE>
                                                                                                                            <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                                             <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                                             </ATTR>
                                                                                                                            </LRE>
                                                                                                                            <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                                             <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                                             </xsl:if>
                                                                                                                             <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                                              <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                                                                               <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                                                                                <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                                                                                </xsl:attribute>
                                                                                                                               </xsl:if>
                                                                                                                               <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                                                                                <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                                                                                 <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                                                                                  <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                                                                                   <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                                                                                    <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                                                                                    </xsl:variable>
                                                                                                                                    <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                                                                                     <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                                                                                     </xsl:value-of>
                                                                                                                                    </xsl:choose>
                                                                                                                                   </xsl:template>
                                                                                                                                  </xsl:call-template>
                                                                                                                                 </xsl:function>
                                                                                                                                </xsl:value-of>
                                                                                                                               </xsl:choose>
                                                                                                                              </xsl:otherwise>
                                                                                                                             </xsl:choose>
                                                                                                                            </LRE>
                                                                                                                           </LRE>
                                                                                                                          </xsl:template>
                                                                                                                         </xsl:call-template>
                                                                                                                        </xsl:template>
                                                                                                                       </xsl:call-template>
                                                                                                                     </xsl:for-each>
                                                                                                                    </xsl:choose>
                                                                                                                   </xsl:variable>
                                                                                                                  </xsl:template>
                                                                                                                 </xsl:call-template>
                                                                                                                </xsl:variable>
                                                                                                               </xsl:choose>
                                                                                                              </xsl:template>
                                                                                                             </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[3]/Value[1] -->
                                                                                                            </xsl:apply-templates>
                                                                                                           </xsl:template>
                                                                                                          </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[3]/Value[1] -->
                                                                                                         </xsl:apply-templates>
                                                                                                        </xsl:choose>
                                                                                                       </xsl:if>
                                                                                                      </xsl:variable>
                                                                                                     </xsl:variable>
                                                                                                    </xsl:variable>
                                                                                                   </xsl:variable>
                                                                                                  </xsl:variable>
                                                                                                 </xsl:variable>
                                                                                                </xsl:template>
                                                                                               </xsl:call-template>
                                                                                              </xsl:variable>
                                                                                             </xsl:choose>
                                                                                            </xsl:template>
                                                                                           </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[3] -->
                                                                                          </xsl:apply-templates>
                                                                                         </xsl:template>
                                                                                        </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[3] -->
                                                                                        <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[4]" line="-1" file="">
                                                                                         <xsl:template match="CAEXFile |CAEXFile/AdditionalInformation |CAEXFile/ExternalReference |CAEXFile/InstanceHierarchy |CAEXFile/RoleClassLib |CAEXFile/SystemUnitClassLib |CAEXFile/InstanceHierarchy/InternalElement |Attribute |RefSemantic |ExternalInterface |SupportedRoleClass |RoleRequirements |InterfaceClassLib |InterfaceClass |RoleClass |SystemUnitClass" mode="krextor:main" line="121" column="45" module="aml.xsl">
                                                                                          <xsl:apply-templates select="." mode="krextor:create-resource" line="122" column="69" module="aml.xsl">
                                                                                           <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[4]" line="-1" file="">
                                                                                            <xsl:template match="*" mode="krextor:create-resource" line="398" column="56" module="generic.xsl">
                                                                                             <xsl:choose line="399" column="10" module="generic.xsl">
                                                                                              <xsl:variable name="mapping" line="406" module="generic.xsl">
                                                                                               <xsl:call-template name="krextor:create-resource" line="408" column="49" module="generic.xsl">
                                                                                                <xsl:template name="krextor:create-resource" line="269" column="46" module="generic.xsl">
                                                                                                 <xsl:variable name="subject" select="()" as="xs:string?" line="270" column="53" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="related-via-properties" as="xs:string*" select="()" tunnel="yes" line="271" column="81" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="related-via-inverse-properties" as="xs:string*" select="()" tunnel="yes" line="272" column="89" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="type" select="()" as="xs:string*" line="273" column="50" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="properties" as="node()*" line="274" column="41" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="process-next" as="node()*" select="*|@*" line="275" column="57" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="subject-uri" as="xs:string" tunnel="yes" line="277" column="57" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="blank-node" as="xs:boolean" select="false()" line="278" column="61" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="this-blank-node-id" select="()" as="xs:string?" line="279" column="64" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="collection" as="xs:boolean" select="false()" line="280" column="61" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="nested-call" as="xs:boolean" select="false()" tunnel="yes" line="281" column="75" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="autogenerate-fragment-uri" line="283" module="generic.xsl">
                                                                                                  <xsl:variable name="generated-uri" line="290" module="generic.xsl">
                                                                                                   <xsl:function name="krextor:uri-generation-method" as="xs:string*" line="292" column="68" module="uri.xsl">
                                                                                                    <xsl:apply-templates select="$node" mode="krextor:uri-generation-method" line="295" column="44" module="uri.xsl">
                                                                                                     <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[4]" line="-1" file="">
                                                                                                      <xsl:template match="node()|attribute() (: attribute() doesn't seem to be subsumed by node() :)" mode="krextor:uri-generation-method" as="xs:string*" line="287" column="68" module="uri.xsl">
                                                                                                      </xsl:template>
                                                                                                     </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[4] -->
                                                                                                    </xsl:apply-templates>
                                                                                                   </xsl:function>
                                                                                                   <xsl:function name="krextor:generate-uri" as="xs:anyURI?" line="208" column="59" module="uri.xsl">
                                                                                                    <xsl:value-of select="f:return-first(krextor:generate-uri-impl(), $autogenerate-fragment-uri, ($node, $base-uri))" line="216" column="114" module="uri.xsl">
                                                                                                     <xsl:function name="krextor:generate-uri-impl" as="element(krextor:generate-uri-impl)" line="274" column="88" module="uri.xsl">
                                                                                                      <LRE name="krextor:generate-uri-impl" line="275" column="30" module="uri.xsl">
                                                                                                      </LRE>
                                                                                                     </xsl:function>
                                                                                                     <xsl:function name="f:return-first" line="64" column="37" module="util.xsl">
                                                                                                      <xsl:function name="f:return-first-step" line="87" column="42" module="util.xsl">
                                                                                                       <xsl:variable name="result" line="92" module="util.xsl">
                                                                                                        <xsl:function name="f:apply" line="16" column="32" module="func-apply.xsl">
                                                                                                         <xsl:apply-templates select="$pFunc" mode="f:FXSL" line="21" column="56" module="func-apply.xsl">
                                                                                                          <source node="krextor:generate-uri-impl" line="-1" file="uri.xsl">
                                                                                                           <xsl:template match="krextor:generate-uri-impl" as="xs:anyURI?" mode="f:FXSL" line="279" column="79" module="uri.xsl">
                                                                                                            <xsl:variable name="arg1" as="xs:string" line="280" column="37" module="uri.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="arg2" as="item()+" line="281" column="35" module="uri.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:function name="krextor:generate-uri-impl" line="226" column="48" module="uri.xsl">
                                                                                                             <xsl:variable name="node" line="229" module="uri.xsl">
                                                                                                              <xsl:variable name="base-uri" line="230" module="uri.xsl">
                                                                                                               <xsl:variable name="method-element" line="231" module="uri.xsl">
                                                                                                                <xsl:apply-templates select="$method-element" line="234" column="44" module="uri.xsl">
                                                                                                                 <xsl:element name="{concat('krextor-genuri:', $method)}" line="232" column="60" module="uri.xsl">
                                                                                                                 </xsl:element>
                                                                                                                 <source node="krextor-genuri:global-element-index" line="-1" file="">
                                                                                                                  <xsl:template match="krextor-genuri:global-element-index" as="xs:string?" line="66" column="79" module="aml.xsl">
                                                                                                                   <xsl:variable name="node" as="node()" line="67" column="38" module="aml.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="base-uri" as="xs:anyURI" line="68" column="45" module="aml.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:function name="krextor:global-element-index" as="xs:string?" line="60" column="71" module="aml.xsl">
                                                                                                                    <xsl:value-of select="concat(local-name($node), count(root($node)//*[local-name() eq local-name($node) and . &lt;&lt; $node]) + 1)" line="62" column="135" module="aml.xsl">
                                                                                                                    </xsl:value-of>
                                                                                                                   </xsl:function>
                                                                                                                  </xsl:template>
                                                                                                                 </source><!-- krextor-genuri:global-element-index -->
                                                                                                                </xsl:apply-templates>
                                                                                                               </xsl:variable>
                                                                                                              </xsl:variable>
                                                                                                             </xsl:variable>
                                                                                                            </xsl:function>
                                                                                                           </xsl:template>
                                                                                                          </source><!-- krextor:generate-uri-impl -->
                                                                                                         </xsl:apply-templates>
                                                                                                        </xsl:function>
                                                                                                       </xsl:variable>
                                                                                                      </xsl:function>
                                                                                                     </xsl:function>
                                                                                                    </xsl:value-of>
                                                                                                   </xsl:function>
                                                                                                   <xsl:variable name="generated-blank-node" line="291" module="generic.xsl">
                                                                                                    <xsl:variable name="generated-blank-node-id" line="298" module="generic.xsl">
                                                                                                     <xsl:variable name="subject" line="299" module="generic.xsl">
                                                                                                      <xsl:variable name="subject-type" line="300" module="generic.xsl">
                                                                                                       <xsl:if test="exists($generated-uri)" line="301" column="36" module="generic.xsl">
                                                                                                        <xsl:if test="$nested-call" line="302" column="30" module="generic.xsl">
                                                                                                         <xsl:call-template name="krextor:related-via-properties" line="306" column="56" module="generic.xsl">
                                                                                                          <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                                                                           <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:choose line="212" column="10" module="generic.xsl">
                                                                                                            <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                                                                             <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                                                                              <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                                                                               <xsl:variable name="actual-object" line="557" module="generic.xsl">
                                                                                                                <xsl:variable name="actual-property" line="560" module="generic.xsl">
                                                                                                                 <xsl:variable name="actual-inverse" line="562" module="generic.xsl">
                                                                                                                  <xsl:choose line="563" column="14" module="generic.xsl">
                                                                                                                   <xsl:choose line="578" column="15" module="generic.xsl">
                                                                                                                    <xsl:for-each select="$actual-property" line="593" column="44" module="generic.xsl">
                                                                                                                      <xsl:call-template name="krextor:output-triple-impl" line="594" column="54" module="generic.xsl">
                                                                                                                       <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                                        <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                                        </xsl:if>
                                                                                                                        <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                                        </xsl:if>
                                                                                                                        <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                                         <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                                          <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                                           <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                                            <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                                            </xsl:attribute>
                                                                                                                           </LRE>
                                                                                                                           <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                                            <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                                            </ATTR>
                                                                                                                           </LRE>
                                                                                                                           <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                                            <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                                            </xsl:if>
                                                                                                                            <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                                             <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                                                             </xsl:attribute>
                                                                                                                            </xsl:choose>
                                                                                                                           </LRE>
                                                                                                                          </LRE>
                                                                                                                         </xsl:template>
                                                                                                                        </xsl:call-template>
                                                                                                                       </xsl:template>
                                                                                                                      </xsl:call-template>
                                                                                                                    </xsl:for-each>
                                                                                                                   </xsl:choose>
                                                                                                                  </xsl:choose>
                                                                                                                 </xsl:variable>
                                                                                                                </xsl:variable>
                                                                                                               </xsl:variable>
                                                                                                              </xsl:if>
                                                                                                             </xsl:template>
                                                                                                            </xsl:call-template>
                                                                                                           </xsl:choose>
                                                                                                          </xsl:template>
                                                                                                         </xsl:call-template>
                                                                                                         <xsl:call-template name="krextor:related-via-properties" line="312" column="56" module="generic.xsl">
                                                                                                          <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                                                                           <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:choose line="212" column="10" module="generic.xsl">
                                                                                                            <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                                                                             <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                                                                              <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                                                                              </xsl:if>
                                                                                                             </xsl:template>
                                                                                                            </xsl:call-template>
                                                                                                           </xsl:choose>
                                                                                                          </xsl:template>
                                                                                                         </xsl:call-template>
                                                                                                        </xsl:if>
                                                                                                        <xsl:for-each select="$type" line="322" column="31" module="generic.xsl">
                                                                                                          <xsl:call-template name="krextor:output-triple-impl" line="323" column="52" module="generic.xsl">
                                                                                                           <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                            <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                            </xsl:if>
                                                                                                            <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                            </xsl:if>
                                                                                                            <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                             <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                              <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                               <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                                <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                                </xsl:attribute>
                                                                                                               </LRE>
                                                                                                               <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                                <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                                </ATTR>
                                                                                                               </LRE>
                                                                                                               <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                                <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                                </xsl:if>
                                                                                                                <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                                 <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                                                 </xsl:attribute>
                                                                                                                </xsl:choose>
                                                                                                               </LRE>
                                                                                                              </LRE>
                                                                                                             </xsl:template>
                                                                                                            </xsl:call-template>
                                                                                                           </xsl:template>
                                                                                                          </xsl:call-template>
                                                                                                        </xsl:for-each>
                                                                                                        <xsl:if test="$properties" line="333" column="29" module="generic.xsl">
                                                                                                        </xsl:if>
                                                                                                        <xsl:choose line="357" column="14" module="generic.xsl">
                                                                                                         <xsl:apply-templates select="$process-next" mode="krextor:main" line="366" column="67" module="generic.xsl">
                                                                                                          <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[4]/@Name" line="-1" file="">
                                                                                                           <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                                                                            <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                                                                             <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[4]/@Name" line="-1" file="">
                                                                                                              <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                                                                               <xsl:choose line="497" column="10" module="generic.xsl">
                                                                                                                <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                                                                                 <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                                                                                 </xsl:if>
                                                                                                                 <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                                                                                  <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                                                                                   <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                                                                                    <xsl:choose line="442" column="14" module="generic.xsl">
                                                                                                                     <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                                                                                     </xsl:value-of>
                                                                                                                    </xsl:choose>
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                                                                                    <xsl:choose line="460" column="10" module="generic.xsl">
                                                                                                                     <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                                                                       <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                                                                        <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                                                                         <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                                                                          <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                                                                           <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                                                                           </xsl:value-of>
                                                                                                                          </xsl:function>
                                                                                                                         </xsl:copy-of>
                                                                                                                        </xsl:function>
                                                                                                                        <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                                         <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                                         </xsl:if>
                                                                                                                         <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                                         </xsl:if>
                                                                                                                         <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                                          <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                                           <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                                            <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                                             <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                                             </xsl:attribute>
                                                                                                                            </LRE>
                                                                                                                            <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                                             <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                                             </ATTR>
                                                                                                                            </LRE>
                                                                                                                            <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                                             <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                                             </xsl:if>
                                                                                                                             <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                                              <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                                                                               <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                                                                                <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                                                                                </xsl:attribute>
                                                                                                                               </xsl:if>
                                                                                                                               <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                                                                                <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                                                                                 <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                                                                                  <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                                                                                   <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                                                                                    <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                                                                                    </xsl:variable>
                                                                                                                                    <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                                                                                     <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                                                                                     </xsl:value-of>
                                                                                                                                    </xsl:choose>
                                                                                                                                   </xsl:template>
                                                                                                                                  </xsl:call-template>
                                                                                                                                 </xsl:function>
                                                                                                                                </xsl:value-of>
                                                                                                                               </xsl:choose>
                                                                                                                              </xsl:otherwise>
                                                                                                                             </xsl:choose>
                                                                                                                            </LRE>
                                                                                                                           </LRE>
                                                                                                                          </xsl:template>
                                                                                                                         </xsl:call-template>
                                                                                                                        </xsl:template>
                                                                                                                       </xsl:call-template>
                                                                                                                     </xsl:for-each>
                                                                                                                    </xsl:choose>
                                                                                                                   </xsl:variable>
                                                                                                                  </xsl:template>
                                                                                                                 </xsl:call-template>
                                                                                                                </xsl:variable>
                                                                                                               </xsl:choose>
                                                                                                              </xsl:template>
                                                                                                             </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[4]/@Name -->
                                                                                                            </xsl:apply-templates>
                                                                                                           </xsl:template>
                                                                                                          </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[4]/@Name -->
                                                                                                          <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[4]/@AttributeDataType" line="-1" file="">
                                                                                                           <xsl:template match="@*|text()" mode="krextor:main" line="740" column="54" module="generic.xsl">
                                                                                                           </xsl:template>
                                                                                                          </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[4]/@AttributeDataType -->
                                                                                                          <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[4]/Value[1]" line="-1" file="">
                                                                                                           <xsl:template match="CAEXFile/@FileName |CAEXFile/@SchemaVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterName |CAEXFile/AdditionalInformation/WriterHeader/WriterID |CAEXFile/AdditionalInformation/WriterHeader/WriterVendor |CAEXFile/AdditionalInformation/WriterHeader/WriterVendorURL |CAEXFile/AdditionalInformation/WriterHeader/WriterVersion |CAEXFile/AdditionalInformation/WriterHeader/WriterRelease |CAEXFile/AdditionalInformation/WriterHeader/LastWritingDateTime |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectTitle |CAEXFile/AdditionalInformation/WriterHeader/WriterProjectID |CAEXFile/ExternalReference/@Path |CAEXFile/ExternalReference/@Alias |CAEXFile/InstanceHierarchy/@Name |CAEXFile/InstanceHierarchy/InternalElement/@Name |CAEXFile/InstanceHierarchy/InternalElement/@ID |CAEXFile/InstanceHierarchy/InternalElement/@RefBaseSystemUnitPath |CAEXFile/InstanceHierarchy/InternalElement/Attribute/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@Name |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@ID |CAEXFile/InstanceHierarchy/InternalElement/ExternalInterface/@RefBaseClassPath |CAEXFile/InstanceHierarchy/InternalElement/SupportedRoleClass/@RefRoleClassPath |CAEXFile/InstanceHierarchy/InternalElement/RoleRequirements/@RefBaseRoleClassPath |CAEXFile/InterfaceClassLib/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/@RefBaseClassPath |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/@Name |CAEXFile/InterfaceClassLib/InterfaceClass/Attribute/Value |CAEXFile/RoleClassLib/@Name |CAEXFile/RoleClassLib/Version |CAEXFile/RoleClassLib/RoleClass/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/@Name |CAEXFile/RoleClassLib/RoleClass/Attribute/Attribute/Value |CAEXFile/RoleClassLib/RoleClass/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/@Name |CAEXFile/SystemUnitClassLib/Version |CAEXFile/SystemUnitClassLib/SystemUnitClass/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/Attribute/Value |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@Name |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@ID |CAEXFile/SystemUnitClassLib/SystemUnitClass/ExternalInterface/@RefBaseClassPath |CAEXFile/SystemUnitClassLib/SystemUnitClass/SupportedRoleClass/@RefRoleClassPath" mode="krextor:main" line="211" column="40" module="aml.xsl">
                                                                                                            <xsl:apply-templates select="." mode="krextor:add-literal-property" line="212" column="71" module="aml.xsl">
                                                                                                             <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[4]/Value[1]" line="-1" file="">
                                                                                                              <xsl:template match="*|@*" mode="krextor:add-literal-property" line="496" column="64" module="generic.xsl">
                                                                                                               <xsl:choose line="497" column="10" module="generic.xsl">
                                                                                                                <xsl:variable name="mapping" line="504" module="generic.xsl">
                                                                                                                 <xsl:if test=". instance of attribute() and not($mapping/@krextor:attribute)" line="506" column="77" module="generic.xsl">
                                                                                                                 </xsl:if>
                                                                                                                 <xsl:call-template name="krextor:add-literal-property" line="509" column="54" module="generic.xsl">
                                                                                                                  <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                                                                                   <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                                                                                    <xsl:choose line="442" column="14" module="generic.xsl">
                                                                                                                     <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                                                                                     </xsl:value-of>
                                                                                                                    </xsl:choose>
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                                                                                    <xsl:choose line="460" column="10" module="generic.xsl">
                                                                                                                     <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                                                                       <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                                                                        <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                                                                         <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                                                                          <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                                                                           <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                                                                           </xsl:value-of>
                                                                                                                          </xsl:function>
                                                                                                                         </xsl:copy-of>
                                                                                                                        </xsl:function>
                                                                                                                        <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                                         <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                                         </xsl:variable>
                                                                                                                         <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                                         </xsl:if>
                                                                                                                         <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                                         </xsl:if>
                                                                                                                         <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                                          <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                                           <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                                           </xsl:variable>
                                                                                                                           <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                                            <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                                             <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                                             </xsl:attribute>
                                                                                                                            </LRE>
                                                                                                                            <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                                             <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                                             </ATTR>
                                                                                                                            </LRE>
                                                                                                                            <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                                             <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                                             </xsl:if>
                                                                                                                             <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                                              <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                                                                               <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                                                                                <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                                                                                </xsl:attribute>
                                                                                                                               </xsl:if>
                                                                                                                               <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                                                                                <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                                                                                 <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                                                                                  <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                                                                                   <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                                                                                    <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                                                                                    </xsl:variable>
                                                                                                                                    <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                                                                                     <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                                                                                     </xsl:value-of>
                                                                                                                                    </xsl:choose>
                                                                                                                                   </xsl:template>
                                                                                                                                  </xsl:call-template>
                                                                                                                                 </xsl:function>
                                                                                                                                </xsl:value-of>
                                                                                                                               </xsl:choose>
                                                                                                                              </xsl:otherwise>
                                                                                                                             </xsl:choose>
                                                                                                                            </LRE>
                                                                                                                           </LRE>
                                                                                                                          </xsl:template>
                                                                                                                         </xsl:call-template>
                                                                                                                        </xsl:template>
                                                                                                                       </xsl:call-template>
                                                                                                                     </xsl:for-each>
                                                                                                                    </xsl:choose>
                                                                                                                   </xsl:variable>
                                                                                                                  </xsl:template>
                                                                                                                 </xsl:call-template>
                                                                                                                </xsl:variable>
                                                                                                               </xsl:choose>
                                                                                                              </xsl:template>
                                                                                                             </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[4]/Value[1] -->
                                                                                                            </xsl:apply-templates>
                                                                                                           </xsl:template>
                                                                                                          </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[4]/Value[1] -->
                                                                                                         </xsl:apply-templates>
                                                                                                        </xsl:choose>
                                                                                                       </xsl:if>
                                                                                                      </xsl:variable>
                                                                                                     </xsl:variable>
                                                                                                    </xsl:variable>
                                                                                                   </xsl:variable>
                                                                                                  </xsl:variable>
                                                                                                 </xsl:variable>
                                                                                                </xsl:template>
                                                                                               </xsl:call-template>
                                                                                              </xsl:variable>
                                                                                             </xsl:choose>
                                                                                            </xsl:template>
                                                                                           </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[4] -->
                                                                                          </xsl:apply-templates>
                                                                                         </xsl:template>
                                                                                        </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/Attribute[4] -->
                                                                                        <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/RefSemantic[1]" line="-1" file="">
                                                                                         <xsl:template match="CAEXFile |CAEXFile/AdditionalInformation |CAEXFile/ExternalReference |CAEXFile/InstanceHierarchy |CAEXFile/RoleClassLib |CAEXFile/SystemUnitClassLib |CAEXFile/InstanceHierarchy/InternalElement |Attribute |RefSemantic |ExternalInterface |SupportedRoleClass |RoleRequirements |InterfaceClassLib |InterfaceClass |RoleClass |SystemUnitClass" mode="krextor:main" line="121" column="45" module="aml.xsl">
                                                                                          <xsl:apply-templates select="." mode="krextor:create-resource" line="122" column="69" module="aml.xsl">
                                                                                           <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/RefSemantic[1]" line="-1" file="">
                                                                                            <xsl:template match="*" mode="krextor:create-resource" line="398" column="56" module="generic.xsl">
                                                                                             <xsl:choose line="399" column="10" module="generic.xsl">
                                                                                              <xsl:variable name="mapping" line="406" module="generic.xsl">
                                                                                               <xsl:call-template name="krextor:create-resource" line="408" column="49" module="generic.xsl">
                                                                                                <xsl:template name="krextor:create-resource" line="269" column="46" module="generic.xsl">
                                                                                                 <xsl:variable name="subject" select="()" as="xs:string?" line="270" column="53" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="related-via-properties" as="xs:string*" select="()" tunnel="yes" line="271" column="81" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="related-via-inverse-properties" as="xs:string*" select="()" tunnel="yes" line="272" column="89" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="type" select="()" as="xs:string*" line="273" column="50" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="properties" as="node()*" line="274" column="41" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="process-next" as="node()*" select="*|@*" line="275" column="57" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="subject-uri" as="xs:string" tunnel="yes" line="277" column="57" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="blank-node" as="xs:boolean" select="false()" line="278" column="61" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="this-blank-node-id" select="()" as="xs:string?" line="279" column="64" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="collection" as="xs:boolean" select="false()" line="280" column="61" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="nested-call" as="xs:boolean" select="false()" tunnel="yes" line="281" column="75" module="generic.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="autogenerate-fragment-uri" line="283" module="generic.xsl">
                                                                                                  <xsl:variable name="generated-uri" line="290" module="generic.xsl">
                                                                                                   <xsl:function name="krextor:uri-generation-method" as="xs:string*" line="292" column="68" module="uri.xsl">
                                                                                                    <xsl:apply-templates select="$node" mode="krextor:uri-generation-method" line="295" column="44" module="uri.xsl">
                                                                                                     <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/RefSemantic[1]" line="-1" file="">
                                                                                                      <xsl:template match="node()|attribute() (: attribute() doesn't seem to be subsumed by node() :)" mode="krextor:uri-generation-method" as="xs:string*" line="287" column="68" module="uri.xsl">
                                                                                                      </xsl:template>
                                                                                                     </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/RefSemantic[1] -->
                                                                                                    </xsl:apply-templates>
                                                                                                   </xsl:function>
                                                                                                   <xsl:function name="krextor:generate-uri" as="xs:anyURI?" line="208" column="59" module="uri.xsl">
                                                                                                    <xsl:value-of select="f:return-first(krextor:generate-uri-impl(), $autogenerate-fragment-uri, ($node, $base-uri))" line="216" column="114" module="uri.xsl">
                                                                                                     <xsl:function name="krextor:generate-uri-impl" as="element(krextor:generate-uri-impl)" line="274" column="88" module="uri.xsl">
                                                                                                      <LRE name="krextor:generate-uri-impl" line="275" column="30" module="uri.xsl">
                                                                                                      </LRE>
                                                                                                     </xsl:function>
                                                                                                     <xsl:function name="f:return-first" line="64" column="37" module="util.xsl">
                                                                                                      <xsl:function name="f:return-first-step" line="87" column="42" module="util.xsl">
                                                                                                       <xsl:variable name="result" line="92" module="util.xsl">
                                                                                                        <xsl:function name="f:apply" line="16" column="32" module="func-apply.xsl">
                                                                                                         <xsl:apply-templates select="$pFunc" mode="f:FXSL" line="21" column="56" module="func-apply.xsl">
                                                                                                          <source node="krextor:generate-uri-impl" line="-1" file="uri.xsl">
                                                                                                           <xsl:template match="krextor:generate-uri-impl" as="xs:anyURI?" mode="f:FXSL" line="279" column="79" module="uri.xsl">
                                                                                                            <xsl:variable name="arg1" as="xs:string" line="280" column="37" module="uri.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="arg2" as="item()+" line="281" column="35" module="uri.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:function name="krextor:generate-uri-impl" line="226" column="48" module="uri.xsl">
                                                                                                             <xsl:variable name="node" line="229" module="uri.xsl">
                                                                                                              <xsl:variable name="base-uri" line="230" module="uri.xsl">
                                                                                                               <xsl:variable name="method-element" line="231" module="uri.xsl">
                                                                                                                <xsl:apply-templates select="$method-element" line="234" column="44" module="uri.xsl">
                                                                                                                 <xsl:element name="{concat('krextor-genuri:', $method)}" line="232" column="60" module="uri.xsl">
                                                                                                                 </xsl:element>
                                                                                                                 <source node="krextor-genuri:global-element-index" line="-1" file="">
                                                                                                                  <xsl:template match="krextor-genuri:global-element-index" as="xs:string?" line="66" column="79" module="aml.xsl">
                                                                                                                   <xsl:variable name="node" as="node()" line="67" column="38" module="aml.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:variable name="base-uri" as="xs:anyURI" line="68" column="45" module="aml.xsl">
                                                                                                                   </xsl:variable>
                                                                                                                   <xsl:function name="krextor:global-element-index" as="xs:string?" line="60" column="71" module="aml.xsl">
                                                                                                                    <xsl:value-of select="concat(local-name($node), count(root($node)//*[local-name() eq local-name($node) and . &lt;&lt; $node]) + 1)" line="62" column="135" module="aml.xsl">
                                                                                                                    </xsl:value-of>
                                                                                                                   </xsl:function>
                                                                                                                  </xsl:template>
                                                                                                                 </source><!-- krextor-genuri:global-element-index -->
                                                                                                                </xsl:apply-templates>
                                                                                                               </xsl:variable>
                                                                                                              </xsl:variable>
                                                                                                             </xsl:variable>
                                                                                                            </xsl:function>
                                                                                                           </xsl:template>
                                                                                                          </source><!-- krextor:generate-uri-impl -->
                                                                                                         </xsl:apply-templates>
                                                                                                        </xsl:function>
                                                                                                       </xsl:variable>
                                                                                                      </xsl:function>
                                                                                                     </xsl:function>
                                                                                                    </xsl:value-of>
                                                                                                   </xsl:function>
                                                                                                   <xsl:variable name="generated-blank-node" line="291" module="generic.xsl">
                                                                                                    <xsl:variable name="generated-blank-node-id" line="298" module="generic.xsl">
                                                                                                     <xsl:variable name="subject" line="299" module="generic.xsl">
                                                                                                      <xsl:variable name="subject-type" line="300" module="generic.xsl">
                                                                                                       <xsl:if test="exists($generated-uri)" line="301" column="36" module="generic.xsl">
                                                                                                        <xsl:if test="$nested-call" line="302" column="30" module="generic.xsl">
                                                                                                         <xsl:call-template name="krextor:related-via-properties" line="306" column="56" module="generic.xsl">
                                                                                                          <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                                                                           <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:choose line="212" column="10" module="generic.xsl">
                                                                                                            <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                                                                             <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                                                                              <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                                                                               <xsl:variable name="actual-object" line="557" module="generic.xsl">
                                                                                                                <xsl:variable name="actual-property" line="560" module="generic.xsl">
                                                                                                                 <xsl:variable name="actual-inverse" line="562" module="generic.xsl">
                                                                                                                  <xsl:choose line="563" column="14" module="generic.xsl">
                                                                                                                   <xsl:choose line="578" column="15" module="generic.xsl">
                                                                                                                    <xsl:for-each select="$actual-property" line="593" column="44" module="generic.xsl">
                                                                                                                      <xsl:call-template name="krextor:output-triple-impl" line="594" column="54" module="generic.xsl">
                                                                                                                       <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                                        <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                                        </xsl:variable>
                                                                                                                        <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                                        </xsl:if>
                                                                                                                        <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                                        </xsl:if>
                                                                                                                        <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                                         <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                                          <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                                          </xsl:variable>
                                                                                                                          <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                                           <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                                            <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                                            </xsl:attribute>
                                                                                                                           </LRE>
                                                                                                                           <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                                            <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                                            </ATTR>
                                                                                                                           </LRE>
                                                                                                                           <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                                            <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                                            </xsl:if>
                                                                                                                            <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                                             <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                                                             </xsl:attribute>
                                                                                                                            </xsl:choose>
                                                                                                                           </LRE>
                                                                                                                          </LRE>
                                                                                                                         </xsl:template>
                                                                                                                        </xsl:call-template>
                                                                                                                       </xsl:template>
                                                                                                                      </xsl:call-template>
                                                                                                                    </xsl:for-each>
                                                                                                                   </xsl:choose>
                                                                                                                  </xsl:choose>
                                                                                                                 </xsl:variable>
                                                                                                                </xsl:variable>
                                                                                                               </xsl:variable>
                                                                                                              </xsl:if>
                                                                                                             </xsl:template>
                                                                                                            </xsl:call-template>
                                                                                                           </xsl:choose>
                                                                                                          </xsl:template>
                                                                                                         </xsl:call-template>
                                                                                                         <xsl:call-template name="krextor:related-via-properties" line="312" column="56" module="generic.xsl">
                                                                                                          <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                                                                           <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                                                                           </xsl:variable>
                                                                                                           <xsl:choose line="212" column="10" module="generic.xsl">
                                                                                                            <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                                                                             <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                                                                              <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                                                                              </xsl:if>
                                                                                                             </xsl:template>
                                                                                                            </xsl:call-template>
                                                                                                           </xsl:choose>
                                                                                                          </xsl:template>
                                                                                                         </xsl:call-template>
                                                                                                        </xsl:if>
                                                                                                        <xsl:for-each select="$type" line="322" column="31" module="generic.xsl">
                                                                                                          <xsl:call-template name="krextor:output-triple-impl" line="323" column="52" module="generic.xsl">
                                                                                                           <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                            <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                            </xsl:variable>
                                                                                                            <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                            </xsl:if>
                                                                                                            <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                            </xsl:if>
                                                                                                            <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                             <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                              <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                               <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                                <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                                </xsl:attribute>
                                                                                                               </LRE>
                                                                                                               <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                                <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                                </ATTR>
                                                                                                               </LRE>
                                                                                                               <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                                <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                                </xsl:if>
                                                                                                                <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                                 <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                                                 </xsl:attribute>
                                                                                                                </xsl:choose>
                                                                                                               </LRE>
                                                                                                              </LRE>
                                                                                                             </xsl:template>
                                                                                                            </xsl:call-template>
                                                                                                           </xsl:template>
                                                                                                          </xsl:call-template>
                                                                                                        </xsl:for-each>
                                                                                                        <xsl:if test="$properties" line="333" column="29" module="generic.xsl">
                                                                                                        </xsl:if>
                                                                                                        <xsl:choose line="357" column="14" module="generic.xsl">
                                                                                                         <xsl:apply-templates select="$process-next" mode="krextor:main" line="366" column="67" module="generic.xsl">
                                                                                                          <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/RefSemantic[1]/@CorrespondingAttributePath" line="-1" file="">
                                                                                                           <xsl:template match="//RefSemantic/@CorrespondingAttributePath" mode="krextor:main" line="223" column="85" module="aml.xsl">
                                                                                                            <xsl:call-template name="krextor:add-literal-property" line="224" column="58" module="aml.xsl">
                                                                                                             <xsl:template name="krextor:add-literal-property" line="435" column="51" module="generic.xsl">
                                                                                                              <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="436" column="57" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="437" column="60" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="property" as="xs:string*" line="438" column="42" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="440" column="64" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object" line="441" column="23" module="generic.xsl">
                                                                                                               <xsl:choose line="442" column="14" module="generic.xsl">
                                                                                                                <xsl:value-of select="." line="447" column="29" module="generic.xsl">
                                                                                                                </xsl:value-of>
                                                                                                               </xsl:choose>
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="object-is-list" select="false()" as="xs:boolean" line="451" column="65" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="normalize-space" select="false()" as="xs:boolean" line="452" column="66" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="language" as="xs:string?" select="''" line="453" column="54" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="datatype" as="xs:string?" select="if ($object/self::element() or krextor:is-single-element($object)) then 'http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral' else ''" line="455" column="124" module="generic.xsl">
                                                                                                              </xsl:variable>
                                                                                                              <xsl:variable name="actual-property" line="459" module="generic.xsl">
                                                                                                               <xsl:choose line="460" column="10" module="generic.xsl">
                                                                                                                <xsl:for-each select="$actual-property" line="475" column="39" module="generic.xsl">
                                                                                                                  <xsl:call-template name="krextor:output-triple-impl" line="476" column="56" module="generic.xsl">
                                                                                                                   <xsl:function name="krextor:normalize-if-single-element" line="115" column="58" module="generic.xsl">
                                                                                                                    <xsl:copy-of select="if (krextor:is-single-element($maybe-node)) then $maybe-node/node()/self::element() else $maybe-node" line="119" column="46" module="generic.xsl">
                                                                                                                     <xsl:function name="krextor:is-single-element" as="xs:boolean" line="107" column="64" module="generic.xsl">
                                                                                                                      <xsl:value-of select="$maybe-node instance of node() and $maybe-node/self::document-node() and count($maybe-node/node()) eq 1 and $maybe-node/node()/self::element()" line="112" column="55" module="generic.xsl">
                                                                                                                      </xsl:value-of>
                                                                                                                     </xsl:function>
                                                                                                                    </xsl:copy-of>
                                                                                                                   </xsl:function>
                                                                                                                   <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                                    <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                                    </xsl:variable>
                                                                                                                    <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                                    </xsl:variable>
                                                                                                                    <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                                    </xsl:variable>
                                                                                                                    <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                                    </xsl:variable>
                                                                                                                    <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                                    </xsl:variable>
                                                                                                                    <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                                    </xsl:variable>
                                                                                                                    <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                                    </xsl:variable>
                                                                                                                    <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                                    </xsl:variable>
                                                                                                                    <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                                    </xsl:if>
                                                                                                                    <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                                    </xsl:if>
                                                                                                                    <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                                     <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                                      <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                                      </xsl:variable>
                                                                                                                      <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                                      </xsl:variable>
                                                                                                                      <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                                      </xsl:variable>
                                                                                                                      <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                                      </xsl:variable>
                                                                                                                      <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                                      </xsl:variable>
                                                                                                                      <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                                      </xsl:variable>
                                                                                                                      <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                                      </xsl:variable>
                                                                                                                      <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                                       <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                                        <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                                        </xsl:attribute>
                                                                                                                       </LRE>
                                                                                                                       <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                                        <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                                        </ATTR>
                                                                                                                       </LRE>
                                                                                                                       <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                                        <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                                        </xsl:if>
                                                                                                                        <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                                         <xsl:otherwise line="91" column="18" module="rxr.xsl">
                                                                                                                          <xsl:if test="$object-datatype" line="93" column="32" module="rxr.xsl">
                                                                                                                           <xsl:attribute name="datatype" select="$object-datatype" line="94" column="62" module="rxr.xsl">
                                                                                                                           </xsl:attribute>
                                                                                                                          </xsl:if>
                                                                                                                          <xsl:choose line="96" column="12" module="rxr.xsl">
                                                                                                                           <xsl:value-of select="$object" line="101" column="33" module="rxr.xsl">
                                                                                                                            <xsl:function name="krextor:preprocess-object-for-output" line="185" column="59" module="generic.xsl">
                                                                                                                             <xsl:call-template name="krextor:preprocess-object-for-output" line="187" column="67" module="generic.xsl">
                                                                                                                              <xsl:template name="krextor:preprocess-object-for-output" line="41" column="59" module="serialize-xml-literal.xsl">
                                                                                                                               <xsl:variable name="object" line="42" column="30" module="serialize-xml-literal.xsl">
                                                                                                                               </xsl:variable>
                                                                                                                               <xsl:choose line="43" column="16" module="serialize-xml-literal.xsl">
                                                                                                                                <xsl:value-of select="$object" line="52" column="44" module="serialize-xml-literal.xsl">
                                                                                                                                </xsl:value-of>
                                                                                                                               </xsl:choose>
                                                                                                                              </xsl:template>
                                                                                                                             </xsl:call-template>
                                                                                                                            </xsl:function>
                                                                                                                           </xsl:value-of>
                                                                                                                          </xsl:choose>
                                                                                                                         </xsl:otherwise>
                                                                                                                        </xsl:choose>
                                                                                                                       </LRE>
                                                                                                                      </LRE>
                                                                                                                     </xsl:template>
                                                                                                                    </xsl:call-template>
                                                                                                                   </xsl:template>
                                                                                                                  </xsl:call-template>
                                                                                                                </xsl:for-each>
                                                                                                               </xsl:choose>
                                                                                                              </xsl:variable>
                                                                                                             </xsl:template>
                                                                                                            </xsl:call-template>
                                                                                                           </xsl:template>
                                                                                                          </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/RefSemantic[1]/@CorrespondingAttributePath -->
                                                                                                         </xsl:apply-templates>
                                                                                                        </xsl:choose>
                                                                                                       </xsl:if>
                                                                                                      </xsl:variable>
                                                                                                     </xsl:variable>
                                                                                                    </xsl:variable>
                                                                                                   </xsl:variable>
                                                                                                  </xsl:variable>
                                                                                                 </xsl:variable>
                                                                                                </xsl:template>
                                                                                               </xsl:call-template>
                                                                                              </xsl:variable>
                                                                                             </xsl:choose>
                                                                                            </xsl:template>
                                                                                           </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/RefSemantic[1] -->
                                                                                          </xsl:apply-templates>
                                                                                         </xsl:template>
                                                                                        </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1]/RefSemantic[1] -->
                                                                                       </xsl:apply-templates>
                                                                                      </xsl:choose>
                                                                                     </xsl:if>
                                                                                    </xsl:variable>
                                                                                   </xsl:variable>
                                                                                  </xsl:variable>
                                                                                 </xsl:variable>
                                                                                </xsl:variable>
                                                                               </xsl:variable>
                                                                              </xsl:template>
                                                                             </xsl:call-template>
                                                                            </xsl:variable>
                                                                           </xsl:choose>
                                                                          </xsl:template>
                                                                         </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1] -->
                                                                        </xsl:apply-templates>
                                                                       </xsl:template>
                                                                      </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/Attribute[1] -->
                                                                      <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[1]" line="-1" file="">
                                                                       <xsl:template match="CAEXFile |CAEXFile/AdditionalInformation |CAEXFile/ExternalReference |CAEXFile/InstanceHierarchy |CAEXFile/RoleClassLib |CAEXFile/SystemUnitClassLib |CAEXFile/InstanceHierarchy/InternalElement |Attribute |RefSemantic |ExternalInterface |SupportedRoleClass |RoleRequirements |InterfaceClassLib |InterfaceClass |RoleClass |SystemUnitClass" mode="krextor:main" line="121" column="45" module="aml.xsl">
                                                                        <xsl:apply-templates select="." mode="krextor:create-resource" line="122" column="69" module="aml.xsl">
                                                                         <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[1]" line="-1" file="">
                                                                          <xsl:template match="*" mode="krextor:create-resource" line="398" column="56" module="generic.xsl">
                                                                           <xsl:choose line="399" column="10" module="generic.xsl">
                                                                            <xsl:variable name="mapping" line="406" module="generic.xsl">
                                                                             <xsl:call-template name="krextor:create-resource" line="408" column="49" module="generic.xsl">
                                                                              <xsl:template name="krextor:create-resource" line="269" column="46" module="generic.xsl">
                                                                               <xsl:variable name="subject" select="()" as="xs:string?" line="270" column="53" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="related-via-properties" as="xs:string*" select="()" tunnel="yes" line="271" column="81" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="related-via-inverse-properties" as="xs:string*" select="()" tunnel="yes" line="272" column="89" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="type" select="()" as="xs:string*" line="273" column="50" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="properties" as="node()*" line="274" column="41" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="process-next" as="node()*" select="*|@*" line="275" column="57" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="subject-uri" as="xs:string" tunnel="yes" line="277" column="57" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="blank-node" as="xs:boolean" select="false()" line="278" column="61" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="this-blank-node-id" select="()" as="xs:string?" line="279" column="64" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="collection" as="xs:boolean" select="false()" line="280" column="61" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="nested-call" as="xs:boolean" select="false()" tunnel="yes" line="281" column="75" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="autogenerate-fragment-uri" line="283" module="generic.xsl">
                                                                                <xsl:variable name="generated-uri" line="290" module="generic.xsl">
                                                                                 <xsl:function name="krextor:uri-generation-method" as="xs:string*" line="292" column="68" module="uri.xsl">
                                                                                  <xsl:apply-templates select="$node" mode="krextor:uri-generation-method" line="295" column="44" module="uri.xsl">
                                                                                   <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[1]" line="-1" file="">
                                                                                    <xsl:template match="node()|attribute() (: attribute() doesn't seem to be subsumed by node() :)" mode="krextor:uri-generation-method" as="xs:string*" line="287" column="68" module="uri.xsl">
                                                                                    </xsl:template>
                                                                                   </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[1] -->
                                                                                  </xsl:apply-templates>
                                                                                 </xsl:function>
                                                                                 <xsl:function name="krextor:generate-uri" as="xs:anyURI?" line="208" column="59" module="uri.xsl">
                                                                                  <xsl:value-of select="f:return-first(krextor:generate-uri-impl(), $autogenerate-fragment-uri, ($node, $base-uri))" line="216" column="114" module="uri.xsl">
                                                                                   <xsl:function name="krextor:generate-uri-impl" as="element(krextor:generate-uri-impl)" line="274" column="88" module="uri.xsl">
                                                                                    <LRE name="krextor:generate-uri-impl" line="275" column="30" module="uri.xsl">
                                                                                    </LRE>
                                                                                   </xsl:function>
                                                                                   <xsl:function name="f:return-first" line="64" column="37" module="util.xsl">
                                                                                    <xsl:function name="f:return-first-step" line="87" column="42" module="util.xsl">
                                                                                     <xsl:variable name="result" line="92" module="util.xsl">
                                                                                      <xsl:function name="f:apply" line="16" column="32" module="func-apply.xsl">
                                                                                       <xsl:apply-templates select="$pFunc" mode="f:FXSL" line="21" column="56" module="func-apply.xsl">
                                                                                        <source node="krextor:generate-uri-impl" line="-1" file="uri.xsl">
                                                                                         <xsl:template match="krextor:generate-uri-impl" as="xs:anyURI?" mode="f:FXSL" line="279" column="79" module="uri.xsl">
                                                                                          <xsl:variable name="arg1" as="xs:string" line="280" column="37" module="uri.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="arg2" as="item()+" line="281" column="35" module="uri.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:function name="krextor:generate-uri-impl" line="226" column="48" module="uri.xsl">
                                                                                           <xsl:variable name="node" line="229" module="uri.xsl">
                                                                                            <xsl:variable name="base-uri" line="230" module="uri.xsl">
                                                                                             <xsl:variable name="method-element" line="231" module="uri.xsl">
                                                                                              <xsl:apply-templates select="$method-element" line="234" column="44" module="uri.xsl">
                                                                                               <xsl:element name="{concat('krextor-genuri:', $method)}" line="232" column="60" module="uri.xsl">
                                                                                               </xsl:element>
                                                                                               <source node="krextor-genuri:global-element-index" line="-1" file="">
                                                                                                <xsl:template match="krextor-genuri:global-element-index" as="xs:string?" line="66" column="79" module="aml.xsl">
                                                                                                 <xsl:variable name="node" as="node()" line="67" column="38" module="aml.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="base-uri" as="xs:anyURI" line="68" column="45" module="aml.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:function name="krextor:global-element-index" as="xs:string?" line="60" column="71" module="aml.xsl">
                                                                                                  <xsl:value-of select="concat(local-name($node), count(root($node)//*[local-name() eq local-name($node) and . &lt;&lt; $node]) + 1)" line="62" column="135" module="aml.xsl">
                                                                                                  </xsl:value-of>
                                                                                                 </xsl:function>
                                                                                                </xsl:template>
                                                                                               </source><!-- krextor-genuri:global-element-index -->
                                                                                              </xsl:apply-templates>
                                                                                             </xsl:variable>
                                                                                            </xsl:variable>
                                                                                           </xsl:variable>
                                                                                          </xsl:function>
                                                                                         </xsl:template>
                                                                                        </source><!-- krextor:generate-uri-impl -->
                                                                                       </xsl:apply-templates>
                                                                                      </xsl:function>
                                                                                     </xsl:variable>
                                                                                    </xsl:function>
                                                                                   </xsl:function>
                                                                                  </xsl:value-of>
                                                                                 </xsl:function>
                                                                                 <xsl:variable name="generated-blank-node" line="291" module="generic.xsl">
                                                                                  <xsl:variable name="generated-blank-node-id" line="298" module="generic.xsl">
                                                                                   <xsl:variable name="subject" line="299" module="generic.xsl">
                                                                                    <xsl:variable name="subject-type" line="300" module="generic.xsl">
                                                                                     <xsl:if test="exists($generated-uri)" line="301" column="36" module="generic.xsl">
                                                                                      <xsl:if test="$nested-call" line="302" column="30" module="generic.xsl">
                                                                                       <xsl:call-template name="krextor:related-via-properties" line="306" column="56" module="generic.xsl">
                                                                                        <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                                                         <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:choose line="212" column="10" module="generic.xsl">
                                                                                          <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                                                           <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                                                            <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                                                             <xsl:variable name="actual-object" line="557" module="generic.xsl">
                                                                                              <xsl:variable name="actual-property" line="560" module="generic.xsl">
                                                                                               <xsl:variable name="actual-inverse" line="562" module="generic.xsl">
                                                                                                <xsl:choose line="563" column="14" module="generic.xsl">
                                                                                                 <xsl:choose line="578" column="15" module="generic.xsl">
                                                                                                  <xsl:for-each select="$actual-property" line="593" column="44" module="generic.xsl">
                                                                                                    <xsl:call-template name="krextor:output-triple-impl" line="594" column="54" module="generic.xsl">
                                                                                                     <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                      <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                      </xsl:if>
                                                                                                      <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                      </xsl:if>
                                                                                                      <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                       <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                        <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                         <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                          <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                          </xsl:attribute>
                                                                                                         </LRE>
                                                                                                         <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                          <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                          </ATTR>
                                                                                                         </LRE>
                                                                                                         <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                          <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                          </xsl:if>
                                                                                                          <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                           <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                                           </xsl:attribute>
                                                                                                          </xsl:choose>
                                                                                                         </LRE>
                                                                                                        </LRE>
                                                                                                       </xsl:template>
                                                                                                      </xsl:call-template>
                                                                                                     </xsl:template>
                                                                                                    </xsl:call-template>
                                                                                                    <xsl:call-template name="krextor:output-triple-impl" line="594" column="54" module="generic.xsl">
                                                                                                     <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                      <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                      </xsl:if>
                                                                                                      <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                      </xsl:if>
                                                                                                      <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                       <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                        <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                         <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                          <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                          </xsl:attribute>
                                                                                                         </LRE>
                                                                                                         <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                          <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                          </ATTR>
                                                                                                         </LRE>
                                                                                                         <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                          <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                          </xsl:if>
                                                                                                          <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                           <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                                           </xsl:attribute>
                                                                                                          </xsl:choose>
                                                                                                         </LRE>
                                                                                                        </LRE>
                                                                                                       </xsl:template>
                                                                                                      </xsl:call-template>
                                                                                                     </xsl:template>
                                                                                                    </xsl:call-template>
                                                                                                  </xsl:for-each>
                                                                                                 </xsl:choose>
                                                                                                </xsl:choose>
                                                                                               </xsl:variable>
                                                                                              </xsl:variable>
                                                                                             </xsl:variable>
                                                                                            </xsl:if>
                                                                                           </xsl:template>
                                                                                          </xsl:call-template>
                                                                                         </xsl:choose>
                                                                                        </xsl:template>
                                                                                       </xsl:call-template>
                                                                                       <xsl:call-template name="krextor:related-via-properties" line="312" column="56" module="generic.xsl">
                                                                                        <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                                                         <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:choose line="212" column="10" module="generic.xsl">
                                                                                          <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                                                           <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                                                            <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                                                            </xsl:if>
                                                                                           </xsl:template>
                                                                                          </xsl:call-template>
                                                                                         </xsl:choose>
                                                                                        </xsl:template>
                                                                                       </xsl:call-template>
                                                                                      </xsl:if>
                                                                                      <xsl:for-each select="$type" line="322" column="31" module="generic.xsl">
                                                                                        <xsl:call-template name="krextor:output-triple-impl" line="323" column="52" module="generic.xsl">
                                                                                         <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                          <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                          </xsl:if>
                                                                                          <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                          </xsl:if>
                                                                                          <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                           <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                            <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                             <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                              <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                              </xsl:attribute>
                                                                                             </LRE>
                                                                                             <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                              <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                              </ATTR>
                                                                                             </LRE>
                                                                                             <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                              <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                              </xsl:if>
                                                                                              <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                               <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                               </xsl:attribute>
                                                                                              </xsl:choose>
                                                                                             </LRE>
                                                                                            </LRE>
                                                                                           </xsl:template>
                                                                                          </xsl:call-template>
                                                                                         </xsl:template>
                                                                                        </xsl:call-template>
                                                                                      </xsl:for-each>
                                                                                      <xsl:if test="$properties" line="333" column="29" module="generic.xsl">
                                                                                      </xsl:if>
                                                                                      <xsl:choose line="357" column="14" module="generic.xsl">
                                                                                       <xsl:apply-templates select="$process-next" mode="krextor:main" line="366" column="67" module="generic.xsl">
                                                                                        <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[1]/@Name" line="-1" file="">
                                                                                         <xsl:template match="@*|text()" mode="krextor:main" line="740" column="54" module="generic.xsl">
                                                                                         </xsl:template>
                                                                                        </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[1]/@Name -->
                                                                                        <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[1]/@RefBaseClassPath" line="-1" file="">
                                                                                         <xsl:template match="@*|text()" mode="krextor:main" line="740" column="54" module="generic.xsl">
                                                                                         </xsl:template>
                                                                                        </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[1]/@RefBaseClassPath -->
                                                                                       </xsl:apply-templates>
                                                                                      </xsl:choose>
                                                                                     </xsl:if>
                                                                                    </xsl:variable>
                                                                                   </xsl:variable>
                                                                                  </xsl:variable>
                                                                                 </xsl:variable>
                                                                                </xsl:variable>
                                                                               </xsl:variable>
                                                                              </xsl:template>
                                                                             </xsl:call-template>
                                                                            </xsl:variable>
                                                                           </xsl:choose>
                                                                          </xsl:template>
                                                                         </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[1] -->
                                                                        </xsl:apply-templates>
                                                                       </xsl:template>
                                                                      </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[1] -->
                                                                      <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[2]" line="-1" file="">
                                                                       <xsl:template match="CAEXFile |CAEXFile/AdditionalInformation |CAEXFile/ExternalReference |CAEXFile/InstanceHierarchy |CAEXFile/RoleClassLib |CAEXFile/SystemUnitClassLib |CAEXFile/InstanceHierarchy/InternalElement |Attribute |RefSemantic |ExternalInterface |SupportedRoleClass |RoleRequirements |InterfaceClassLib |InterfaceClass |RoleClass |SystemUnitClass" mode="krextor:main" line="121" column="45" module="aml.xsl">
                                                                        <xsl:apply-templates select="." mode="krextor:create-resource" line="122" column="69" module="aml.xsl">
                                                                         <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[2]" line="-1" file="">
                                                                          <xsl:template match="*" mode="krextor:create-resource" line="398" column="56" module="generic.xsl">
                                                                           <xsl:choose line="399" column="10" module="generic.xsl">
                                                                            <xsl:variable name="mapping" line="406" module="generic.xsl">
                                                                             <xsl:call-template name="krextor:create-resource" line="408" column="49" module="generic.xsl">
                                                                              <xsl:template name="krextor:create-resource" line="269" column="46" module="generic.xsl">
                                                                               <xsl:variable name="subject" select="()" as="xs:string?" line="270" column="53" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="related-via-properties" as="xs:string*" select="()" tunnel="yes" line="271" column="81" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="related-via-inverse-properties" as="xs:string*" select="()" tunnel="yes" line="272" column="89" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="type" select="()" as="xs:string*" line="273" column="50" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="properties" as="node()*" line="274" column="41" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="process-next" as="node()*" select="*|@*" line="275" column="57" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="subject-uri" as="xs:string" tunnel="yes" line="277" column="57" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="blank-node" as="xs:boolean" select="false()" line="278" column="61" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="this-blank-node-id" select="()" as="xs:string?" line="279" column="64" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="collection" as="xs:boolean" select="false()" line="280" column="61" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="nested-call" as="xs:boolean" select="false()" tunnel="yes" line="281" column="75" module="generic.xsl">
                                                                               </xsl:variable>
                                                                               <xsl:variable name="autogenerate-fragment-uri" line="283" module="generic.xsl">
                                                                                <xsl:variable name="generated-uri" line="290" module="generic.xsl">
                                                                                 <xsl:function name="krextor:uri-generation-method" as="xs:string*" line="292" column="68" module="uri.xsl">
                                                                                  <xsl:apply-templates select="$node" mode="krextor:uri-generation-method" line="295" column="44" module="uri.xsl">
                                                                                   <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[2]" line="-1" file="">
                                                                                    <xsl:template match="node()|attribute() (: attribute() doesn't seem to be subsumed by node() :)" mode="krextor:uri-generation-method" as="xs:string*" line="287" column="68" module="uri.xsl">
                                                                                    </xsl:template>
                                                                                   </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[2] -->
                                                                                  </xsl:apply-templates>
                                                                                 </xsl:function>
                                                                                 <xsl:function name="krextor:generate-uri" as="xs:anyURI?" line="208" column="59" module="uri.xsl">
                                                                                  <xsl:value-of select="f:return-first(krextor:generate-uri-impl(), $autogenerate-fragment-uri, ($node, $base-uri))" line="216" column="114" module="uri.xsl">
                                                                                   <xsl:function name="krextor:generate-uri-impl" as="element(krextor:generate-uri-impl)" line="274" column="88" module="uri.xsl">
                                                                                    <LRE name="krextor:generate-uri-impl" line="275" column="30" module="uri.xsl">
                                                                                    </LRE>
                                                                                   </xsl:function>
                                                                                   <xsl:function name="f:return-first" line="64" column="37" module="util.xsl">
                                                                                    <xsl:function name="f:return-first-step" line="87" column="42" module="util.xsl">
                                                                                     <xsl:variable name="result" line="92" module="util.xsl">
                                                                                      <xsl:function name="f:apply" line="16" column="32" module="func-apply.xsl">
                                                                                       <xsl:apply-templates select="$pFunc" mode="f:FXSL" line="21" column="56" module="func-apply.xsl">
                                                                                        <source node="krextor:generate-uri-impl" line="-1" file="uri.xsl">
                                                                                         <xsl:template match="krextor:generate-uri-impl" as="xs:anyURI?" mode="f:FXSL" line="279" column="79" module="uri.xsl">
                                                                                          <xsl:variable name="arg1" as="xs:string" line="280" column="37" module="uri.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="arg2" as="item()+" line="281" column="35" module="uri.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:function name="krextor:generate-uri-impl" line="226" column="48" module="uri.xsl">
                                                                                           <xsl:variable name="node" line="229" module="uri.xsl">
                                                                                            <xsl:variable name="base-uri" line="230" module="uri.xsl">
                                                                                             <xsl:variable name="method-element" line="231" module="uri.xsl">
                                                                                              <xsl:apply-templates select="$method-element" line="234" column="44" module="uri.xsl">
                                                                                               <xsl:element name="{concat('krextor-genuri:', $method)}" line="232" column="60" module="uri.xsl">
                                                                                               </xsl:element>
                                                                                               <source node="krextor-genuri:global-element-index" line="-1" file="">
                                                                                                <xsl:template match="krextor-genuri:global-element-index" as="xs:string?" line="66" column="79" module="aml.xsl">
                                                                                                 <xsl:variable name="node" as="node()" line="67" column="38" module="aml.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:variable name="base-uri" as="xs:anyURI" line="68" column="45" module="aml.xsl">
                                                                                                 </xsl:variable>
                                                                                                 <xsl:function name="krextor:global-element-index" as="xs:string?" line="60" column="71" module="aml.xsl">
                                                                                                  <xsl:value-of select="concat(local-name($node), count(root($node)//*[local-name() eq local-name($node) and . &lt;&lt; $node]) + 1)" line="62" column="135" module="aml.xsl">
                                                                                                  </xsl:value-of>
                                                                                                 </xsl:function>
                                                                                                </xsl:template>
                                                                                               </source><!-- krextor-genuri:global-element-index -->
                                                                                              </xsl:apply-templates>
                                                                                             </xsl:variable>
                                                                                            </xsl:variable>
                                                                                           </xsl:variable>
                                                                                          </xsl:function>
                                                                                         </xsl:template>
                                                                                        </source><!-- krextor:generate-uri-impl -->
                                                                                       </xsl:apply-templates>
                                                                                      </xsl:function>
                                                                                     </xsl:variable>
                                                                                    </xsl:function>
                                                                                   </xsl:function>
                                                                                  </xsl:value-of>
                                                                                 </xsl:function>
                                                                                 <xsl:variable name="generated-blank-node" line="291" module="generic.xsl">
                                                                                  <xsl:variable name="generated-blank-node-id" line="298" module="generic.xsl">
                                                                                   <xsl:variable name="subject" line="299" module="generic.xsl">
                                                                                    <xsl:variable name="subject-type" line="300" module="generic.xsl">
                                                                                     <xsl:if test="exists($generated-uri)" line="301" column="36" module="generic.xsl">
                                                                                      <xsl:if test="$nested-call" line="302" column="30" module="generic.xsl">
                                                                                       <xsl:call-template name="krextor:related-via-properties" line="306" column="56" module="generic.xsl">
                                                                                        <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                                                         <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:choose line="212" column="10" module="generic.xsl">
                                                                                          <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                                                           <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                                                            <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                                                             <xsl:variable name="actual-object" line="557" module="generic.xsl">
                                                                                              <xsl:variable name="actual-property" line="560" module="generic.xsl">
                                                                                               <xsl:variable name="actual-inverse" line="562" module="generic.xsl">
                                                                                                <xsl:choose line="563" column="14" module="generic.xsl">
                                                                                                 <xsl:choose line="578" column="15" module="generic.xsl">
                                                                                                  <xsl:for-each select="$actual-property" line="593" column="44" module="generic.xsl">
                                                                                                    <xsl:call-template name="krextor:output-triple-impl" line="594" column="54" module="generic.xsl">
                                                                                                     <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                      <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                      </xsl:if>
                                                                                                      <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                      </xsl:if>
                                                                                                      <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                       <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                        <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                         <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                          <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                          </xsl:attribute>
                                                                                                         </LRE>
                                                                                                         <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                          <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                          </ATTR>
                                                                                                         </LRE>
                                                                                                         <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                          <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                          </xsl:if>
                                                                                                          <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                           <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                                           </xsl:attribute>
                                                                                                          </xsl:choose>
                                                                                                         </LRE>
                                                                                                        </LRE>
                                                                                                       </xsl:template>
                                                                                                      </xsl:call-template>
                                                                                                     </xsl:template>
                                                                                                    </xsl:call-template>
                                                                                                    <xsl:call-template name="krextor:output-triple-impl" line="594" column="54" module="generic.xsl">
                                                                                                     <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                                      <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                                      </xsl:variable>
                                                                                                      <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                                      </xsl:if>
                                                                                                      <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                                      </xsl:if>
                                                                                                      <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                                       <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                                        <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                                        </xsl:variable>
                                                                                                        <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                                         <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                                          <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                                          </xsl:attribute>
                                                                                                         </LRE>
                                                                                                         <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                                          <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                                          </ATTR>
                                                                                                         </LRE>
                                                                                                         <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                                          <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                                          </xsl:if>
                                                                                                          <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                                           <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                                           </xsl:attribute>
                                                                                                          </xsl:choose>
                                                                                                         </LRE>
                                                                                                        </LRE>
                                                                                                       </xsl:template>
                                                                                                      </xsl:call-template>
                                                                                                     </xsl:template>
                                                                                                    </xsl:call-template>
                                                                                                  </xsl:for-each>
                                                                                                 </xsl:choose>
                                                                                                </xsl:choose>
                                                                                               </xsl:variable>
                                                                                              </xsl:variable>
                                                                                             </xsl:variable>
                                                                                            </xsl:if>
                                                                                           </xsl:template>
                                                                                          </xsl:call-template>
                                                                                         </xsl:choose>
                                                                                        </xsl:template>
                                                                                       </xsl:call-template>
                                                                                       <xsl:call-template name="krextor:related-via-properties" line="312" column="56" module="generic.xsl">
                                                                                        <xsl:template name="krextor:related-via-properties" line="204" column="53" module="generic.xsl">
                                                                                         <xsl:variable name="properties" as="xs:string*" select="()" line="205" column="56" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="inverse" as="xs:boolean" select="false()" line="206" column="58" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="blank-node" as="xs:boolean" line="209" column="44" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="generated-blank-node-id" as="xs:string" line="210" column="56" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:variable name="generated-uri" as="xs:anyURI" line="211" column="46" module="generic.xsl">
                                                                                         </xsl:variable>
                                                                                         <xsl:choose line="212" column="10" module="generic.xsl">
                                                                                          <xsl:call-template name="krextor:add-uri-property" line="221" column="50" module="generic.xsl">
                                                                                           <xsl:template name="krextor:add-uri-property" line="524" column="47" module="generic.xsl">
                                                                                            <xsl:variable name="subject-uri" as="xs:anyURI" tunnel="yes" line="525" column="57" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="blank-node-id" as="xs:string?" tunnel="yes" line="526" column="60" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="property" as="xs:string*" line="527" column="42" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="tunneled-property" as="xs:anyURI*" tunnel="yes" line="529" column="64" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="inverse" as="xs:boolean" select="false()" line="531" column="58" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="tunneled-inverse" as="xs:boolean" select="false()" tunnel="yes" line="533" column="80" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object-is-list" as="xs:boolean" select="false()" line="537" column="65" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="iri" as="xs:boolean" select="false()" line="539" column="54" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object" select="if (krextor:is-text-or-attribute-or-atomic(.)) then if ($object-is-list) then . else krextor:resolve-uri( if ($iri) then xs:anyURI(iri-to-uri(.)) else ., $subject-uri) (: What is this resolution good for? MMT? Anyway, if needed, we could also resolve each list item by for - in - return :) else if (parent::node() instance of document-node()) then krextor:base-uri(.) else ''" line="552" column="17" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="blank" as="xs:string?" line="554" column="39" module="generic.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:if test="($blank or exists($object)) and (exists($property) or exists($tunneled-property))" line="555" column="95" module="generic.xsl">
                                                                                            </xsl:if>
                                                                                           </xsl:template>
                                                                                          </xsl:call-template>
                                                                                         </xsl:choose>
                                                                                        </xsl:template>
                                                                                       </xsl:call-template>
                                                                                      </xsl:if>
                                                                                      <xsl:for-each select="$type" line="322" column="31" module="generic.xsl">
                                                                                        <xsl:call-template name="krextor:output-triple-impl" line="323" column="52" module="generic.xsl">
                                                                                         <xsl:template name="krextor:output-triple-impl" line="137" column="49" module="generic.xsl">
                                                                                          <xsl:variable name="subject" as="xs:string" required="yes" line="138" column="55" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="subject-type" as="xs:string" select="'uri'" line="139" column="60" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="predicate" as="xs:anyURI" required="yes" line="141" column="57" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="object" required="yes" line="143" column="39" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="object-type" as="xs:string" select="''" line="144" column="56" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="object-language" as="xs:string?" line="145" column="49" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="object-datatype" as="xs:string?" line="146" column="49" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:variable name="krextor:base-uri" as="xs:anyURI" tunnel="yes" line="148" column="62" module="generic.xsl">
                                                                                          </xsl:variable>
                                                                                          <xsl:if test="not($subject-type = ('uri', 'blank'))" line="162" column="51" module="generic.xsl">
                                                                                          </xsl:if>
                                                                                          <xsl:if test="not($object-type = ('uri', 'blank', ''))" line="165" column="54" module="generic.xsl">
                                                                                          </xsl:if>
                                                                                          <xsl:call-template name="krextor:output-triple" line="170" column="46" module="generic.xsl">
                                                                                           <xsl:template name="krextor:output-triple" line="67" column="44" module="rxr.xsl">
                                                                                            <xsl:variable name="subject" line="68" column="25" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="subject-type" line="69" column="30" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="predicate" line="71" column="27" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object" line="73" column="24" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object-type" line="74" column="29" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object-language" line="75" column="33" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <xsl:variable name="object-datatype" line="76" column="33" module="rxr.xsl">
                                                                                            </xsl:variable>
                                                                                            <LRE name="rxr:triple" line="78" column="14" module="rxr.xsl">
                                                                                             <LRE name="rxr:subject" line="79" column="19" module="rxr.xsl">
                                                                                              <xsl:attribute name="{$subject-type}" select="$subject" line="80" column="56" module="rxr.xsl">
                                                                                              </xsl:attribute>
                                                                                             </LRE>
                                                                                             <LRE name="rxr:predicate" line="82" column="41" module="rxr.xsl">
                                                                                              <ATTR name="uri" line="82" module="rxr.xsl">
                                                                                              </ATTR>
                                                                                             </LRE>
                                                                                             <LRE name="rxr:object" line="83" column="18" module="rxr.xsl">
                                                                                              <xsl:if test="$object-language" line="84" column="31" module="rxr.xsl">
                                                                                              </xsl:if>
                                                                                              <xsl:choose line="87" column="11" module="rxr.xsl">
                                                                                               <xsl:attribute name="{$object-type}" select="$object" line="89" column="55" module="rxr.xsl">
                                                                                               </xsl:attribute>
                                                                                              </xsl:choose>
                                                                                             </LRE>
                                                                                            </LRE>
                                                                                           </xsl:template>
                                                                                          </xsl:call-template>
                                                                                         </xsl:template>
                                                                                        </xsl:call-template>
                                                                                      </xsl:for-each>
                                                                                      <xsl:if test="$properties" line="333" column="29" module="generic.xsl">
                                                                                      </xsl:if>
                                                                                      <xsl:choose line="357" column="14" module="generic.xsl">
                                                                                       <xsl:apply-templates select="$process-next" mode="krextor:main" line="366" column="67" module="generic.xsl">
                                                                                        <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[2]/@Name" line="-1" file="">
                                                                                         <xsl:template match="@*|text()" mode="krextor:main" line="740" column="54" module="generic.xsl">
                                                                                         </xsl:template>
                                                                                        </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[2]/@Name -->
                                                                                        <source node="/CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[2]/@RefBaseClassPath" line="-1" file="">
                                                                                         <xsl:template match="@*|text()" mode="krextor:main" line="740" column="54" module="generic.xsl">
                                                                                         </xsl:template>
                                                                                        </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[2]/@RefBaseClassPath -->
                                                                                       </xsl:apply-templates>
                                                                                      </xsl:choose>
                                                                                     </xsl:if>
                                                                                    </xsl:variable>
                                                                                   </xsl:variable>
                                                                                  </xsl:variable>
                                                                                 </xsl:variable>
                                                                                </xsl:variable>
                                                                               </xsl:variable>
                                                                              </xsl:template>
                                                                             </xsl:call-template>
                                                                            </xsl:variable>
                                                                           </xsl:choose>
                                                                          </xsl:template>
                                                                         </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[2] -->
                                                                        </xsl:apply-templates>
                                                                       </xsl:template>
                                                                      </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1]/RoleClass[2] -->
                                                                     </xsl:apply-templates>
                                                                    </xsl:choose>
                                                                   </xsl:if>
                                                                  </xsl:variable>
                                                                 </xsl:variable>
                                                                </xsl:variable>
                                                               </xsl:variable>
                                                              </xsl:variable>
                                                             </xsl:variable>
                                                            </xsl:template>
                                                           </xsl:call-template>
                                                          </xsl:variable>
                                                         </xsl:choose>
                                                        </xsl:template>
                                                       </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1] -->
                                                      </xsl:apply-templates>
                                                     </xsl:template>
                                                    </source><!-- /CAEXFile/RoleClassLib[1]/RoleClass[1] -->
                                                   </xsl:apply-templates>
                                                  </xsl:choose>
                                                 </xsl:if>
                                                </xsl:variable>
                                               </xsl:variable>
                                              </xsl:variable>
                                             </xsl:variable>
                                            </xsl:variable>
                                           </xsl:variable>
                                          </xsl:template>
                                         </xsl:call-template>
                                        </xsl:variable>
                                       </xsl:choose>
                                      </xsl:template>
                                     </source><!-- /CAEXFile/RoleClassLib[1] -->
                                    </xsl:apply-templates>
                                   </xsl:template>
                                  </source><!-- /CAEXFile/RoleClassLib[1] -->
                                 </xsl:apply-templates>
                                </xsl:choose>
                               </xsl:if>
                              </xsl:variable>
                             </xsl:variable>
                            </xsl:variable>
                           </xsl:variable>
                          </xsl:variable>
                         </xsl:variable>
                        </xsl:template>
                       </xsl:call-template>
                      </xsl:variable>
                     </xsl:choose>
                    </xsl:template>
                   </source><!-- /CAEXFile -->
                  </xsl:apply-templates>
                 </xsl:template>
                </source><!-- /CAEXFile -->
               </xsl:apply-templates>
               <xsl:if test="$merging-rdf" line="721" column="33" module="generic.xsl">
               </xsl:if>
              </xsl:template>
             </xsl:apply-imports>
            </LRE>
           </xsl:template>
          </xsl:apply-imports>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
           <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
            <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
             <xsl:choose line="58" column="10" module="turtle.xsl">
              <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
               <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                </xsl:value-of>
               </xsl:function>
              </xsl:value-of>
             </xsl:choose>
            </xsl:function>
           </xsl:value-of>
          </xsl:function>
          <source node="/rxr:graph/rxr:triple[1]" line="-1" file="">
           <xsl:value-of select="current-grouping-key()" line="86" column="49" module="turtle.xsl">
           </xsl:value-of>
           <xsl:text line="87" column="12" module="turtle.xsl">
           </xsl:text>
           <xsl:for-each-group select="current-group()" group-by="rxr:predicate/@uri" line="88" column="77" module="turtle.xsl">
            <source node="/rxr:graph/rxr:triple[1]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[1]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[1]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[1] -->
            <source node="/rxr:graph/rxr:triple[2]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[2]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[2]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[2] -->
            <source node="/rxr:graph/rxr:triple[3]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[3]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[3]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[3] -->
            <source node="/rxr:graph/rxr:triple[4]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[4]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[4]/rxr:object[1] -->
              <source node="/rxr:graph/rxr:triple[7]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[7]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[4] -->
            <source node="/rxr:graph/rxr:triple[18]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[18]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[18]/rxr:object[1] -->
              <source node="/rxr:graph/rxr:triple[22]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[22]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[18] -->
            <source node="/rxr:graph/rxr:triple[26]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[26]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[26]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[26] -->
           </xsl:for-each-group>
          </source><!-- /rxr:graph/rxr:triple[1] -->
          <source node="/rxr:graph/rxr:triple[5]" line="-1" file="">
           <xsl:value-of select="current-grouping-key()" line="86" column="49" module="turtle.xsl">
           </xsl:value-of>
           <xsl:text line="87" column="12" module="turtle.xsl">
           </xsl:text>
           <xsl:for-each-group select="current-group()" group-by="rxr:predicate/@uri" line="88" column="77" module="turtle.xsl">
            <source node="/rxr:graph/rxr:triple[5]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[5]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[5]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[5] -->
            <source node="/rxr:graph/rxr:triple[6]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[6]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[6]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[6] -->
           </xsl:for-each-group>
          </source><!-- /rxr:graph/rxr:triple[5] -->
          <source node="/rxr:graph/rxr:triple[8]" line="-1" file="">
           <xsl:value-of select="current-grouping-key()" line="86" column="49" module="turtle.xsl">
           </xsl:value-of>
           <xsl:text line="87" column="12" module="turtle.xsl">
           </xsl:text>
           <xsl:for-each-group select="current-group()" group-by="rxr:predicate/@uri" line="88" column="77" module="turtle.xsl">
            <source node="/rxr:graph/rxr:triple[8]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[8]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[8]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[8] -->
            <source node="/rxr:graph/rxr:triple[9]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[9]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[9]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[9] -->
            <source node="/rxr:graph/rxr:triple[10]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[10]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[10]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[10] -->
            <source node="/rxr:graph/rxr:triple[11]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[11]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[11]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[11] -->
            <source node="/rxr:graph/rxr:triple[12]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[12]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[12]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[12] -->
            <source node="/rxr:graph/rxr:triple[13]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[13]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[13]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[13] -->
            <source node="/rxr:graph/rxr:triple[14]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[14]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[14]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[14] -->
            <source node="/rxr:graph/rxr:triple[15]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[15]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[15]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[15] -->
            <source node="/rxr:graph/rxr:triple[16]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[16]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[16]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[16] -->
            <source node="/rxr:graph/rxr:triple[17]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[17]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[17]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[17] -->
           </xsl:for-each-group>
          </source><!-- /rxr:graph/rxr:triple[8] -->
          <source node="/rxr:graph/rxr:triple[19]" line="-1" file="">
           <xsl:value-of select="current-grouping-key()" line="86" column="49" module="turtle.xsl">
           </xsl:value-of>
           <xsl:text line="87" column="12" module="turtle.xsl">
           </xsl:text>
           <xsl:for-each-group select="current-group()" group-by="rxr:predicate/@uri" line="88" column="77" module="turtle.xsl">
            <source node="/rxr:graph/rxr:triple[19]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[19]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[19]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[19] -->
            <source node="/rxr:graph/rxr:triple[20]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[20]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[20]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[20] -->
            <source node="/rxr:graph/rxr:triple[21]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[21]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[21]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[21] -->
           </xsl:for-each-group>
          </source><!-- /rxr:graph/rxr:triple[19] -->
          <source node="/rxr:graph/rxr:triple[23]" line="-1" file="">
           <xsl:value-of select="current-grouping-key()" line="86" column="49" module="turtle.xsl">
           </xsl:value-of>
           <xsl:text line="87" column="12" module="turtle.xsl">
           </xsl:text>
           <xsl:for-each-group select="current-group()" group-by="rxr:predicate/@uri" line="88" column="77" module="turtle.xsl">
            <source node="/rxr:graph/rxr:triple[23]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[23]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[23]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[23] -->
            <source node="/rxr:graph/rxr:triple[24]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[24]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[24]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[24] -->
            <source node="/rxr:graph/rxr:triple[25]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[25]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[25]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[25] -->
           </xsl:for-each-group>
          </source><!-- /rxr:graph/rxr:triple[23] -->
          <source node="/rxr:graph/rxr:triple[27]" line="-1" file="">
           <xsl:value-of select="current-grouping-key()" line="86" column="49" module="turtle.xsl">
           </xsl:value-of>
           <xsl:text line="87" column="12" module="turtle.xsl">
           </xsl:text>
           <xsl:for-each-group select="current-group()" group-by="rxr:predicate/@uri" line="88" column="77" module="turtle.xsl">
            <source node="/rxr:graph/rxr:triple[27]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[27]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[27]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[27] -->
            <source node="/rxr:graph/rxr:triple[28]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[28]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[28]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[28] -->
            <source node="/rxr:graph/rxr:triple[29]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[29]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[29]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[29] -->
            <source node="/rxr:graph/rxr:triple[30]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[30]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[30]/rxr:object[1] -->
              <source node="/rxr:graph/rxr:triple[31]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[31]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[30] -->
           </xsl:for-each-group>
          </source><!-- /rxr:graph/rxr:triple[27] -->
          <source node="/rxr:graph/rxr:triple[32]" line="-1" file="">
           <xsl:value-of select="current-grouping-key()" line="86" column="49" module="turtle.xsl">
           </xsl:value-of>
           <xsl:text line="87" column="12" module="turtle.xsl">
           </xsl:text>
           <xsl:for-each-group select="current-group()" group-by="rxr:predicate/@uri" line="88" column="77" module="turtle.xsl">
            <source node="/rxr:graph/rxr:triple[32]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[32]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[32]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[32] -->
            <source node="/rxr:graph/rxr:triple[33]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[33]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[33]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[33] -->
            <source node="/rxr:graph/rxr:triple[34]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[34]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[34]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[34] -->
            <source node="/rxr:graph/rxr:triple[35]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[35]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[35]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[35] -->
            <source node="/rxr:graph/rxr:triple[57]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[57]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[57]/rxr:object[1] -->
              <source node="/rxr:graph/rxr:triple[58]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[58]/rxr:object[1] -->
              <source node="/rxr:graph/rxr:triple[60]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[60]/rxr:object[1] -->
              <source node="/rxr:graph/rxr:triple[61]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[61]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[57] -->
           </xsl:for-each-group>
          </source><!-- /rxr:graph/rxr:triple[32] -->
          <source node="/rxr:graph/rxr:triple[36]" line="-1" file="">
           <xsl:value-of select="current-grouping-key()" line="86" column="49" module="turtle.xsl">
           </xsl:value-of>
           <xsl:text line="87" column="12" module="turtle.xsl">
           </xsl:text>
           <xsl:for-each-group select="current-group()" group-by="rxr:predicate/@uri" line="88" column="77" module="turtle.xsl">
            <source node="/rxr:graph/rxr:triple[36]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[36]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[36]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[36] -->
            <source node="/rxr:graph/rxr:triple[37]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[37]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[37]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[37] -->
            <source node="/rxr:graph/rxr:triple[38]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[38]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[38]/rxr:object[1] -->
              <source node="/rxr:graph/rxr:triple[42]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[42]/rxr:object[1] -->
              <source node="/rxr:graph/rxr:triple[46]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[46]/rxr:object[1] -->
              <source node="/rxr:graph/rxr:triple[50]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[50]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[38] -->
            <source node="/rxr:graph/rxr:triple[54]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[54]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[54]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[54] -->
           </xsl:for-each-group>
          </source><!-- /rxr:graph/rxr:triple[36] -->
          <source node="/rxr:graph/rxr:triple[39]" line="-1" file="">
           <xsl:value-of select="current-grouping-key()" line="86" column="49" module="turtle.xsl">
           </xsl:value-of>
           <xsl:text line="87" column="12" module="turtle.xsl">
           </xsl:text>
           <xsl:for-each-group select="current-group()" group-by="rxr:predicate/@uri" line="88" column="77" module="turtle.xsl">
            <source node="/rxr:graph/rxr:triple[39]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[39]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[39]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[39] -->
            <source node="/rxr:graph/rxr:triple[40]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[40]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[40]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[40] -->
            <source node="/rxr:graph/rxr:triple[41]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[41]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[41]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[41] -->
           </xsl:for-each-group>
          </source><!-- /rxr:graph/rxr:triple[39] -->
          <source node="/rxr:graph/rxr:triple[43]" line="-1" file="">
           <xsl:value-of select="current-grouping-key()" line="86" column="49" module="turtle.xsl">
           </xsl:value-of>
           <xsl:text line="87" column="12" module="turtle.xsl">
           </xsl:text>
           <xsl:for-each-group select="current-group()" group-by="rxr:predicate/@uri" line="88" column="77" module="turtle.xsl">
            <source node="/rxr:graph/rxr:triple[43]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[43]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[43]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[43] -->
            <source node="/rxr:graph/rxr:triple[44]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[44]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[44]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[44] -->
            <source node="/rxr:graph/rxr:triple[45]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[45]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[45]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[45] -->
           </xsl:for-each-group>
          </source><!-- /rxr:graph/rxr:triple[43] -->
          <source node="/rxr:graph/rxr:triple[47]" line="-1" file="">
           <xsl:value-of select="current-grouping-key()" line="86" column="49" module="turtle.xsl">
           </xsl:value-of>
           <xsl:text line="87" column="12" module="turtle.xsl">
           </xsl:text>
           <xsl:for-each-group select="current-group()" group-by="rxr:predicate/@uri" line="88" column="77" module="turtle.xsl">
            <source node="/rxr:graph/rxr:triple[47]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[47]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[47]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[47] -->
            <source node="/rxr:graph/rxr:triple[48]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[48]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[48]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[48] -->
            <source node="/rxr:graph/rxr:triple[49]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[49]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[49]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[49] -->
           </xsl:for-each-group>
          </source><!-- /rxr:graph/rxr:triple[47] -->
          <source node="/rxr:graph/rxr:triple[51]" line="-1" file="">
           <xsl:value-of select="current-grouping-key()" line="86" column="49" module="turtle.xsl">
           </xsl:value-of>
           <xsl:text line="87" column="12" module="turtle.xsl">
           </xsl:text>
           <xsl:for-each-group select="current-group()" group-by="rxr:predicate/@uri" line="88" column="77" module="turtle.xsl">
            <source node="/rxr:graph/rxr:triple[51]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[51]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[51]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[51] -->
            <source node="/rxr:graph/rxr:triple[52]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[52]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[52]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[52] -->
            <source node="/rxr:graph/rxr:triple[53]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[53]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[53]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[53] -->
           </xsl:for-each-group>
          </source><!-- /rxr:graph/rxr:triple[51] -->
          <source node="/rxr:graph/rxr:triple[55]" line="-1" file="">
           <xsl:value-of select="current-grouping-key()" line="86" column="49" module="turtle.xsl">
           </xsl:value-of>
           <xsl:text line="87" column="12" module="turtle.xsl">
           </xsl:text>
           <xsl:for-each-group select="current-group()" group-by="rxr:predicate/@uri" line="88" column="77" module="turtle.xsl">
            <source node="/rxr:graph/rxr:triple[55]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[55]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[55]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[55] -->
            <source node="/rxr:graph/rxr:triple[56]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[56]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:literal-to-turtle" as="xs:string" line="124" column="63" module="turtle.xsl">
                 <xsl:value-of select="concat( (: the value :) krextor:construct-turtle-string($value), (: the language or datatype annotation :) krextor:lang-datatype-to-turtle($lang, $datatype))" line="132" column="60" module="turtle.xsl">
                  <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="113" column="69" module="turtle.xsl">
                   <xsl:value-of select="krextor:construct-turtle-string($value, true())" line="116" column="63" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-string" as="xs:string" line="102" column="69" module="turtle.xsl">
                     <xsl:value-of select="if ($allow-multiline and contains($value, ' ')) then concat('&#34;&#34;&#34;', krextor:escape-turtle-string($value, true()), '&#34;&#34;&#34;') else concat('&#34;', krextor:escape-turtle-string($value, false()), '&#34;')" line="109" column="17" module="turtle.xsl">
                      <xsl:function name="krextor:escape-turtle-string" as="xs:string" line="85" column="66" module="turtle.xsl">
                       <xsl:variable name="escaped-with-multiline" line="96" module="turtle.xsl">
                        <xsl:value-of select="if ($allow-multiline) then $escaped-with-multiline else replace($escaped-with-multiline, ' ', '\\n')" line="98" column="70" module="turtle.xsl">
                        </xsl:value-of>
                       </xsl:variable>
                      </xsl:function>
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                  <xsl:function name="krextor:lang-datatype-to-turtle" as="xs:string" line="74" column="69" module="turtle.xsl">
                   <xsl:value-of select="if ($lang) then concat('@', $lang) else if ($datatype) then concat('^^', krextor:construct-turtle-uri($datatype)) else ''" line="81" column="17" module="turtle.xsl">
                    <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                     <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                     </xsl:value-of>
                    </xsl:function>
                   </xsl:value-of>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[56]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[56] -->
           </xsl:for-each-group>
          </source><!-- /rxr:graph/rxr:triple[55] -->
          <source node="/rxr:graph/rxr:triple[59]" line="-1" file="">
           <xsl:value-of select="current-grouping-key()" line="86" column="49" module="turtle.xsl">
           </xsl:value-of>
           <xsl:text line="87" column="12" module="turtle.xsl">
           </xsl:text>
           <xsl:for-each-group select="current-group()" group-by="rxr:predicate/@uri" line="88" column="77" module="turtle.xsl">
            <source node="/rxr:graph/rxr:triple[59]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[59]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[59]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[59] -->
           </xsl:for-each-group>
          </source><!-- /rxr:graph/rxr:triple[59] -->
          <source node="/rxr:graph/rxr:triple[62]" line="-1" file="">
           <xsl:value-of select="current-grouping-key()" line="86" column="49" module="turtle.xsl">
           </xsl:value-of>
           <xsl:text line="87" column="12" module="turtle.xsl">
           </xsl:text>
           <xsl:for-each-group select="current-group()" group-by="rxr:predicate/@uri" line="88" column="77" module="turtle.xsl">
            <source node="/rxr:graph/rxr:triple[62]" line="-1" file="">
             <xsl:text line="89" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:value-of select="krextor:pretty-predicate(current-grouping-key())" line="91" column="72" module="turtle.xsl">
              <xsl:function name="krextor:pretty-predicate" line="57" column="47" module="turtle.xsl">
               <xsl:value-of select="if ($predicate eq 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type') then 'a' else concat('&lt;', $predicate, '&gt;')" line="60" column="49" module="turtle.xsl">
               </xsl:value-of>
              </xsl:function>
             </xsl:value-of>
             <xsl:text line="92" column="9" module="turtle.xsl">
             </xsl:text>
             <xsl:for-each select="current-group()/rxr:object" line="93" column="49" module="turtle.xsl">
              <source node="/rxr:graph/rxr:triple[62]/rxr:object[1]" line="-1" file="">
               <xsl:value-of select="if (@uri|@blank) then krextor:rxr-node-to-turtle(.) else krextor:literal-to-turtle(., @xml:lang, @datatype)" line="98" column="62" module="turtle.xsl">
                <xsl:function name="krextor:rxr-node-to-turtle" as="xs:string" line="64" column="64" module="turtle.xsl">
                 <xsl:value-of select="krextor:node-id-to-turtle( if ($element/@uri) then $element/@uri else if ($element/@blank) then $element/@blank else '', if ($element/@uri) then 'uri' else if ($element/@blank) then 'blank' else '' )" line="73" column="11" module="turtle.xsl">
                  <xsl:function name="krextor:node-id-to-turtle" as="xs:string" line="55" column="63" module="turtle.xsl">
                   <xsl:choose line="58" column="10" module="turtle.xsl">
                    <xsl:value-of select="krextor:construct-turtle-uri($id)" line="60" column="57" module="turtle.xsl">
                     <xsl:function name="krextor:construct-turtle-uri" as="xs:string" line="49" column="66" module="turtle.xsl">
                      <xsl:value-of select="concat('&lt;', $uri, '&gt;')" line="51" column="58" module="turtle.xsl">
                      </xsl:value-of>
                     </xsl:function>
                    </xsl:value-of>
                   </xsl:choose>
                  </xsl:function>
                 </xsl:value-of>
                </xsl:function>
               </xsl:value-of>
               <xsl:value-of select="if (position() ne last()) then ', ' else ' '" line="99" column="72" module="turtle.xsl">
               </xsl:value-of>
              </source><!-- /rxr:graph/rxr:triple[62]/rxr:object[1] -->
             </xsl:for-each>
             <xsl:value-of select="if (position() ne last()) then ';' else '.'" line="101" column="67" module="turtle.xsl">
             </xsl:value-of>
             <xsl:text line="102" column="9" module="turtle.xsl">
             </xsl:text>
            </source><!-- /rxr:graph/rxr:triple[62] -->
           </xsl:for-each-group>
          </source><!-- /rxr:graph/rxr:triple[62] -->
         </xsl:for-each-group>
        </xsl:variable>
       </xsl:template>
      </xsl:apply-imports>
     </xsl:template>
    </source><!-- / -->
   </xsl:apply-templates>
  </xsl:template>
 </source><!-- / -->
</trace>
